{"version":3,"sources":["api/lives.js","views/events/EventListView/Header.js","views/events/EventListView/Results.js","views/events/EventListView/index.js"],"names":["listAllContent","schoolid","a","querySnapshot","app","firestore","collection","doc","where","orderBy","get","content","docs","map","id","data","console","log","sendNotify","process","axios","method","url","live_event_id","options","headers","result","addContent","values","image","detail","content_type","status","school","type","created_at","getFirestore","FieldValue","serverTimestamp","arr","tags","filter","item","add","contentRef","set","contentData","metadata","contentType","cover_url","storageRef","storage","ref","uploadTask","child","put","on","getStorage","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","then","downloadURL","cover","update","deleteContents","ids","foundURL","delete","err","getContentApi","querySnapshotDetail","contentDetail","updateContent","useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","Header","className","rest","classes","Grid","clsx","container","justify","Breadcrumbs","separator","fontSize","Link","variant","color","to","component","RouterLink","Typography","Button","startIcon","SvgIcon","tabs","value","label","sortOptions","descendingComparator","b","applySort","events","sort","split","comparator","order","getComparator","stabilizedThis","el","index","queryField","width","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","backgroundColor","palette","background","default","bulkAction","avatar","height","marginRight","Results","history","useHistory","useState","openDialog","setOpenDialog","currentTab","setCurrentTab","selectedEvents","setSelectedEvents","enqueueSnackbar","useSnackbar","handleClose","page","setPage","limit","setLimit","query","setQuery","setSort","hasAcceptedMarketing","isProspect","isReturning","filters","setFilters","handleSelectAllEvents","event","target","checked","filteredEvents","matches","containsQuery","forEach","property","toLowerCase","includes","Object","keys","key","applyFilters","paginatedEvents","slice","applyPagination","enableBulkOperations","length","selectedSomeEvents","selectedAllEvents","isExportSuccess","setStatusExport","Card","Tabs","onChange","updatedFilters","scrollButtons","textColor","tab","Tab","Divider","Box","p","minHeight","display","alignItems","TextField","InputProps","startAdornment","InputAdornment","persist","placeholder","flexGrow","name","select","SelectProps","native","option","Checkbox","indeterminate","onClick","deleteEvents","push","minWidth","Table","TableHead","TableRow","TableCell","padding","align","TableBody","reactions","upvotes","downvotes","isEventSelected","hover","selected","eventId","prevSelected","title","start_at","toDate","toISOString","end_at","IconButton","exportEvent","setTimeout","Dialog","open","onClose","DialogTitle","style","cursor","DialogContent","DialogContentText","DialogActions","autoFocus","error_code","message","alert","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","dark","paddingTop","paddingBottom","EventListView","isMountedRef","useIsMountedRef","setEvents","getEvents","useCallback","listAllEvent","current","useEffect","Page","Container","maxWidth","mt"],"mappings":"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","file":"static/js/112.7d308be6.chunk.js","sourcesContent":["import app from './_firebase';\n\nimport {getFirestore} from 'firebase/firestore'\nimport {getStorage} from 'firebase/storage'\nimport axios from 'axios';\n\nexport const listAllContent = async (schoolid) => {\n  try {\n    let querySnapshot = null;\n    if (schoolid) {\n      querySnapshot = await app.firestore().collection('schools').doc(schoolid).collection('live_events').where('type','==','live_class').orderBy('created_at', 'desc').get();\n    } else {\n      querySnapshot = await app.firestore().collection('live_events').where('type','in',['live_class','school_live_class']).orderBy('created_at', 'desc').get();\n    }\n    const content = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      };\n    });\n    return content;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const sendNotify  = async(id)=>{\n  // try {\n    console.log(process.env.REACT_APP_SERVER_URL+'/api/sendnoti');\n    let result = await  axios({\n      method: 'post',\n      url: process.env.REACT_APP_SERVER_URL+'/api/sendnoti',\n      data: {\n        live_event_id: id,\n        options: 'keep_time'\n      },\n      headers:{\n        'Authorization': 'Bearer f56e78db35ab4ff8c915facfa644c4ad25b6358b'\n      }\n    });\n    console.log(result);\n    return result;\n  // }catch (err){\n  //   console.log(err);\n  // }\n};\n\n\nexport const addContent = async (values, image) => {\n\n  try {\n    let detail = ' <news content-type=\\'news\\'>' + values.detail + '</news>';\n    delete values.detail;\n    values.content_type = 'live_events';\n    values.status = 0;\n    if(typeof values.school.id!=='undefined') {\n      values.type = 'school_live_class'\n    }else{\n      values.type = 'live_class';\n    }\n    values.created_at = getFirestore().FieldValue.serverTimestamp();\n    let arr = values.tags;\n    arr = arr.filter(item => item);\n    values.tags = arr;\n    console.log(values);\n    let contentRef = await app.firestore().collection('live_events').add(values);\n\n    let content = await contentRef.get();\n    console.log('done content:' + content.id);\n    contentRef.collection('detail').doc('content').set({ data: detail });\n    let contentData = content.data();\n\n    if (typeof (image) == 'undefined') {\n      return;\n    }\n    var metadata = {\n      contentType: 'image/jpeg'\n    };\n    let cover_url = 'public/images/content/' + content.id;\n    var storageRef = app.storage().ref();\n    var uploadTask = storageRef.child(cover_url).put(image, metadata);\n    uploadTask.on(getStorage().TaskEvent.STATE_CHANGED, // or 'state_changed'\n      function(snapshot) {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload cover is ' + progress + '% done');\n        switch (snapshot.state) {\n          case getStorage().TaskState.PAUSED: // or 'paused'\n            console.log('Upload cover is paused');\n            break;\n          case getStorage().TaskState.RUNNING: // or 'running'\n            console.log('Upload cover is running');\n            break;\n        }\n      },\n      function(error) {\n\n        switch (error.code) {\n          case 'storage/unauthorized':\n            console.log('unauthorized');\n            break;\n          case 'storage/canceled':\n            console.log('cancel');\n            break;\n          case 'storage/unknown':\n\n            console.log('unkonwn');\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      },\n      function() {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n          console.log('File available at', downloadURL);\n          contentData.cover = downloadURL;\n          app.firestore().collection('live_events').doc(content.id).update(contentData);\n        });\n      });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteContents = (ids) => {\n  try {\n    ids.map((id) => {\n      let cover_url = 'public/images/content/' + id;\n      var storageRef = app.storage().ref();\n      storageRef.child(cover_url).getDownloadURL().then(onResolve, onReject);\n\n      function onResolve(foundURL) {\n        storageRef.child(cover_url).delete();\n      }\n\n      function onReject(error) {\n        console.log(error.code);\n      }\n\n      app.firestore().collection('live_events').doc(id).collection('detail').doc('content').delete();\n      app.firestore().collection('live_events').doc(id).delete();\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nexport const getContentApi = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('live_events').doc(id).get();\n    const content = querySnapshot.data();\n    content.id = id;\n    let querySnapshotDetail = await app.firestore().collection('live_events').doc(id).collection('detail').doc('content').get();\n    const contentDetail = querySnapshotDetail.data();\n    content.detail = contentDetail.data;\n    return content;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateContent = async (data, image) => {\n  try {\n    console.log('update contents');\n    let id = data.id;\n    let detail = ' <news content-type=\\'news\\'>' + data.detail + '</news>';\n    delete data.detail;\n    data.content_type = 'live_events';\n    if(typeof data.school.id!=='undefined') {\n      data.type = 'school_live_class'\n    }else{\n      data.type = 'live_class';\n    }\n    let arr = data.tags;\n    arr = arr.filter(item => item);\n    data.tags = arr;\n    console.log(data);\n    await app.firestore().collection('live_events').doc(id).update(data);\n    await app.firestore().collection('live_events').doc(id).collection('detail').doc('content').update({ data: detail });\n    if (typeof (image) == 'undefined') {\n      return;\n    }\n    if (data.cover) {\n\n    }\n    var metadata = {\n      contentType: 'image/jpeg'\n    };\n    let cover_url = 'public/images/content/' + data.id;\n    var storageRef = app.storage().ref();\n    var uploadTask = storageRef.child(cover_url).put(image, metadata);\n    uploadTask.on(getStorage().TaskEvent.STATE_CHANGED, // or 'state_changed'\n      function(snapshot) {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload cover is ' + progress + '% done');\n        switch (snapshot.state) {\n          case getStorage().TaskState.PAUSED: // or 'paused'\n            console.log('Upload cover is paused');\n            break;\n          case getStorage().TaskState.RUNNING: // or 'running'\n            console.log('Upload cover is running');\n            break;\n        }\n      },\n      function(error) {\n\n        switch (error.code) {\n          case 'storage/unauthorized':\n            console.log('unauthorized');\n            break;\n          case 'storage/canceled':\n            console.log('cancel');\n            break;\n          case 'storage/unknown':\n\n            console.log('unkonwn');\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      },\n      function() {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n          console.log('File available at', downloadURL);\n          data.cover = downloadURL;\n          app.firestore().collection('live_events').doc(id).update(data);\n        });\n      });\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nexport const addSchoolContent = async (values, image) => {\n  let schoolid = values.schoolid;\n  if (schoolid) {\n\n    try {\n      let detail = ' <news content-type=\\'news\\'>' + values.detail + '</news>';\n      delete values.detail;\n      values.content_type = 'news';\n      values.create_at = getFirestore().FieldValue.serverTimestamp();\n      let contentRef = await app.firestore().collection('schools').doc(schoolid).collection('contents').add(values);\n\n      let content = await contentRef.get();\n      console.log('done content:' + content.id);\n      contentRef.collection('detail').doc('content').set({ data: detail });\n      let contentData = content.data();\n\n      if (typeof (image) == 'undefined') {\n        return;\n      }\n      var metadata = {\n        contentType: 'image/jpeg'\n      };\n      let cover_url = 'public/images/content/' + content.id;\n      var storageRef = app.storage().ref();\n      var uploadTask = storageRef.child(cover_url).put(image, metadata);\n      uploadTask.on(getStorage().TaskEvent.STATE_CHANGED, // or 'state_changed'\n        function(snapshot) {\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload cover is ' + progress + '% done');\n          switch (snapshot.state) {\n            case getStorage().TaskState.PAUSED: // or 'paused'\n              console.log('Upload cover is paused');\n              break;\n            case getStorage().TaskState.RUNNING: // or 'running'\n              console.log('Upload cover is running');\n              break;\n          }\n        },\n        function(error) {\n\n          switch (error.code) {\n            case 'storage/unauthorized':\n              console.log('unauthorized');\n              break;\n            case 'storage/canceled':\n              console.log('cancel');\n              break;\n            case 'storage/unknown':\n\n              console.log('unkonwn');\n              // Unknown error occurred, inspect error.serverResponse\n              break;\n          }\n        },\n        function() {\n          // Upload completed successfully, now we can get the download URL\n          uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n            console.log('File available at', downloadURL);\n            contentData.cover = downloadURL;\n            app.firestore().collection('schools').doc(schoolid).collection('contents').doc(content.id).update(contentData);\n          });\n        });\n    } catch (err) {\n      console.log(err);\n    }\n\n  }\n};\nexport const getSchoolContentApi = async (id, schoolid) => {\n  try {\n    let querySnapshot = await app.firestore().collection('schools').doc(schoolid).collection('contents').doc(id).get();\n    const content = querySnapshot.data();\n    content.id = id;\n    let querySnapshotDetail = await app.firestore().collection('schools').doc(schoolid).collection('contents').doc(id).collection('detail').doc('content').get();\n    const contentDetail = querySnapshotDetail.data();\n    content.detail = contentDetail.data;\n    return content;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteSchoolContents = (ids, schoolid) => {\n  try {\n    ids.map((id) => {\n      let cover_url = 'public/images/content/' + id;\n      var storageRef = app.storage().ref();\n      storageRef.child(cover_url).getDownloadURL().then(onResolve, onReject);\n\n      function onResolve(foundURL) {\n        storageRef.child(cover_url).delete();\n      }\n\n      function onReject(error) {\n        console.log(error.code);\n      }\n\n      app.firestore().collection('schools').doc(schoolid).collection('contents').doc(id).collection('detail').doc('content').delete();\n      app.firestore().collection('schools').doc(schoolid).collection('contents').doc(id).delete();\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\n\nexport const updateSchoolContent = async (data, image) => {\n  try {\n    const schoolid = data.schoolid;\n    console.log('update contents');\n    let id = data.id;\n    let detail = ' <news content-type=\\'news\\'>' + data.detail + '</news>';\n    delete data.detail;\n    await app.firestore().collection('schools').doc(schoolid).collection('contents').doc(id).update(data);\n    await app.firestore().collection('schools').doc(schoolid).collection('contents').doc(id).collection('detail').doc('content').update({ data: detail });\n    if (typeof (image) == 'undefined') {\n      return;\n    }\n    if (data.cover) {\n\n    }\n    var metadata = {\n      contentType: 'image/jpeg'\n    };\n    let cover_url = 'public/images/content/' + data.id;\n    var storageRef = app.storage().ref();\n    var uploadTask = storageRef.child(cover_url).put(image, metadata);\n    uploadTask.on(getStorage().TaskEvent.STATE_CHANGED, // or 'state_changed'\n      function(snapshot) {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload cover is ' + progress + '% done');\n        switch (snapshot.state) {\n          case getStorage().TaskState.PAUSED: // or 'paused'\n            console.log('Upload cover is paused');\n            break;\n          case getStorage().TaskState.RUNNING: // or 'running'\n            console.log('Upload cover is running');\n            break;\n        }\n      },\n      function(error) {\n        switch (error.code) {\n          case 'storage/unauthorized':\n            console.log('unauthorized');\n            break;\n          case 'storage/canceled':\n            console.log('cancel');\n            break;\n          case 'storage/unknown':\n            console.log('unkonwn');\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      },\n      function() {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n          console.log('File available at', downloadURL);\n          data.cover = downloadURL;\n          app.firestore().collection('schools').doc(schoolid).collection('contents').doc(id).update(data);\n        });\n      });\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport {\n  PlusCircle as PlusCircleIcon,\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/hbon/management/schools\"\n            component={RouterLink}\n          >\n            Trang chủ\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"#\"\n            component={RouterLink}\n          >\n            Quản lý\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Event\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Danh sách event\n        </Typography>\n\n      </Grid>\n\n      <Grid item>\n      <Link\n            to=\"/hbon/management/events/create\"\n            component={RouterLink}\n          >\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <PlusCircleIcon />\n            </SvgIcon>\n          }\n        >\n          Thêm Event\n        </Button>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Divider,\n  IconButton,\n  InputAdornment,\n  SvgIcon,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tabs,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  Save as SaveIcon,\n  Users as UsersIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon,\n  Send as SendIcon\n} from 'react-feather';\nimport getInitials from 'src/utils/getInitials';\nimport { useHistory } from 'react-router-dom';\nimport {deleteEvents, exportEvent} from '../../../api/events.js';\nimport { useSnackbar } from 'notistack';\nimport {sendNotify} from '../../../api/lives.js';\nimport { WaveLoading } from 'react-loadingg';\nimport { Alert } from '@material-ui/lab';\nconst tabs = [\n  {\n    value: 'all',\n    label: 'Tất cả'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'updatedAt|desc',\n    label: 'Last update (newest first)'\n  },\n  {\n    value: 'updatedAt|asc',\n    label: 'Last update (oldest first)'\n  },\n  {\n    value: 'name|desc',\n    label: 'Tên (giảm)'\n  },\n  {\n    value: 'name|asc',\n    label: 'Tên (tăng)'\n  }\n];\n\nconst applyFilters = (events, query, filters) => {\n  return events.filter((event) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['title', 'description'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if ((property in event) && event[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && event[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n};\n\nconst applyPagination = (events, page, limit) => {\n  return events.slice(page * limit, page * limit + limit);\n};\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst applySort = (events, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = events.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500\n  },\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Results = ({\n  className,\n  events,\n  ...rest\n}) => {\n  const history = useHistory();\n  const classes = useStyles();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [currentTab, setCurrentTab] = useState('all');\n  const [selectedEvents, setSelectedEvents] = useState([]);\n  const { enqueueSnackbar } = useSnackbar();\n  const handleClose = () => {\n    setOpenDialog(false);\n  };\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = {\n      ...filters,\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null\n    };\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setSelectedEvents([]);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllEvents = (event) => {\n    setSelectedEvents(event.target.checked\n      ? events.map((event) => event.id)\n      : []);\n  };\n\n  const handleSelectOneEvent = (event, eventId) => {\n    if (!selectedEvents.includes(eventId)) {\n      setSelectedEvents((prevSelected) => [...prevSelected, eventId]);\n    } else {\n      setSelectedEvents((prevSelected) => prevSelected.filter((id) => id !== eventId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const handleDelete = () => {\n      deleteEvents(selectedEvents);\n      history.push('/hbon/management/events');\n    };\n\n  const filteredEvents = applyFilters(events, query, filters);\n  const sortedEvents = applySort(filteredEvents, sort);\n  const paginatedEvents = applyPagination(sortedEvents, page, limit);\n  const enableBulkOperations = selectedEvents.length > 0;\n  const selectedSomeEvents = selectedEvents.length > 0 && selectedEvents.length < events.length;\n  const selectedAllEvents = selectedEvents.length === events.length;\n\n  const [isExportSuccess, setStatusExport] = useState(false);\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Tabs\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        textColor=\"secondary\"\n        value={currentTab}\n        variant=\"scrollable\"\n      >\n        {isExportSuccess===true && (\n          <WaveLoading />\n        )}\n\n        {tabs.map((tab) => (\n          <Tab\n            key={tab.value}\n            value={tab.value}\n            label={tab.label}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <Box\n        p={2}\n        minHeight={56}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n        <TextField\n          className={classes.queryField}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SvgIcon\n                  fontSize=\"small\"\n                  color=\"action\"\n                >\n                  <SearchIcon />\n                </SvgIcon>\n              </InputAdornment>\n            )\n          }}\n          onChange={handleQueryChange}\n          placeholder=\"Tìm kiếm\"\n          value={query}\n          variant=\"outlined\"\n        />\n        <Box flexGrow={1} />\n        <TextField\n          label=\"Sắp xếp\"\n          name=\"sort\"\n          onChange={handleSortChange}\n          select\n          SelectProps={{ native: true }}\n          value={sort}\n          variant=\"outlined\"\n        >\n          {sortOptions.map((option) => (\n            <option\n              key={option.value}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllEvents}\n              indeterminate={selectedSomeEvents}\n              onChange={handleSelectAllEvents}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n              onClick={handleDelete}\n            >\n              Xóa\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllEvents}\n                    indeterminate={selectedSomeEvents}\n                    onChange={handleSelectAllEvents}\n                  />\n                </TableCell>\n                <TableCell>\n                  Loại Event\n                </TableCell>\n                <TableCell>\n                  Tiêu đề (name)\n                </TableCell>\n                <TableCell>\n                  start time\n                </TableCell>\n                <TableCell>\n                  end time\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedEvents.map((event) => {\n                let upvotes = null;\n                let downvotes = null;\n                if(\"reactions\" in event){\n                  upvotes = event.reactions.upvotes\n                  downvotes = event.reactions.downvotes\n                }\n\n                const isEventSelected = selectedEvents.includes(event.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={event.id}\n                    selected={isEventSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isEventSelected}\n                        onChange={(event) => handleSelectOneEvent(event, event.id)}\n                        value={isEventSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                            {event.type}\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                            {event.title}\n                    </TableCell>\n                    <TableCell>\n                            {event.start_at.toDate().toISOString()}\n                    </TableCell>\n                    <TableCell>\n                            {event.end_at.toDate().toISOString()}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton title=\"Số lượng submit\"\n                          component={RouterLink}\n                          to={\"/hbon/management/events/submit/\"+ event.id}\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <UsersIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton title=\"Down load nhanh\"\n                        onClick={async() => {\n                          setStatusExport(true);\n                          await exportEvent(event.id);\n                          setTimeout(function(){\n                            setStatusExport(false);\n                          },30000);\n                        }}\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <SaveIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton\n                        component={RouterLink}\n                        to={\"/hbon/management/events/edit/\"+ event.id}\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <IconButton  onClick={() => {\n                        setOpenDialog(event.id)\n                      }}>\n                        <SvgIcon fontSize=\"small\">\n                          <SendIcon />\n                        </SvgIcon>\n                      </IconButton>\n                      <Dialog\n                        open={openDialog==event.id}\n                        onClose={handleClose}\n                        aria-labelledby=\"draggable-dialog-title\"\n                        data={event.id}\n                      >\n                        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\n                          Send noti\n                        </DialogTitle>\n                        <DialogContent>\n                          <DialogContentText>\n                           Bạn có chắc chắn muốn send noti cho  : {event.title} ?\n                          </DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                          <Button autoFocus onClick={handleClose} color=\"primary\">\n                            Cancel\n                          </Button>\n                          <Button\n                            value={event.id} onClick={async () => {\n                              let result = await sendNotify(event.id)\n                              if(result.data.error_code==0){\n                                enqueueSnackbar(result.data.message, {\n                                  variant: 'success',\n                                  action: <Button>See all</Button>\n                                });\n\n                              setOpenDialog(false);\n                              } else {\n                                alert(result.data.message)\n                              }\n\n                              history.push('/hbon/management/events');\n                            }} color=\"primary\">\n                            Send\n                          </Button>\n                        </DialogActions>\n                      </Dialog>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredEvents.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  events: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  events: []\n};\n\nexport default Results;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\nimport {listAllEvent} from '../../../api/events'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst EventListView = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [events, setEvents] = useState([]);\n\n  const getEvents = useCallback(async () => {\n    try {\n      const events = await listAllEvent();\n      if (isMountedRef.current) {\n        setEvents(events);\n      }\n      console.log(events);\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEvents();\n  }, [getEvents]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Trường học\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        <Box mt={3}>\n          <Results events={events} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default EventListView;\n"],"sourceRoot":""}