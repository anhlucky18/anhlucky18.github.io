{"version":3,"sources":["hooks/useIsMountedRef.js","utils/stringutil.js","api/classes.js","api/students.js","views/student/StudentCreateView/StudentCreateForm.js","views/student/StudentCreateView/Header.js","views/student/StudentCreateView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","random","length","a","result","charactersLength","characters","i","charAt","Math","floor","random_number","addClass","data","code","app","firestore","collection","doc","docRef","get","exists","set","console","log","school_id","update","classes","getFirestore","FieldValue","arrayUnion","getClassApi","id","querySnapshot","updateClass","listAllClasses","where","docs","map","listAllStudents","empty","size","students","checkUser","username","email","querySnapshot1","createStudentWithProduct","user","error","command","type","action","status","executer","add","courseApi","addStudent","birthdate","_isAMomentObject","Timestamp","fromDate","toDate","products","getStudent","student","valp","product","push","updateStudent","listAllBoughtStudents","enroleStudent","useStyles","makeStyles","root","genders","name","StudentCreateForm","className","rest","useAuth","history","useHistory","schoolid","localStorage","getItem","useState","sclass","setSClass","sclasses","setClasses","isMountedRef","getClasses","useCallback","handleClassChange","event","persist","target","value","useSnackbar","enqueueSnackbar","initialValues","Date","parent_name","parent_phone","submit","validationSchema","Yup","shape","max","required","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","c","clas","class","displayName","fullName","split","firstname","lastname","password","wait","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","setFieldTouched","touched","clsx","Card","CardContent","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","variant","select","SelectProps","native","s","gender","datePicker","format","inputVariant","onClose","onAccept","date","Box","mt","Button","color","disabled","Header","schoolname","Breadcrumbs","separator","fontSize","Link","to","component","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","StudentCreateView","props","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/92.ef4c9d5f.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","async function random(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n };\n\n async function random_number(length) {\n   var result           = '';\n   var characters       = '0123456789';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n};\n \n export {random,random_number} ;\n","import app from './_firebase';\n\nimport {getFirestore} from 'firebase/firestore'\n\nimport {random} from 'src/utils/stringutil';\nexport const addClass = async (data) => {\n    try {\n        const code = await random(6);\n        var docRef = await app.firestore().collection(\"classes\").doc(code);\n\n        const doc = docRef.get()\n        if (doc.exists) {\n            return \"existed\";\n        } else {\n            await app.firestore().collection('classes').doc(code).set(data);\n            console.log(\"add class success\");\n            // children:getFirestore().FieldValue.arrayUnion(String(student_id))\n\n            await app.firestore().collection('schools').doc(data.school_id).update({classes:getFirestore().FieldValue.arrayUnion(docRef)})\n        }\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const getClassApi = async (id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('classes').doc(id).get();\n        const classes = querySnapshot.data()\n        classes.id=id\n        return classes\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const updateClass = async (data) => {\n    try {\n        console.log(data)\n        let id=data.id;\n        let result  = await app.firestore().collection('classes').doc(id).update(data);\n        \n        return result\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const listAllClasses = async (school_id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('classes').where(\"school_id\",\"==\",school_id).get();\n        if (querySnapshot.docs) {\n            const classes = querySnapshot.docs.map((doc) => {\n              return {\n                id: doc.id,\n                ...doc.data()\n              }\n            })\n            console.log(classes)\n            return classes;\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const listJsonClasses = async (school_id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('schools').doc(school_id).get();\n        const dclasses = await querySnapshot.data().classes\n        let a=[]\n        for await (let val of dclasses){\n            const doc =  await val.get()\n            a[doc.id] = { id: doc.id, ...doc.data() }\n        }\n        return a;\n    } catch (err) {\n        console.log(err);\n    }\n}","import app from './_firebase';\n\nimport {getFirestore} from 'firebase/firestore'\nimport {getStorage} from 'firebase/storage'\n\n// import axios from 'axios';\n// import {\n//   API_URL\n// } from 'src/config';\nexport const listAllStudents = async (school_id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').where(\"school_id\", \"==\", school_id).where(\"status\",\"==\",0).get();\n    console.log(querySnapshot.empty)\n    console.log(querySnapshot.size)\n    if (querySnapshot.docs) {\n      const students = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return students\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nconst checkUser  = async (data)=>{\n  let username = data.username;\n  let email=data.email;\n  let querySnapshot = await app.firestore().collection('users').where(\"username\", \"==\", username).get();\n  if (querySnapshot.docs) {\n    if (querySnapshot.docs.length>0)\n      return \"username_exited\";\n  }\n  let querySnapshot1 = await app.firestore().collection('users').where(\"email\", \"==\", email).get();\n  if (querySnapshot1.docs) {\n    if (querySnapshot1.docs.length>0)\n      return \"email_exited\";\n  }\n  return \"success\";\n}\nexport const createStudentWithProduct = async (user, data) => {\n  try {\n    let error = await checkUser(data);\n    console.log(\"error:\",error)\n    if(error!=\"success\"){\n      return error; \n    }\n    let command = {\n      type: \"student\",\n      action: \"create\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    let id = await (await courseApi.get()).id;\n    console.log(\"add command success\",id)\n    return \"success\";\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const addStudent = async (user, data) => {\n  try {\n\n    if (data.birthdate._isAMomentObject) {\n      data.birthdate = getFirestore().Timestamp.fromDate(data.birthdate.toDate())\n    }\n    data.products=[]\n    console.log(data.birthdate);\n    let command = {\n      type: \"student\",\n      action: \"add\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    console.log(\"add command success\")\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getStudent = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').doc(id).get();\n    const student = querySnapshot.data()\n    student.id = id\n    let products = []\n    if(typeof(student.products)===\"undefined\"){\n      student.products = products\n      return student;\n    }\n    for await (let valp of student.products){\n      const product = await valp.get();\n      products.push(product.id)\n    }\n    student.products = products\n\n    return student\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const updateStudent = async (data) => {\n  if (data.birthdate._isAMomentObject) {\n    data.birthdate = getFirestore().Timestamp.fromDate(data.birthdate.toDate())\n  }\n  try {\n    let id = data.id;\n    let result = await app.firestore().collection('students').doc(id).update(data);\n    \n    return result\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nexport const listAllBoughtStudents = async (school_id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').where(\"school_id\", \"==\", school_id).where(\"status\",\"==\",0).where(\"products\",\">\",[]).get();\n    if (querySnapshot.docs) {\n      const students = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return students\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const addBoughtStudent = async (data) => {\n  try {\n    let id = data.id;\n    app.firestore().collection('students').doc(id).update(data);\n    \n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getStudentUser = async (id) => {\n  try {\n    let stUser = await getStudentUser(id);\n    let querySnapshot = await app.firestore().collection('users').doc(id).get();\n    const students = querySnapshot.data()\n    students.id = id\n    students.username = stUser.username;\n    return students\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\nexport const enroleStudent = async (user, data) => {\n  try {\n    let command = {\n      type: \"enrole_student\",\n      action: \"add\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    await app.firestore().collection('commands').add(command);\n    console.log(\"add command success\")\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport wait from 'src/utils/wait';\nimport {random_number} from 'src/utils/stringutil'\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { useHistory } from 'react-router-dom';\nimport { addStudent } from '../../../api/students';\nimport { listAllClasses } from '../../../api/classes';\nimport useAuth from 'src/hooks/useAuth';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst genders = [\n  {\n    id: 'male',\n    name: 'Nam'\n  },\n  {\n    id: 'female',\n    name: 'Nữ'\n  }\n];\nconst StudentCreateForm = ({ className, ...rest }) => {\n  const { user } = useAuth();\n  const history = useHistory();\n  const schoolid = localStorage.getItem('schoolid');\n  const classes = useStyles();\n  const [sclass, setSClass] = useState('');\n  const [sclasses, setClasses] = useState([]);\n  const isMountedRef = useIsMountedRef();\n  const getClasses = useCallback(async () => {\n    try {\n      const sclasses = await listAllClasses(schoolid);\n      console.log(sclasses);\n      if (isMountedRef.current) {\n        setClasses(sclasses);\n        console.log('class loaded');\n        setSClass(sclasses[0].id);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getClasses();\n  }, [getClasses]);\n\n  const handleClassChange = event => {\n    event.persist();\n    console.log(event.target.value)\n    setSClass(event.target.value);\n  };\n  const { enqueueSnackbar } = useSnackbar();\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        birthdate: new Date(),\n        parent_name: '',\n        parent_phone: '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .max(75)\n          .required('Bắt buộc nhập tên'),\n        birthdate: Yup.date(),\n        parent_name: Yup.string().max(75),\n        parent_phone: Yup.string().max(15)\n      })}\n      onSubmit={async (\n        values,\n        { resetForm, setErrors, setStatus, setSubmitting }\n      ) => {\n        try {\n          values.school_id=schoolid;\n          // values.school_name=school.name;\n          let c = {};\n          console.log(sclass);\n          c.id=sclass\n          for await (let clas of sclasses){\n            if(clas.id==c.id){\n              c.name=clas.name;\n            }\n          }\n          values.class = c;\n          values.displayName = values.name\n          let fullName = values.name.split(' ');\n          console.log(fullName.length)\n            values.firstname = fullName[0];\n            values.lastname = fullName[fullName.length - 1];\n          values.password = \"abcd\" + await random_number(4);\n          values.status=0;\n          console.log(values);\n          addStudent(user, values);\n          // NOTE: Make API request\n          await wait(500);\n          history.push('/school/management/students');\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        setFieldTouched,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Tên học sinh\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    label=\"Lớp\"\n                    name=\"sclass\"\n                    onChange={handleClassChange}\n                    select\n                    SelectProps={{ native: true }}\n                    variant=\"outlined\"\n                    value={sclass}\n                  >\n                    {sclasses.map(s => (\n                      <option key={s.id} value={s.id}>\n                        {s.name}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    fullWidth\n                    label=\"Giới tính\"\n                    name=\"gender\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.gender}\n                    variant=\"outlined\"\n                  >\n                    {genders.map(gender => (\n                      <option key={gender.id} value={gender.id}>\n                        {gender.name}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <KeyboardDatePicker\n                    className={classes.datePicker}\n                    label=\"Ngày sinh (ngày/tháng/năm)\"\n                    format=\"DD/MM/YYYY\"\n                    name=\"birthdate\"\n                    inputVariant=\"outlined\"\n                    value={values.birthdate}\n                    onBlur={() => setFieldTouched('birthdate')}\n                    onClose={() => setFieldTouched('birthdate')}\n                    onAccept={() => setFieldTouched('birthdate')}\n                    onChange={date => setFieldValue('birthdate', date)}\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.parent_name && errors.parent_name)}\n                    fullWidth\n                    helperText={touched.parent_name && errors.parent_name}\n                    label=\"Tên phụ huynh\"\n                    name=\"parent_name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.parent_name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.parent_phone && errors.parent_phone)}\n                    fullWidth\n                    helperText={touched.parent_phone && errors.parent_phone}\n                    label=\"Số điện thoại phụ huynh\"\n                    name=\"parent_phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.parent_phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Lưu\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nStudentCreateForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default StudentCreateForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  let schoolname = localStorage.getItem('schoolname');\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/hbon/management/schools\"\n            component={RouterLink}\n          >\n            Trường: {schoolname}\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/school/management/classes\"\n            component={RouterLink}\n          >\n            Học sinh\n          </Link>\n      </Breadcrumbs>\n      <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Thêm học sinh\n        </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport StudentCreateForm from './StudentCreateForm';\nimport Header from './Header';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst StudentCreateView = (props) => {\n  const classes = useStyles();\n  return (\n    <Page\n      className={classes.root}\n      title=\"Thêm học sinh\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <StudentCreateForm />\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default StudentCreateView;\n"],"sourceRoot":""}