{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/SuccessOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ReportProblemOutlined.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/ErrorOutline.js","../node_modules/@material-ui/lab/esm/internal/svg-icons/InfoOutlined.js","../node_modules/@material-ui/lab/esm/Alert/Alert.js","views/auth/LoginView/Auth0Login.js","views/auth/LoginView/FirebaseAuthLogin.js","views/auth/LoginView/JWTLogin.js","views/auth/LoginView/SSOLogin.js","views/auth/LoginView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","createSvgIcon","React","d","defaultIconMapping","success","SuccessOutlinedIcon","fontSize","warning","ReportProblemOutlinedIcon","error","ErrorOutlineIcon","info","InfoOutlinedIcon","_ref","CloseIcon","Alert","props","ref","action","children","classes","className","_props$closeText","closeText","color","icon","_props$iconMapping","iconMapping","onClose","_props$role","role","_props$severity","severity","_props$variant","variant","other","_objectWithoutProperties","Paper","_extends","square","elevation","clsx","root","concat","capitalize","message","IconButton","size","title","onClick","withStyles","theme","getColor","palette","type","darken","lighten","getBackgroundColor","typography","body2","borderRadius","shape","backgroundColor","display","padding","standardSuccess","main","standardInfo","standardWarning","standardError","outlinedSuccess","border","outlinedInfo","outlinedWarning","outlinedError","filledSuccess","fontWeight","fontWeightMedium","filledInfo","filledWarning","filledError","marginRight","opacity","alignItems","marginLeft","paddingLeft","name","useStyles","makeStyles","Auth0Login","rest","loginWithPopup","useAuth","useState","setError","isMountedRef","handleLogin","a","console","Box","my","FormHelperText","justifyContent","Button","googleButton","common","white","providerIcon","spacing","divider","flexGrow","dividerText","margin","FirebaseAuthLogin","signInWithEmailAndPassword","signInWithGoogle","handleGoogleClick","fullWidth","alt","src","mt","Divider","orientation","Typography","initialValues","email","password","submit","validationSchema","Yup","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","log","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","TextField","Boolean","helperText","label","onBlur","onChange","value","disabled","JWTLogin","login","autoFocus","SSOLogin","handleHBONClick","logout","methodIcons","background","dark","flexDirection","minHeight","banner","paper","paddingBottom","paddingTop","borderBottom","bannerChip","methodIcon","height","cardContainer","cardContent","currentMethodIcon","width","maxHeight","LoginView","method","Page","Container","maxWidth","mb","to","Logo","Card","CardContent","gutterBottom","Link","component","RouterLink"],"mappings":"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","file":"static/js/18.5ab5a990.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M20,12A8,8 0 0,1 12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4C12.76,4 13.5,4.11 14.2, 4.31L15.77,2.74C14.61,2.26 13.34,2 12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0, 0 22,12M7.91,10.08L6.5,11.5L11,16L21,6L19.59,4.58L11,13.17L7.91,10.08Z\"\n}), 'SuccessOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 5.99L19.53 19H4.47L12 5.99M12 2L1 21h22L12 2zm1 14h-2v2h2v-2zm0-6h-2v4h2v-4z\"\n}), 'ReportProblemOutlined');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutline');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11,9H13V7H11M12,20C7.59,20 4,16.41 4,12C4,7.59 7.59,4 12,4C16.41,4 20,7.59 20, 12C20,16.41 16.41,20 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10, 10 0 0,0 12,2M11,17H13V11H11V17Z\"\n}), 'InfoOutlined');","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles, lighten, darken } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport SuccessOutlinedIcon from '../internal/svg-icons/SuccessOutlined';\nimport ReportProblemOutlinedIcon from '../internal/svg-icons/ReportProblemOutlined';\nimport ErrorOutlineIcon from '../internal/svg-icons/ErrorOutline';\nimport InfoOutlinedIcon from '../internal/svg-icons/InfoOutlined';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  var getColor = theme.palette.type === 'light' ? darken : lighten;\n  var getBackgroundColor = theme.palette.type === 'light' ? lighten : darken;\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.body2, {\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: 'transparent',\n      display: 'flex',\n      padding: '6px 16px'\n    }),\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"success\"`. */\n    standardSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.success.main, 0.9),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"info\"`. */\n    standardInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.info.main, 0.9),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"warning\"`. */\n    standardWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.warning.main, 0.9),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"standard\"` and `color=\"error\"`. */\n    standardError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      backgroundColor: getBackgroundColor(theme.palette.error.main, 0.9),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"success\"`. */\n    outlinedSuccess: {\n      color: getColor(theme.palette.success.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.success.main),\n      '& $icon': {\n        color: theme.palette.success.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"info\"`. */\n    outlinedInfo: {\n      color: getColor(theme.palette.info.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.info.main),\n      '& $icon': {\n        color: theme.palette.info.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"warning\"`. */\n    outlinedWarning: {\n      color: getColor(theme.palette.warning.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.warning.main),\n      '& $icon': {\n        color: theme.palette.warning.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"error\"`. */\n    outlinedError: {\n      color: getColor(theme.palette.error.main, 0.6),\n      border: \"1px solid \".concat(theme.palette.error.main),\n      '& $icon': {\n        color: theme.palette.error.main\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"success\"`. */\n    filledSuccess: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.success.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"info\"`. */\n    filledInfo: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.info.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"warning\"`. */\n    filledWarning: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.warning.main\n    },\n\n    /* Styles applied to the root element if `variant=\"filled\"` and `color=\"error\"`. */\n    filledError: {\n      color: '#fff',\n      fontWeight: theme.typography.fontWeightMedium,\n      backgroundColor: theme.palette.error.main\n    },\n\n    /* Styles applied to the icon wrapper element. */\n    icon: {\n      marginRight: 12,\n      padding: '7px 0',\n      display: 'flex',\n      fontSize: 22,\n      opacity: 0.9\n    },\n\n    /* Styles applied to the message wrapper element. */\n    message: {\n      padding: '8px 0'\n    },\n\n    /* Styles applied to the action wrapper element if `action` is provided. */\n    action: {\n      display: 'flex',\n      alignItems: 'center',\n      marginLeft: 'auto',\n      paddingLeft: 16,\n      marginRight: -8\n    }\n  };\n};\nvar defaultIconMapping = {\n  success: /*#__PURE__*/React.createElement(SuccessOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  warning: /*#__PURE__*/React.createElement(ReportProblemOutlinedIcon, {\n    fontSize: \"inherit\"\n  }),\n  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, {\n    fontSize: \"inherit\"\n  }),\n  info: /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"inherit\"\n  })\n};\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar Alert = /*#__PURE__*/React.forwardRef(function Alert(props, ref) {\n  var action = props.action,\n      children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      color = props.color,\n      icon = props.icon,\n      _props$iconMapping = props.iconMapping,\n      iconMapping = _props$iconMapping === void 0 ? defaultIconMapping : _props$iconMapping,\n      onClose = props.onClose,\n      _props$role = props.role,\n      role = _props$role === void 0 ? 'alert' : _props$role,\n      _props$severity = props.severity,\n      severity = _props$severity === void 0 ? 'success' : _props$severity,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"action\", \"children\", \"classes\", \"className\", \"closeText\", \"color\", \"icon\", \"iconMapping\", \"onClose\", \"role\", \"severity\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Paper, _extends({\n    role: role,\n    square: true,\n    elevation: 0,\n    className: clsx(classes.root, classes[\"\".concat(variant).concat(capitalize(color || severity))], className),\n    ref: ref\n  }, other), icon !== false ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.icon\n  }, icon || iconMapping[severity] || defaultIconMapping[severity]) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.message\n  }, children), action != null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, action) : null, action == null && onClose ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.action\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    size: \"small\",\n    \"aria-label\": closeText,\n    title: closeText,\n    color: \"inherit\",\n    onClick: onClose\n  }, _ref)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Alert.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the alert.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Override the default label for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * The main color for the alert. Unless provided, the value is taken from the `severity` prop.\n   */\n  color: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * Override the icon displayed before the children.\n   * Unless provided, the icon is mapped to the value of the `severity` prop.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The component maps the `severity` prop to a range of different icons,\n   * for instance success to `<SuccessOutlined>`.\n   * If you wish to change this mapping, you can provide your own.\n   * Alternatively, you can use the `icon` prop to override the icon displayed.\n   */\n  iconMapping: PropTypes.shape({\n    error: PropTypes.node,\n    info: PropTypes.node,\n    success: PropTypes.node,\n    warning: PropTypes.node\n  }),\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * When provided and no `action` prop is set, a close icon button is displayed that triggers the callback when clicked.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * The ARIA role attribute of the element.\n   */\n  role: PropTypes.string,\n\n  /**\n   * The severity of the alert. This defines the color and icon used.\n   */\n  severity: PropTypes.oneOf(['error', 'info', 'success', 'warning']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAlert'\n})(Alert);","import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  FormHelperText,\n  makeStyles\n} from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Auth0Login = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { loginWithPopup } = useAuth();\n  const [error, setError] = useState(null);\n  const isMountedRef = useIsMountedRef();\n\n  const handleLogin = async () => {\n    try {\n      await loginWithPopup();\n    } catch (err) {\n      console.error(err);\n      if (isMountedRef.current) {\n        setError(err.message);\n      }\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      {error && (\n        <Box my={3}>\n          <FormHelperText error>\n            {error}\n          </FormHelperText>\n        </Box>\n      )}\n      <Box\n        display=\"flex\"\n        justifyContent=\"center\"\n      >\n        <Button\n          onClick={handleLogin}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Log in with Auth0\n        </Button>\n      </Box>\n    </div>\n  );\n};\n\nAuth0Login.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Auth0Login;\n","import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Divider,\n  FormHelperText,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  googleButton: {\n    backgroundColor: theme.palette.common.white\n  },\n  providerIcon: {\n    marginRight: theme.spacing(2)\n  },\n  divider: {\n    flexGrow: 1\n  },\n  dividerText: {\n    margin: theme.spacing(2)\n  }\n}));\n\nconst FirebaseAuthLogin = ({ className, ...rest }) => {\n  const classes = useStyles();\n  const { signInWithEmailAndPassword, signInWithGoogle } = useAuth();\n  const isMountedRef = useIsMountedRef();\n\n  const handleGoogleClick = async () => {\n    try {\n      await signInWithGoogle();\n    } catch(err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <>\n      <Button\n        className={classes.googleButton}\n        fullWidth\n        onClick={handleGoogleClick}\n        size=\"large\"\n        variant=\"contained\"\n      >\n        <img\n          alt=\"Google\"\n          className={classes.providerIcon}\n          src=\"/static/images/google.svg\"\n        />\n        Sign in with Google\n      </Button>\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n        mt={2}\n      >\n        <Divider\n          className={classes.divider}\n          orientation=\"horizontal\"\n        />\n        <Typography \n          color=\"textSecondary\"\n          variant=\"body1\"\n          className={classes.dividerText}\n        >\n          OR\n        </Typography>\n        <Divider\n          className={classes.divider}\n          orientation=\"horizontal\"\n        />\n      </Box>\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n          password: Yup.string().max(255).required('Password is required')\n        })}\n        onSubmit={async (values, {\n          setErrors,\n          setStatus,\n          setSubmitting\n        }) => {\n          try {\n            console.log(values)\n            await signInWithEmailAndPassword(values.email, values.password);\n\n            if (isMountedRef.current) {\n              setStatus({ success: true });\n              setSubmitting(false);\n            }\n          } catch (err) {\n            console.error(err);\n            if (isMountedRef.current) {\n              setStatus({ success: false });\n              setErrors({ submit: err.message });\n              setSubmitting(false);\n            }\n          }\n        }}\n      >\n        {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => (\n          <form\n            noValidate\n            onSubmit={handleSubmit}\n            className={clsx(classes.root, className)}\n            {...rest}\n          >\n            <TextField\n              error={Boolean(touched.email && errors.email)}\n              fullWidth\n              helperText={touched.email && errors.email}\n              label=\"Email Address\"\n              margin=\"normal\"\n              name=\"email\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"email\"\n              value={values.email}\n              variant=\"outlined\"\n            />\n            <TextField\n              error={Boolean(touched.password && errors.password)}\n              fullWidth\n              helperText={touched.password && errors.password}\n              label=\"Password\"\n              margin=\"normal\"\n              name=\"password\"\n              onBlur={handleBlur}\n              onChange={handleChange}\n              type=\"password\"\n              value={values.password}\n              variant=\"outlined\"\n            />\n            {errors.submit && (\n              <Box mt={3}>\n                <FormHelperText error>\n                  {errors.submit}\n                </FormHelperText>\n              </Box>\n            )}\n            <Box mt={2}>\n              <Button\n                color=\"secondary\"\n                disabled={isSubmitting}\n                fullWidth\n                size=\"large\"\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Log In\n              </Button>\n            </Box>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nFirebaseAuthLogin.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default FirebaseAuthLogin;\n","import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Button,\n    FormHelperText,\n    TextField,\n    makeStyles\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles(() => ({\n    root: {}\n}));\n\nconst JWTLogin = ({ className, ...rest }) => {\n    const classes = useStyles();\n    const { login } = useAuth();\n    const isMountedRef = useIsMountedRef();\n\n    return (\n        <Formik\n            initialValues={{\n                email: 'demo@devias.io',\n                password: 'Password123',\n                submit: null\n            }}\n            validationSchema={Yup.object().shape({\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\n                password: Yup.string().max(255).required('Password is required')\n            })}\n            onSubmit={async (values, {\n                setErrors,\n                setStatus,\n                setSubmitting\n            }) => {\n                try {\n                    await login(values.email, values.password);\n\n                    if (isMountedRef.current) {\n                        setStatus({ success: true });\n                        setSubmitting(false);\n                    }\n                } catch (err) {\n                    console.error(err);\n                    if (isMountedRef.current) {\n                        setStatus({ success: false });\n                        setErrors({ submit: err.message });\n                        setSubmitting(false);\n                    }\n                }\n            }}\n        >\n            {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values\n            }) => (\n                    <form\n                        noValidate\n                        onSubmit={handleSubmit}\n                        className={clsx(classes.root, className)}\n                        {...rest}\n                    >\n                        <TextField\n                            error={Boolean(touched.email && errors.email)}\n                            fullWidth\n                            autoFocus\n                            helperText={touched.email && errors.email}\n                            label=\"Email Address\"\n                            margin=\"normal\"\n                            name=\"email\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"email\"\n                            value={values.email}\n                            variant=\"outlined\"\n                        />\n                        <TextField\n                            error={Boolean(touched.password && errors.password)}\n                            fullWidth\n                            helperText={touched.password && errors.password}\n                            label=\"Password\"\n                            margin=\"normal\"\n                            name=\"password\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            type=\"password\"\n                            value={values.password}\n                            variant=\"outlined\"\n                        />\n                        {errors.submit && (\n                            <Box mt={3}>\n                                <FormHelperText error>\n                                    {errors.submit}\n                                </FormHelperText>\n                            </Box>\n                        )}\n                        <Box mt={2}>\n                            <Button\n                                color=\"secondary\"\n                                disabled={isSubmitting}\n                                fullWidth\n                                size=\"large\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                            >\n                                Log In\n            </Button>\n                        </Box>\n                        <Box mt={2}>\n                            <Alert\n                                severity=\"info\"\n                            >\n                                <div>\n                                    Use\n                {' '}\n                                    <b>demo@devias.io</b>\n                                    {' '}\n                and password\n                {' '}\n                                    <b>Password123</b>\n                                </div>\n                            </Alert>\n                        </Box>\n                    </form>\n                )}\n        </Formik>\n    );\n};\n\nJWTLogin.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default JWTLogin;\n","import React from 'react';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport {\n    Box,\n    Button,\n    Divider,\n    FormHelperText,\n    TextField,\n    Typography,\n    makeStyles\n} from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    googleButton: {\n        backgroundColor: theme.palette.common.white\n    },\n    providerIcon: {\n        marginRight: theme.spacing(2)\n    },\n    divider: {\n        flexGrow: 1\n    },\n    dividerText: {\n        margin: theme.spacing(2)\n    }\n}));\n\nconst SSOLogin = (props) => {\n    const classes = useStyles();\n    const { login, logout } = useAuth();\n\n    const handleHBONClick = async () => {\n        try {\n            await login();\n        } catch (err) {\n            console.error(err);\n        }\n    };\n\n    return (\n        <>\n            <Button\n                className={classes.googleButton}\n                fullWidth\n                onClick={handleHBONClick}\n                size=\"large\"\n                variant=\"contained\"\n            >\n                <img\n                    alt=\"HBON\"\n                    className={classes.providerIcon}\n                    src=\"/static/images/google.svg\"\n                />\n                ĐĂNG NHẬP VỚI HỌC BÀI Ở NHÀ\n            </Button>\n        </>\n    );\n};\n\nSSOLogin.propTypes = {\n    className: PropTypes.string,\n};\n\nexport default SSOLogin;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n    Box,\n    Card,\n    CardContent,\n    Container,\n    Divider,\n    Link,\n    Typography,\n    makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Logo from 'src/components/Logo';\nimport useAuth from 'src/hooks/useAuth';\nimport Auth0Login from './Auth0Login';\nimport FirebaseAuthLogin from './FirebaseAuthLogin';\nimport JWTLogin from './JWTLogin';\nimport SSOLogin from './SSOLogin';\n\nconst methodIcons = {\n    'Auth0': '/static/images/auth0.svg',\n    'FirebaseAuth': '/static/images/firebase.svg',\n    'JWT': '/static/images/jwt.svg',\n    'SSO': '/static/images/jwt.svg',\n};\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: theme.palette.background.dark,\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: '100vh'\n    },\n    banner: {\n        backgroundColor: theme.palette.background.paper,\n        paddingBottom: theme.spacing(2),\n        paddingTop: theme.spacing(2),\n        borderBottom: `1px solid ${theme.palette.divider}`\n    },\n    bannerChip: {\n        marginRight: theme.spacing(2)\n    },\n    methodIcon: {\n        height: 30,\n        marginLeft: theme.spacing(2),\n        marginRight: theme.spacing(2)\n    },\n    cardContainer: {\n        paddingBottom: 80,\n        paddingTop: 80,\n    },\n    cardContent: {\n        padding: theme.spacing(4),\n        display: 'flex',\n        flexDirection: 'column',\n        minHeight: 400\n    },\n    currentMethodIcon: {\n        height: 40,\n        '& > img': {\n            width: 'auto',\n            maxHeight: '100%'\n        }\n    }\n}));\n\nconst LoginView = () => {\n    const classes = useStyles();\n    const { method } = useAuth();\n    console.log(method);\n    return (\n        <Page\n            className={classes.root}\n            title=\"Login\"\n        >\n            <Container\n                className={classes.cardContainer}\n                maxWidth=\"sm\"\n            >\n                <Box\n                    mb={8}\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                >\n                    <RouterLink to=\"/\">\n                        <Logo />\n                    </RouterLink>\n                </Box>\n                <Card>\n                    <CardContent className={classes.cardContent}>\n                        <Box\n                            alignItems=\"center\"\n                            display=\"flex\"\n                            justifyContent=\"space-between\"\n                            mb={3}\n                        >\n                            <div>\n                                <Typography\n                                    color=\"textPrimary\"\n                                    gutterBottom\n                                    variant=\"h2\"\n                                >\n                                    Sign in\n                                </Typography>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"textSecondary\"\n                                >\n                                    Sign in on the internal platform (Thêm trang SSO)\n                                </Typography>\n                            </div>\n                            <div className={classes.currentMethodIcon}>\n                                <img\n                                    alt=\"Auth method\"\n                                    src={methodIcons[method]}\n                                />\n                            </div>\n                        </Box>\n                        <Box\n                            flexGrow={1}\n                            mt={3}\n                        >\n                            {method === 'Auth0' && <Auth0Login />}\n                            {method === 'FirebaseAuth' && <FirebaseAuthLogin />}\n                            {method === 'JWT' && <JWTLogin />}\n                            {method === 'SSO' && <SSOLogin />}\n                        </Box>\n                        <Box my={3}>\n                            <Divider />\n                        </Box>\n                        <Link\n                            component={RouterLink}\n                            to=\"/register\"\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                        >\n                            Create new account\n                        </Link>\n                    </CardContent>\n                </Card>\n            </Container>\n        </Page>\n    );\n};\n\nexport default LoginView;\n"],"sourceRoot":""}