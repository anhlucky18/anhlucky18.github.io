{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","utils/stringutil.js","api/students.js","api/products.js","views/users/StudentCreateView/StudentCreateForm.js","views/users/StudentCreateView/Header.js","views/users/StudentCreateView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","random","length","a","result","charactersLength","characters","i","charAt","Math","floor","random_number","listAllStudents","school_id","app","firestore","collection","where","get","querySnapshot","console","log","empty","size","docs","students","map","doc","id","data","checkUser","username","email","querySnapshot1","createStudentWithProduct","user","error","command","type","action","status","executer","add","courseApi","addStudent","birthdate","_isAMomentObject","firebase","Timestamp","fromDate","toDate","products","getStudent","student","valp","product","push","updateStudent","update","listAllBoughtStudents","enroleStudent","listAllProducts","addProduct","courses","course","c","name","shortname","url","API_URL","axios","post","then","resp","useStyles","makeStyles","root","sortOptions","label","descendingComparator","b","orderBy","applySort","sort","split","comparator","order","getComparator","stabilizedThis","el","index","StudentCreateForm","className","rest","useAuth","useState","setProducts","isMountedRef","getProducts","useCallback","fproducts","password1","setPasswords","getPasswords","p","classes","enqueueSnackbar","useSnackbar","selectedProducts","setSelectedProducts","page","setPage","limit","setLimit","query","hasAcceptedMarketing","isProspect","isReturning","filters","handleSelectAllProducts","event","target","checked","handlePageChange","newPage","handleLimitChange","parseInt","filteredClasses","filter","matches","containsQuery","forEach","property","toLowerCase","includes","keys","key","applyFilters","paginatedProducts","slice","applyPagination","selectedSomeClasses","selectedAllClasses","initialValues","class_code","firstname","lastname","phone","password","submit","onSubmit","values","setErrors","setStatus","setSubmitting","schoolid","localStorage","getItem","productids","Set","fetch","res","json","userid","userId","created_at","Date","getTime","r","alert","wait","success","variant","Button","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","clsx","Card","CardContent","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","onBlur","onChange","required","Box","mt","color","disabled","minWidth","Table","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","align","TableBody","isProductSelected","hover","selected","productId","prevSelected","s","endtime","moment","enddate","seconds","format","TablePagination","component","count","onChangePage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","Header","Breadcrumbs","separator","fontSize","aria-label","Link","to","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","StudentCreateView","Page","title","Container","maxWidth"],"mappings":"gKAAA,WAYeA,IAVS,WACtB,IAAMC,EAAYC,kBAAO,GAMzB,OAJAC,qBAAU,kBAAM,WACdF,EAAUG,SAAU,KACnB,IAEIH,I,kCCPT,IAAII,EAAyBC,EAAQ,KAEjCC,EAA0BD,EAAQ,KAEtCE,OAAOC,eAAeC,EAAS,aAAc,CAC3CC,OAAO,IAETD,EAAQE,aAAU,EAElB,IAAIC,EAAQN,EAAwBD,EAAQ,IAIxCQ,GAAW,EAFMT,EAAuBC,EAAQ,MAElBM,SAAuBC,EAAME,cAAc,OAAQ,CACnFC,EAAG,mDACD,gBAEJN,EAAQE,QAAUE,G,kCCnBH,SAASG,EAAeC,GACrC,IAAIC,EAEJ,GAAsB,qBAAXC,OAAwB,CACjC,GAAIA,OAAOC,eAEK,OADdF,EAASD,EAASE,OAAOC,gBACL,OAAOF,EAAOG,KAAKJ,GAGzC,GAAIE,OAAOG,UAEK,OADdJ,EAASD,EAASE,OAAOG,WACL,OAAOJ,EAAOG,KAAKJ,GAI3C,MAAM,IAAIM,UAAU,gCAftB,mC,2ICAeC,E,8EAAf,WAAsBC,GAAtB,qBAAAC,EAAA,sDAII,IAHIC,EAAmB,GAEnBC,GADAC,EAAmB,kEACWJ,OACxBK,EAAI,EAAGA,EAAIL,EAAQK,IAC1BH,GAAUE,EAAWE,OAAOC,KAAKC,MAAMD,KAAKR,SAAWI,IAL9D,yBAOWD,GAPX,4C,+BAUgBO,E,8EAAf,WAA6BT,GAA7B,mBAAAC,EAAA,sDAIE,IAHIC,EAAmB,GACA,aACnBC,EADmB,aACWH,OACxBK,EAAI,EAAGA,EAAIL,EAAQK,IAC1BH,GAHoB,aAGCI,OAAOC,KAAKC,MAAMD,KAAKR,SAAWI,IAL5D,yBAOSD,GAPT,4C,gXCHYQ,EAAe,uCAAG,WAAOC,GAAP,iBAAAV,EAAA,+EAEDW,IAAIC,YAAYC,WAAW,YAAYC,MAAM,YAAa,KAAMJ,GAAWI,MAAM,SAAS,KAAK,GAAGC,MAFjG,UAEvBC,EAFuB,OAG3BC,QAAQC,IAAIF,EAAcG,OAC1BF,QAAQC,IAAIF,EAAcI,OACtBJ,EAAcK,KALS,uBAMnBC,EAAWN,EAAcK,KAAKE,KAAI,SAACC,GACvC,OAAO,aACLC,GAAID,EAAIC,IACLD,EAAIE,WATc,kBAYlBJ,GAZkB,yDAe3BL,QAAQC,IAAR,MAf2B,0DAAH,sDAkBtBS,EAAS,uCAAI,WAAOD,GAAP,qBAAA1B,EAAA,6DACb4B,EAAWF,EAAKE,SAChBC,EAAMH,EAAKG,MAFE,SAGSlB,IAAIC,YAAYC,WAAW,SAASC,MAAM,WAAY,KAAMc,GAAUb,MAH/E,YAGbC,EAHa,QAICK,KAJD,qBAKXL,EAAcK,KAAKtB,OAAO,GALf,yCAMN,mBANM,wBAQUY,IAAIC,YAAYC,WAAW,SAASC,MAAM,QAAS,KAAMe,GAAOd,MAR1E,aAQbe,EARa,QASET,KATF,sBAUXS,EAAeT,KAAKtB,OAAO,GAVhB,0CAWN,gBAXM,iCAaV,WAbU,4CAAJ,sDAeFgC,EAAwB,uCAAG,WAAOC,EAAMN,GAAb,qBAAA1B,EAAA,+EAElB2B,EAAUD,GAFQ,UAEhCO,EAFgC,OAGpChB,QAAQC,IAAI,SAASe,GACX,WAAPA,EAJiC,yCAK3BA,GAL2B,cAOhCC,EAAU,CACZC,KAAM,UACNC,OAAQ,SACRC,OAAQ,EACRC,SAAUN,EACVN,KAAMA,GAERT,QAAQC,IAAIgB,GAdwB,UAedvB,IAAIC,YAAYC,WAAW,YAAY0B,IAAIL,GAf7B,eAehCM,EAfgC,iBAgBdA,EAAUzB,MAhBI,gCAgBGU,GAhBH,eAgBhCA,EAhBgC,OAiBpCR,QAAQC,IAAI,sBAAsBO,GAjBE,kBAkB7B,WAlB6B,kCAoBpCR,QAAQC,IAAR,MApBoC,0DAAH,wDAuBxBuB,EAAU,uCAAG,WAAOT,EAAMN,GAAb,eAAA1B,EAAA,sEAGlB0B,EAAKgB,UAAUC,mBACjBjB,EAAKgB,UAAYE,IAAShC,UAAUiC,UAAUC,SAASpB,EAAKgB,UAAUK,WAExErB,EAAKsB,SAAS,GACd/B,QAAQC,IAAIQ,EAAKgB,WACbR,EAAU,CACZC,KAAM,UACNC,OAAQ,MACRC,OAAQ,EACRC,SAAUN,EACVN,KAAMA,GAERT,QAAQC,IAAIgB,GAfU,SAgBAvB,IAAIC,YAAYC,WAAW,YAAY0B,IAAIL,GAhB3C,cAiBtBjB,QAAQC,IAAI,uBAjBU,kDAoBtBD,QAAQC,IAAR,MApBsB,0DAAH,wDAwBV+B,EAAU,uCAAG,WAAOxB,GAAP,mCAAAzB,EAAA,+EAEIW,IAAIC,YAAYC,WAAW,YAAYW,IAAIC,GAAIV,MAFnD,UAElBC,EAFkB,QAGhBkC,EAAUlC,EAAcU,QACtBD,GAAKA,EACTuB,EAAW,GACe,qBAApBE,EAAQF,SANI,wBAOpBE,EAAQF,SAAWA,EAPC,kBAQbE,GARa,0CAUCA,EAAQF,UAVT,mIAUPG,EAVO,YAWEA,EAAKpC,MAXP,QAWdqC,EAXc,OAYpBJ,EAASK,KAAKD,EAAQ3B,IAZF,0TActByB,EAAQF,SAAWA,EAdG,kBAgBfE,GAhBe,kCAkBtBjC,QAAQC,IAAR,MAlBsB,oFAAH,sDAsBVoC,EAAa,uCAAG,WAAO5B,GAAP,iBAAA1B,EAAA,6DACvB0B,EAAKgB,UAAUC,mBACjBjB,EAAKgB,UAAYE,IAAShC,UAAUiC,UAAUC,SAASpB,EAAKgB,UAAUK,WAF7C,SAKrBtB,EAAKC,EAAKD,GALW,SAMNd,IAAIC,YAAYC,WAAW,YAAYW,IAAIC,GAAI8B,OAAO7B,GANhD,cAMrBzB,EANqB,yBAQlBA,GARkB,gCAUzBgB,QAAQC,IAAR,MAVyB,yDAAH,sDAebsC,EAAqB,uCAAG,WAAO9C,GAAP,iBAAAV,EAAA,+EAEPW,IAAIC,YAAYC,WAAW,YAAYC,MAAM,YAAa,KAAMJ,GAAWI,MAAM,SAAS,KAAK,GAAGA,MAAM,WAAW,IAAI,IAAIC,MAFpH,YAE7BC,EAF6B,QAGfK,KAHe,uBAIzBC,EAAWN,EAAcK,KAAKE,KAAI,SAACC,GACvC,OAAO,aACLC,GAAID,EAAIC,IACLD,EAAIE,WAPoB,kBAUxBJ,GAVwB,uDAajCL,QAAQC,IAAR,MAbiC,yDAAH,sDAuCrBuC,EAAa,uCAAG,WAAOzB,EAAMN,GAAb,eAAA1B,EAAA,sEAErBkC,EAAU,CACZC,KAAM,iBACNC,OAAQ,MACRC,OAAQ,EACRC,SAAUN,EACVN,KAAMA,GAERT,QAAQC,IAAIgB,GATa,SAUnBvB,IAAIC,YAAYC,WAAW,YAAY0B,IAAIL,GAVxB,OAWzBjB,QAAQC,IAAI,uBAXa,gDAczBD,QAAQC,IAAR,MAdyB,yDAAH,yD,uLC9JbwC,EAAe,uCAAG,8BAAA1D,EAAA,+EAEDW,IAAIC,YAAYC,WAAW,YAAYE,MAFtC,YAEvBC,EAFuB,QAGTK,KAHS,uBAInB2B,EAAWhC,EAAcK,KAAKE,KAAI,SAACC,GACvC,OAAO,aACLC,GAAID,EAAIC,IACLD,EAAIE,WAPc,kBAUlBsB,GAVkB,uDAa3B/B,QAAQC,IAAR,MAb2B,yDAAH,qDAkBfyC,EAAU,uCAAG,WAAOjC,EAAKkC,GAAZ,mCAAA5D,EAAA,+DAEtB0B,EAAKkC,QAAU,GAFO,iCAGDA,GAHC,gIAGPnC,EAHO,YAIMd,IAAIC,YAAYC,WAAW,WAAWW,IAAIC,GAAIV,MAJpD,QAIhBC,EAJgB,OAKd6C,EAAS7C,EAAcU,OACzBoC,EAAE,CAACrC,GAAGA,EAAGsC,KAAKF,EAAOE,KAAKC,UAAUH,EAAOG,WAC/CtC,EAAKkC,QAAQP,KAAKS,GAPE,sTASnBpC,EAAKkC,QAAQ7D,OAAO,GATD,oEAYFY,IAAIC,YAAYC,WAAW,YAAY0B,IAAIb,GAZzC,eAahBuC,EAbgB,UAaPC,IAbO,uBActBC,IAAMC,KAAKH,EAAIvC,GAAM2C,MAAK,SAAAC,GACtBrD,QAAQC,IAAIoD,EAAK5C,SAfC,kDAmBpBT,QAAQC,IAAR,MAnBoB,mFAAH,yD,uYC8BjBqD,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OAEFC,EAAc,CAClB,CACE1F,MAAO,WACP2F,MAAO,oCAET,CACE3F,MAAO,YACP2F,MAAO,qCAuCLC,EAAuB,SAAC5E,EAAG6E,EAAGC,GAClC,OAAID,EAAEC,GAAW9E,EAAE8E,IACT,EAGND,EAAEC,GAAW9E,EAAE8E,GACV,EAGF,GASHC,EAAY,SAAC/B,EAAUgC,GAAU,IAAD,EACXA,EAAKC,MAAM,KADA,mBAC7BH,EAD6B,KAE9BI,EARc,SAACC,EAAOL,GAC5B,MAAiB,SAAVK,EACH,SAACnF,EAAG6E,GAAJ,OAAUD,EAAqB5E,EAAG6E,EAAGC,IACrC,SAAC9E,EAAG6E,GAAJ,OAAWD,EAAqB5E,EAAG6E,EAAGC,IAKvBM,CAFiB,KAEIN,GAClCO,EAAiBrC,EAASzB,KAAI,SAAC+D,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAUxD,OARAF,EAAeL,MAAK,SAAChF,EAAG6E,GACtB,IAAMM,EAAQD,EAAWlF,EAAE,GAAI6E,EAAE,IAEjC,OAAc,IAAVM,EAAoBA,EAEjBnF,EAAE,GAAK6E,EAAE,MAGXQ,EAAe9D,KAAI,SAAC+D,GAAD,OAAQA,EAAG,OA8ZxBE,EAhZW,SAAC,GAGpB,IAFLC,EAEI,EAFJA,UACGC,EACC,6BACI1D,EAAQ2D,cAAR3D,KADJ,EAE4B4D,mBAAS,IAFrC,mBAEG5C,EAFH,KAEa6C,EAFb,KAGEC,EAAezH,cACf0H,EAAcC,sBAAW,sBAAC,4BAAAhG,EAAA,+EAEJ0D,cAFI,OAEtBuC,EAFsB,OAGxBH,EAAarH,UACfoH,EAAYI,GACZhF,QAAQC,IAAI,iBALc,gDAS5BD,QAAQgB,MAAR,MAT4B,yDAW7B,CAAC6D,IAEJtH,qBAAU,WACRuH,MACC,CAACA,IAnBA,MAqB8BH,mBAAS,IArBvC,mBAqBGM,EArBH,KAqBcC,EArBd,KAsBEC,EAAeJ,sBAAW,sBAAC,4BAAAhG,EAAA,sEACVQ,YAAc,GADJ,mBAC3B6F,EAAG,OADwB,KAE/BpF,QAAQC,IAAImF,GACZF,EAAaE,GAHkB,2CAK9B,CAACP,IAEHtH,qBAAU,WACT4H,MACC,CAACA,IAEJ,IAAME,EAAU/B,IACRgC,EAAoBC,cAApBD,gBAlCJ,EAoC0CX,mBAAS,IApCnD,mBAoCCa,EApCD,KAoCmBC,GApCnB,QA0CoBd,mBAAS,GA1C7B,qBA0CGe,GA1CH,MA0CSC,GA1CT,SA2CsBhB,mBAAS,IA3C/B,qBA2CGiB,GA3CH,MA2CUC,GA3CV,SA4CsBlB,mBAAS,IA5C/B,qBA4CGmB,GA5CH,gBA8CoBnB,mBAASlB,EAAY,GAAG1F,QA9C5C,qBA8CGgG,GA9CH,gBA+C0BY,mBAAS,CACrCoB,qBAAsB,KACtBC,WAAY,KACZC,YAAa,QAlDX,qBA+CGC,GA/CH,MAsDEC,IAtDF,MAsD4B,SAACC,GAC/BX,GAAoBW,EAAMC,OAAOC,QAC7BvE,EAASzB,KAAI,SAAC6B,GAAD,OAAaA,EAAQ3B,MAClC,MAWA+F,GAAmB,SAACH,EAAOI,GAC/Bb,GAAQa,IAGJC,GAAoB,SAACL,GACzBP,GAASa,SAASN,EAAMC,OAAOtI,SAG3B4I,GA/Ja,SAAC5E,EAAU+D,EAAOI,GACrC,OAAOnE,EAAS6E,QAAO,SAACzE,GACtB,IAAI0E,GAAU,EAEd,GAAIf,EAAO,CACT,IACIgB,GAAgB,EADD,CAAC,QAAS,QAGlBC,SAAQ,SAACC,GACd7E,EAAQ6E,GAAUC,cAAcC,SAASpB,EAAMmB,iBACjDH,GAAgB,MAIfA,IACHD,GAAU,GAYd,OARAjJ,OAAOuJ,KAAKjB,GAASa,SAAQ,SAACK,GAC5B,IAAMrJ,EAAQmI,EAAQkB,GAElBrJ,GAASoE,EAAQiF,KAASrJ,IAC5B8I,GAAU,MAIPA,KAoIeQ,CAAatF,EAAU+D,GAAOI,IAEhDoB,GAlIgB,SAACvF,EAAU2D,EAAME,GACvC,OAAO7D,EAASwF,MAAM7B,EAAOE,EAAOF,EAAOE,EAAQA,GAiIzB4B,CADJ1D,EAAU6C,GAAiB5C,IACQ2B,GAAME,IAEzD6B,IADuBjC,EAAiB1G,OAClB0G,EAAiB1G,OAAS,GAAK0G,EAAiB1G,OAASiD,EAASjD,QACxF4I,GAAqBlC,EAAiB1G,SAAWiD,EAASjD,OAG9D,OACA,kBAAC,IAAD,CACA6I,cAAe,CACbC,WAAY,GACZjH,SAAU,GACVkH,UAAW,GACXC,SAAU,GACVC,MAAO,GACPnH,MAAO,GACPoH,SAAU,GACVC,OAAQ,MAERC,SAAQ,uCAAE,WAAOC,EAAP,wBAAApJ,EAAA,6DACRqJ,EADQ,EACRA,UACAC,EAFQ,EAERA,UACAC,EAHQ,EAGRA,cAHQ,SAMFC,EAAWC,aAAaC,QAAQ,YACpCN,EAAO1I,UAAY8I,EACnBJ,EAAOO,WAAP,YAAwB,IAAIC,IAAInD,IAChC2C,EAAOH,SAAS/C,EAChB2D,MAAM,oCAAoCxF,MAAK,SAAAyF,GAAG,OAAEA,EAAIC,UAAQ1F,KAAhE,uCAAsE,WAAOpE,GAAP,eAAAD,EAAA,4DAC9C,oBAAZgC,EAAK+B,KACb9D,EAAO8D,KAAO/B,EAAK8G,UAAY,IAAM9G,EAAK+G,SAE1C9I,EAAO8D,KAAK/B,EAAK+B,KAEnB9D,EAAO+J,OAAOhI,EAAKiI,OACnBhK,EAAOiK,YAAa,IAAIC,MAAOC,UAPqC,SAQtDrI,YAAyB9B,EAAQmJ,GARqB,OAS7D,aADHiB,EARgE,UAWtD,oBAAJA,EACRC,MAAM,yCACK,iBAAJD,GACPC,MAAM,uCAd4D,2CAAtE,uDAiBArJ,QAAQC,IAAIkI,GACZnI,QAAQC,IAAIuF,GA5BN,UA+BA8D,YAAK,KA/BL,QAgCNjB,EAAU,CAAEkB,SAAS,IACrBjB,GAAc,GACdhD,EAAgB,gBAAiB,CAC/BkE,QAAS,UACTrI,OAAQ,kBAACsI,EAAA,EAAD,kBApCJ,kDAuCNzJ,QAAQgB,MAAR,MACAqH,EAAU,CAAEkB,SAAS,IACrBnB,EAAU,CAAEH,OAAQ,KAAIyB,UACxBpB,GAAc,GA1CR,0DAAF,0DA8CP,gBACCqB,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,QACA7B,EAPD,EAOCA,OAPD,OASC,wCACE3D,UAAWyF,kBAAK5E,EAAQ7B,KAAMgB,GAC9B0D,SAAU4B,GACNrF,GAEJ,kBAACyF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAS,GAET,kBAACF,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACE1J,MAAO2J,QAAQX,EAAQnC,WAAa8B,EAAO9B,WAC3C+C,WAAS,EACTC,WAAYb,EAAQnC,WAAa8B,EAAO9B,UACxCnE,MAAM,6BACNZ,KAAK,YACLgI,OAAQlB,EACRmB,SAAUlB,EACVmB,UAAQ,EACRjN,MAAOoK,EAAON,UACd2B,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACE1J,MAAO2J,QAAQX,EAAQlC,UAAY6B,EAAO7B,UAC1C8C,WAAS,EACTC,WAAYb,EAAQlC,UAAY6B,EAAO7B,SACvCpE,MAAM,UACNZ,KAAK,WACLgI,OAAQlB,EACRmB,SAAUlB,EACVmB,UAAQ,EACRjN,MAAOoK,EAAOL,SACd0B,QAAQ,cAIZ,kBAACY,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACE1J,MAAO2J,QAAQX,EAAQrJ,UAAYgJ,EAAOhJ,UAC1CiK,WAAS,EACTC,WAAYb,EAAQrJ,UAAYgJ,EAAOhJ,SACvC+C,MAAM,WACNZ,KAAK,WACLkI,UAAQ,EACRF,OAAQlB,EACRmB,SAAUlB,EACV9L,MAAOoK,EAAOxH,SACd6I,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAGJ,kBAACC,EAAA,EAAD,CACE1J,MAAO2J,QAAQX,EAAQpC,YAAc+B,EAAO/B,YAC5CgD,WAAS,EACTC,WAAYb,EAAQpC,YAAc+B,EAAO/B,WACzClE,MAAM,WACNZ,KAAK,aACLgI,OAAQlB,EACRmB,SAAUlB,EACVmB,UAAQ,EACRjN,MAAOoK,EAAOP,WACd4B,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACE1J,MAAO2J,QAAQX,EAAQhC,UAAY2B,EAAO3B,UAC1C4C,WAAS,EACTC,WAAYb,EAAQhC,UAAY2B,EAAO3B,SACvCtE,MAAM,WACNZ,KAAK,WACLkI,UAAQ,EACRF,OAAQlB,EACRmB,SAAUlB,EACV9L,MAAOkH,EACPuE,QAAQ,cAIZ,kBAACY,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACE1J,MAAO2J,QAAQX,EAAQpJ,OAAS+I,EAAO/I,OACvCgK,WAAS,EACTC,WAAYb,EAAQpJ,OAAS+I,EAAO/I,MACpC8C,MAAM,QACNZ,KAAK,QACLgI,OAAQlB,EACRmB,SAAUlB,EACVmB,UAAQ,EACRjN,MAAOoK,EAAOvH,MACd4I,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAEJ,kBAACC,EAAA,EAAD,CACE1J,MAAO2J,QAAQX,EAAQjC,OAAS4B,EAAO5B,OACvC6C,WAAS,EACTC,WAAYb,EAAQjC,OAAS4B,EAAO5B,MACpCrE,MAAM,oCACNZ,KAAK,QACLgI,OAAQlB,EACRmB,SAAUlB,EACVmB,UAAQ,EACRjN,MAAOoK,EAAOJ,MACdyB,QAAQ,cAGZ,kBAACY,EAAA,EAAD,CACEG,MAAI,EACJC,GAAI,EACJC,GAAI,IAER,kBAACQ,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACzB,EAAA,EAAD,CACED,QAAQ,YACR2B,MAAM,YACNjK,KAAK,SACLkK,SAAUrB,GAJZ,gBAcJ,kBAAC,IAAD,KACJ,kBAACkB,EAAA,EAAD,CAAKI,SAAU,KACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,EAAA,EAAD,CACErF,QAASoB,GACTkE,cAAenE,GACfsD,SAAU5E,MAGd,kBAACsF,EAAA,EAAD,eAGA,kBAACA,EAAA,EAAD,uBAGA,kBAACA,EAAA,EAAD,CAAWI,MAAM,SAAjB,+BAKJ,kBAACC,EAAA,EAAD,KACGxE,GAAkBhH,KAAI,SAAC6B,GACtB,IAAM4J,EAAoBvG,EAAiB0B,SAAS/E,EAAQ3B,IAE5D,OACE,kBAACgL,EAAA,EAAD,CACEQ,OAAK,EACL5E,IAAKjF,EAAQ3B,GACbyL,SAAUF,GAEV,kBAACN,EAAA,EAAD,CAAWC,QAAQ,YACjB,kBAACC,EAAA,EAAD,CACErF,QAASyF,EACThB,SAAU,SAAC3E,GAAD,OA/RO8F,EA+RkC/J,EAAQ3B,QA9R1EgF,EAAiB0B,SAASgF,GAG7BzG,IAAoB,SAAC0G,GAAD,OAAkBA,EAAavF,QAAO,SAACpG,GAAD,OAAQA,IAAO0L,QAFzEzG,IAAoB,SAAC0G,GAAD,4BAAsBA,GAAtB,CAAoCD,QAF7B,IAAQA,GAgSjBnO,MAAOgO,KAGb,kBAACN,EAAA,EAAD,KACCtJ,EAAQW,MAEP,kBAAC2I,EAAA,EAAD,KAECtJ,EAAQQ,QAAQrC,KAAI,SAAC8L,GAAD,OAEjB,0BAAMhF,IAAKgF,EAAE5L,IAEV4L,EAAErJ,UAFL,SAOJ,kBAAC0I,EAAA,EAAD,KACoB,KAAjBtJ,EAAQkK,QAAaC,IAA+B,IAAxBnK,EAAQoK,QAAQC,SAAcC,OAAO,cAActK,EAAQkK,iBAWxG,kBAACK,EAAA,EAAD,CACEC,UAAU,MACVC,MAAOjG,GAAgB7H,OACvB+N,aAActG,GACduG,oBAAqBrG,GACrBf,KAAMA,GACNqH,YAAanH,GACboH,mBAAoB,CAAC,EAAG,GAAI,Y,sDC1gB9B1J,EAAYC,aAAW,iBAAO,CAClCC,KAAM,OA8COyJ,EA3CA,SAAC,GAA4B,IAA1BzI,EAAyB,EAAzBA,UAAcC,EAAW,6BACnCY,EAAU/B,IAEhB,OACE,uCACEkB,UAAWyF,kBAAK5E,EAAQ7B,KAAMgB,IAC1BC,GAEJ,kBAACyI,EAAA,EAAD,CACEC,UAAW,kBAAC,IAAD,CAAkBC,SAAS,UACtCC,aAAW,cAEX,kBAACC,EAAA,EAAD,CACE9D,QAAQ,QACR2B,MAAM,UACNoC,GAAG,SACHZ,UAAWa,KAJb,kBAQA,kBAACF,EAAA,EAAD,CACE9D,QAAQ,QACR2B,MAAM,UACNoC,GAAG,yBACHZ,UAAWa,KAJb,oCASF,kBAACC,EAAA,EAAD,CACEjE,QAAQ,KACR2B,MAAM,eAFR,mCCnCA7H,EAAYC,aAAW,SAACmK,GAAD,MAAY,CACvClK,KAAM,CACJmK,gBAAiBD,EAAME,QAAQC,WAAWC,KAC1CC,UAAW,OACXC,WAAYN,EAAMpD,QAAQ,GAC1B2D,cAAeP,EAAMpD,QAAQ,QA0BlB4D,UAtBW,WACxB,IAAM7I,EAAU/B,IAIhB,OACE,kBAAC6K,EAAA,EAAD,CACE3J,UAAWa,EAAQ7B,KACnB4K,MAAM,yBAEN,kBAACC,EAAA,EAAD,CAAWC,UAAU,GACnB,kBAAC,EAAD,OAEF,kBAACrD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACmD,EAAA,EAAD,CAAWC,SAAS,MAClB,kBAAC,EAAD","file":"static/js/77.035ef67b.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","async function random(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n };\n\n async function random_number(length) {\n   var result           = '';\n   var characters       = '0123456789';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n};\n \n export {random,random_number} ;\n","import firebase from 'firebase';\nimport app from './firebase';\n\n// import axios from 'axios';\n// import {\n//   API_URL\n// } from 'src/config';\nexport const listAllStudents = async (school_id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').where(\"school_id\", \"==\", school_id).where(\"status\",\"==\",0).get();\n    console.log(querySnapshot.empty)\n    console.log(querySnapshot.size)\n    if (querySnapshot.docs) {\n      const students = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return students\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nconst checkUser  = async (data)=>{\n  let username = data.username;\n  let email=data.email;\n  let querySnapshot = await app.firestore().collection('users').where(\"username\", \"==\", username).get();\n  if (querySnapshot.docs) {\n    if (querySnapshot.docs.length>0)\n      return \"username_exited\";\n  }\n  let querySnapshot1 = await app.firestore().collection('users').where(\"email\", \"==\", email).get();\n  if (querySnapshot1.docs) {\n    if (querySnapshot1.docs.length>0)\n      return \"email_exited\";\n  }\n  return \"success\";\n}\nexport const createStudentWithProduct = async (user, data) => {\n  try {\n    let error = await checkUser(data);\n    console.log(\"error:\",error)\n    if(error!=\"success\"){\n      return error; \n    }\n    let command = {\n      type: \"student\",\n      action: \"create\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    let id = await (await courseApi.get()).id;\n    console.log(\"add command success\",id)\n    return \"success\";\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const addStudent = async (user, data) => {\n  try {\n\n    if (data.birthdate._isAMomentObject) {\n      data.birthdate = firebase.firestore.Timestamp.fromDate(data.birthdate.toDate())\n    }\n    data.products=[]\n    console.log(data.birthdate);\n    let command = {\n      type: \"student\",\n      action: \"add\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    console.log(\"add command success\")\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getStudent = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').doc(id).get();\n    const student = querySnapshot.data()\n    student.id = id\n    let products = []\n    if(typeof(student.products)===\"undefined\"){\n      student.products = products\n      return student;\n    }\n    for await (let valp of student.products){\n      const product = await valp.get();\n      products.push(product.id)\n    }\n    student.products = products\n\n    return student\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const updateStudent = async (data) => {\n  if (data.birthdate._isAMomentObject) {\n    data.birthdate = firebase.firestore.Timestamp.fromDate(data.birthdate.toDate())\n  }\n  try {\n    let id = data.id;\n    let result = await app.firestore().collection('students').doc(id).update(data);\n    \n    return result\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nexport const listAllBoughtStudents = async (school_id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').where(\"school_id\", \"==\", school_id).where(\"status\",\"==\",0).where(\"products\",\">\",[]).get();\n    if (querySnapshot.docs) {\n      const students = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return students\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const addBoughtStudent = async (data) => {\n  try {\n    let id = data.id;\n    app.firestore().collection('students').doc(id).update(data);\n    \n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getStudentUser = async (id) => {\n  try {\n    let stUser = await getStudentUser(id);\n    let querySnapshot = await app.firestore().collection('users').doc(id).get();\n    const students = querySnapshot.data()\n    students.id = id\n    students.username = stUser.username;\n    return students\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\nexport const enroleStudent = async (user, data) => {\n  try {\n    let command = {\n      type: \"enrole_student\",\n      action: \"add\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    await app.firestore().collection('commands').add(command);\n    console.log(\"add command success\")\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n","\nimport app from './firebase';\nimport axios from 'axios';\nimport { API_URL } from '../config';\n\nexport const listAllProducts = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('products').get();\n    if (querySnapshot.docs) {\n      const products = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return products\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\nexport const addProduct = async (data,courses) => {\n  try { \n    data.courses = [];\n    for await (let id of courses){\n      let querySnapshot = await app.firestore().collection('courses').doc(id).get();\n      const course = querySnapshot.data()\n      let c={id:id,name:course.name,shortname:course.shortname};\n      data.courses.push(c);\n    }\n    if(data.courses.length<1) {\n      return;\n    }\n    let result  = await app.firestore().collection('products').add(data);\n    const url = `${API_URL}/api/create_cohorts`;\n    axios.post(url,data).then(resp => {\n        console.log(resp.data);\n    });\n\n  } catch (err) {\n      console.log(err);\n  }\n};\n\nexport const getProduct = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('product').doc(id).get();\n    const product = querySnapshot.data()\n    return product\n  } catch (err) {\n    console.log(err);\n  }\n}","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\n// import {\n//   Box,\n//   Button,\n//   Card,\n//   CardContent,\n//   Grid,\n//   TextField,\n//   makeStyles,\n//   Tooltip\n// } from '@material-ui/core';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  CardContent,\n  Divider,\n  IconButton,\n  InputAdornment,\n  SvgIcon,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  TextField,\n  Typography,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport wait from 'src/utils/wait';\n\nimport moment from 'moment';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport {createStudentWithProduct} from '../../../api/students.js';\nimport {listAllProducts} from '../../../api/products'\nimport useAuth from 'src/hooks/useAuth';\nimport {random_number} from 'src/utils/stringutil';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\nconst sortOptions = [\n  {\n    value: 'name|asc',\n    label: 'Tên học sinh (tăng)'\n  },\n  {\n    value: 'name|desc',\n    label: 'Tên học sinh (giảm)'\n  }\n];\n\nconst applyFilters = (products, query, filters) => {\n  return products.filter((product) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['email', 'name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (product[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && product[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n};\n\nconst applyPagination = (products, page, limit) => {\n  return products.slice(page * limit, page * limit + limit);\n};\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst applySort = (products, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = products.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst genders = [\n  {\n    id: 'male',\n    name: 'Nam'\n  },\n  {\n    id: 'female',\n    name: 'Nữ'\n  }\n];\n\nconst StudentCreateForm = ({\n  className,\n  ...rest\n}) => {\n  const { user} = useAuth();\n  const [products, setProducts] = useState([]);\n  const isMountedRef = useIsMountedRef();\n  const getProducts = useCallback(async () => {\n    try {\n      const fproducts = await listAllProducts();\n      if (isMountedRef.current) {\n        setProducts(fproducts);\n        console.log(\"class loaded\")\n      }\n      \n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  const [password1, setPasswords] = useState([]);\n  const getPasswords = useCallback(async () => {\n    let p ='abcd'+ await random_number(4);\n    console.log(p);\n    setPasswords(p);\n\n  }, [isMountedRef]);\n\n   useEffect(() => {\n    getPasswords();\n  }, [getPasswords]);\n\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  var [selectedProducts, setSelectedProducts] = useState([]);\n\n  // for (let id of student.products){\n  //   selectedProducts.push(id)\n\n  // }\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  \n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n\n  const handleSelectAllProducts = (event) => {\n    setSelectedProducts(event.target.checked\n      ? products.map((product) => product.id)\n      : []);\n  };\n\n  const handleSelectOneProduct = (event, productId) => {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts((prevSelected) => [...prevSelected, productId]);\n    } else {\n      setSelectedProducts((prevSelected) => prevSelected.filter((id) => id !== productId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const filteredClasses = applyFilters(products, query, filters);\n  const sortedClasses = applySort(filteredClasses, sort);\n  const paginatedProducts = applyPagination(sortedClasses, page, limit);\n  const enableBulkOperations = selectedProducts.length > 0;\n  const selectedSomeClasses = selectedProducts.length > 0 && selectedProducts.length < products.length;\n  const selectedAllClasses = selectedProducts.length === products.length;\n\n\n    return (\n    <Formik\n    initialValues={{\n      class_code: '',\n      username: '',\n      firstname: '',\n      lastname: '',\n      phone: '',\n      email: '',\n      password: '',\n      submit: null\n    }}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          let schoolid = localStorage.getItem('schoolid');\n          values.school_id = schoolid;\n          values.productids = [...new Set(selectedProducts)];\n          values.password=password1;\n          fetch(`https://geolocation-db.com/json/`).then(res=>res.json()).then( async (result)=>{\n            if(typeof(user.name)==\"undefined\"){\n              result.name = user.firstname + \" \" + user.lastname;  \n            } else {\n              result.name=user.name\n            }\n            result.userid=user.userId\n            result.created_at = new Date().getTime();\n            let r = await createStudentWithProduct(result ,values);\n            if(r===\"success\"){\n              //redirect\n            } else if(r===\"username_exited\"){\n              alert(\"username đã tồn tại\")\n            }else if(r===\"email_exited\"){\n              alert(\"email đã tồn tại\")\n            }\n          });\n          console.log(values);\n          console.log(selectedProducts);\n          \n          // NOTE: Make API request\n          await wait(500);\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Class updated', {\n            variant: 'success',\n            action: <Button>See all</Button>\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.firstname && errors.firstname)}\n                    fullWidth\n                    helperText={touched.firstname && errors.firstname}\n                    label=\"Đệm và tên\"\n                    name=\"firstname\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.firstname}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.lastname && errors.lastname)}\n                    fullWidth\n                    helperText={touched.lastname && errors.lastname}\n                    label=\"Họ\"\n                    name=\"lastname\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.lastname}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                \n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.username && errors.username)}\n                    fullWidth\n                    helperText={touched.username && errors.username}\n                    label=\"username\"\n                    name=\"username\"\n                    required\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.username}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  \n                  <TextField\n                    error={Boolean(touched.class_code && errors.class_code)}\n                    fullWidth\n                    helperText={touched.class_code && errors.class_code}\n                    label=\"Lớp\"\n                    name=\"class_code\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.class_code}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.password && errors.password)}\n                    fullWidth\n                    helperText={touched.password && errors.password}\n                    label=\"password\"\n                    name=\"password\"\n                    required\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={password1}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.email && errors.email)}\n                    fullWidth\n                    helperText={touched.email && errors.email}\n                    label=\"Email\"\n                    name=\"email\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.email}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.phone && errors.phone)}\n                    fullWidth\n                    helperText={touched.phone && errors.phone}\n                    label=\"Số điện thoại\"\n                    name=\"phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Lưu\n                </Button>\n              </Box>\n              </Grid>  \n                \n              </Grid>\n              \n            </CardContent>\n            <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllClasses}\n                    indeterminate={selectedSomeClasses}\n                    onChange={handleSelectAllProducts}\n                  />\n                </TableCell>\n                <TableCell>\n                  Tên \n                </TableCell>\n                <TableCell>\n                  Các khóa\n                </TableCell>\n                <TableCell align=\"right\">\n                  Ngày hết hạn\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedProducts.map((product) => {\n                const isProductSelected = selectedProducts.includes(product.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={product.id}\n                    selected={isProductSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isProductSelected}\n                        onChange={(event) => handleSelectOneProduct(event, product.id)}\n                        value={isProductSelected}\n                      />\n                    </TableCell>\n                  <TableCell>\n                  {product.name}\n                  </TableCell>\n                    <TableCell>\n                    \n                    {product.courses.map((s) => \n                      (\n                        <span key={s.id}\n                        >\n                          {s.shortname}, \n                        </span>\n                      )\n                    )}\n                    </TableCell>\n                    <TableCell>\n                      {product.endtime==\"0\"?moment(product.enddate.seconds*1000).format('DD/MM/YYYY'):product.endtime}\n                    \n                    </TableCell>\n                    \n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredClasses.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nStudentCreateForm.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default StudentCreateForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/hbon \"\n          component={RouterLink}\n        >\n          Trang chủ\n        </Link>\n        <Link\n          variant=\"body1\"\n          color=\"inherit\"\n          to=\"/hbon/management/users\"\n          component={RouterLink}\n        >\n          Tạo mới học sinh\n        </Link>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Thêm học sinh lẻ\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport StudentCreateForm from './StudentCreateForm';\nimport Header from './Header';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst StudentCreateView = () => {\n  const classes = useStyles();\n\n\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Thêm nội dung\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <StudentCreateForm />\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default StudentCreateView;\n"],"sourceRoot":""}