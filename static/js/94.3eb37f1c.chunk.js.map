{"version":3,"sources":["../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","utils/stringutil.js","api/classes.js","views/classes/ClassCreateView/ClassCreateForm.js","views/classes/ClassCreateView/Header.js","views/classes/ClassCreateView/index.js"],"names":["_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","random","length","a","result","charactersLength","characters","i","charAt","Math","floor","random_number","addClass","data","code","app","firestore","collection","doc","docRef","get","exists","set","console","log","school_id","update","classes","firebase","FieldValue","arrayUnion","getClassApi","id","querySnapshot","updateClass","listAllClasses","where","docs","map","useStyles","makeStyles","root","ClassCreateForm","className","rest","history","useHistory","useSnackbar","enqueueSnackbar","initialValues","name","years","submit","validationSchema","Yup","shape","max","required","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","localStorage","getItem","replace","wait","push","error","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","clsx","Card","CardContent","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","variant","Box","mt","Button","color","type","disabled","Header","schoolname","Breadcrumbs","separator","fontSize","aria-label","Link","to","component","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","ClassCreateView","props","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/94.3eb37f1c.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","async function random(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n };\n\n async function random_number(length) {\n   var result           = '';\n   var characters       = '0123456789';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n};\n \n export {random,random_number} ;\n","import app from './firebase';\nimport firebase from 'firebase';\nimport {random} from 'src/utils/stringutil';\nexport const addClass = async (data) => {\n    try {\n        const code = await random(6);\n        var docRef = await app.firestore().collection(\"classes\").doc(code);\n\n        const doc = docRef.get()\n        if (doc.exists) {\n            return \"existed\";\n        } else {\n            await app.firestore().collection('classes').doc(code).set(data);\n            console.log(\"add class success\");\n            // children:firebase.firestore.FieldValue.arrayUnion(String(student_id))\n\n            await app.firestore().collection('schools').doc(data.school_id).update({classes:firebase.firestore.FieldValue.arrayUnion(docRef)})\n        }\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const getClassApi = async (id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('classes').doc(id).get();\n        const classes = querySnapshot.data()\n        classes.id=id\n        return classes\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const updateClass = async (data) => {\n    try {\n        console.log(data)\n        let id=data.id;\n        let result  = await app.firestore().collection('classes').doc(id).update(data);\n        \n        return result\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const listAllClasses = async (school_id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('classes').where(\"school_id\",\"==\",school_id).get();\n        if (querySnapshot.docs) {\n            const classes = querySnapshot.docs.map((doc) => {\n              return {\n                id: doc.id,\n                ...doc.data()\n              }\n            })\n            console.log(classes)\n            return classes;\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const listJsonClasses = async (school_id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('schools').doc(school_id).get();\n        const dclasses = await querySnapshot.data().classes\n        let a=[]\n        for await (let val of dclasses){\n            const doc =  await val.get()\n            a[doc.id] = { id: doc.id, ...doc.data() }\n        }\n        return a;\n    } catch (err) {\n        console.log(err);\n    }\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  makeStyles,\n  Tooltip\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\nimport {addClass} from '../../../api/classes.js';\nimport { useHistory } from 'react-router-dom';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst ClassCreateForm = ({\n  className,\n  ...rest\n}) => {\n\n  const classes = useStyles();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n    return (\n    <Formik\n    initialValues={{\n      name: '',\n      years:'',\n      submit: null\n    }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().max(255).required('Name is required'),\n        years: Yup.string().max(15),\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          values.school_id = localStorage.getItem('schoolid');\n          values.name = values.name.replace(/\\s/g, '');\n          addClass(values)\n          // NOTE: Make API request\n          await wait(500);\n          history.push('/school/management/classes');\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Tên lớp\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.years && errors.years)}\n                    fullWidth\n                    helperText={touched.years && errors.years}\n                    label=\"Niên khóa\"\n                    name=\"years\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.years}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n                \n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Lưu\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nClassCreateForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ClassCreateForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  let schoolname = localStorage.getItem('schoolname');\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/hbon/management/schools\"\n            component={RouterLink}\n          >\n            Trường: {schoolname}\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/school/management/classes\"\n            component={RouterLink}\n          >\n            Lớp học\n          </Link>\n      </Breadcrumbs>\n      <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Thêm lớp học\n        </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport ClassCreateForm from './ClassCreateForm';\nimport Header from './Header';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst ClassCreateView = (props) => {\n  \n  const classes = useStyles();\n  return (\n    <Page\n      className={classes.root}\n      title=\"Thêm lớp học\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <ClassCreateForm />\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default ClassCreateView;\n"],"sourceRoot":""}