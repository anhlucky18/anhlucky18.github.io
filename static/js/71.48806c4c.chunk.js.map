{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","utils/stringutil.js","api/classes.js","api/students.js","views/bought_student/BoughtStudentListView/Header.js","views/bought_student/BoughtStudentListView/Results.js","views/bought_student/BoughtStudentListView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","random","length","a","result","charactersLength","characters","i","charAt","Math","floor","random_number","addClass","data","code","app","firestore","collection","doc","docRef","get","exists","set","console","log","school_id","update","classes","firebase","FieldValue","arrayUnion","getClassApi","id","querySnapshot","updateClass","listAllClasses","where","docs","map","listAllStudents","empty","size","students","checkUser","username","email","querySnapshot1","createStudentWithProduct","user","error","command","type","action","status","executer","add","courseApi","addStudent","birthdate","_isAMomentObject","Timestamp","fromDate","toDate","products","getStudent","student","valp","product","push","updateStudent","listAllBoughtStudents","enroleStudent","useStyles","makeStyles","theme","root","marginBottom","spacing","marginLeft","Header","className","rest","schoolname","localStorage","getItem","Grid","clsx","container","justify","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","tabs","label","class_init","name","sortOptions","descendingComparator","b","orderBy","applySort","sort","split","comparator","order","getComparator","stabilizedThis","el","index","queryField","width","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","backgroundColor","palette","background","bulkAction","avatar","height","marginRight","Results","schoolid","useState","sclasses","setClasses","isMountedRef","getClasses","useCallback","setSClass","sclass","currentTab","setCurrentTab","selectedBoughtStudents","setSelectedBoughtStudents","page","setPage","limit","setLimit","query","setQuery","setSort","hasAcceptedMarketing","isProspect","isReturning","filters","setFilters","handleSelectAllBoughtStudents","event","target","checked","filteredClasses","filter","matches","containsQuery","forEach","property","toLowerCase","includes","keys","key","applyFilters","paginatedBoughtStudents","slice","applyPagination","enableBulkOperations","selectedSomeClasses","selectedAllClasses","Card","Tabs","onChange","updatedFilters","scrollButtons","textColor","tab","Tab","Divider","Box","p","minHeight","display","alignItems","TextField","InputProps","startAdornment","InputAdornment","SvgIcon","persist","placeholder","select","SelectProps","native","s","flexGrow","option","Checkbox","indeterminate","Button","minWidth","Table","TableHead","TableRow","TableCell","padding","align","TableBody","isBoughtStudentSelected","hover","selected","studentId","prevSelected","class","IconButton","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","dark","paddingTop","paddingBottom","BoughtStudentListView","useAuth","setBoughtStudents","getBoughtStudents","Page","title","roles","some","renderRedirect","Container","maxWidth","mt"],"mappings":"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","file":"static/js/71.48806c4c.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","async function random(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n };\n\n async function random_number(length) {\n   var result           = '';\n   var characters       = '0123456789';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n};\n \n export {random,random_number} ;\n","import app from './firebase';\nimport firebase from 'firebase';\nimport {random} from 'src/utils/stringutil';\nexport const addClass = async (data) => {\n    try {\n        const code = await random(6);\n        var docRef = await app.firestore().collection(\"classes\").doc(code);\n\n        const doc = docRef.get()\n        if (doc.exists) {\n            return \"existed\";\n        } else {\n            await app.firestore().collection('classes').doc(code).set(data);\n            console.log(\"add class success\");\n            // children:firebase.firestore.FieldValue.arrayUnion(String(student_id))\n\n            await app.firestore().collection('schools').doc(data.school_id).update({classes:firebase.firestore.FieldValue.arrayUnion(docRef)})\n        }\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const getClassApi = async (id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('classes').doc(id).get();\n        const classes = querySnapshot.data()\n        classes.id=id\n        return classes\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const updateClass = async (data) => {\n    try {\n        console.log(data)\n        let id=data.id;\n        let result  = await app.firestore().collection('classes').doc(id).update(data);\n        \n        return result\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const listAllClasses = async (school_id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('classes').where(\"school_id\",\"==\",school_id).get();\n        if (querySnapshot.docs) {\n            const classes = querySnapshot.docs.map((doc) => {\n              return {\n                id: doc.id,\n                ...doc.data()\n              }\n            })\n            console.log(classes)\n            return classes;\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const listJsonClasses = async (school_id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('schools').doc(school_id).get();\n        const dclasses = await querySnapshot.data().classes\n        let a=[]\n        for await (let val of dclasses){\n            const doc =  await val.get()\n            a[doc.id] = { id: doc.id, ...doc.data() }\n        }\n        return a;\n    } catch (err) {\n        console.log(err);\n    }\n}","import firebase from 'firebase';\nimport app from './firebase';\n\n// import axios from 'axios';\n// import {\n//   API_URL\n// } from 'src/config';\nexport const listAllStudents = async (school_id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').where(\"school_id\", \"==\", school_id).where(\"status\",\"==\",0).get();\n    console.log(querySnapshot.empty)\n    console.log(querySnapshot.size)\n    if (querySnapshot.docs) {\n      const students = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return students\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nconst checkUser  = async (data)=>{\n  let username = data.username;\n  let email=data.email;\n  let querySnapshot = await app.firestore().collection('users').where(\"username\", \"==\", username).get();\n  if (querySnapshot.docs) {\n    if (querySnapshot.docs.length>0)\n      return \"username_exited\";\n  }\n  let querySnapshot1 = await app.firestore().collection('users').where(\"email\", \"==\", email).get();\n  if (querySnapshot1.docs) {\n    if (querySnapshot1.docs.length>0)\n      return \"email_exited\";\n  }\n  return \"success\";\n}\nexport const createStudentWithProduct = async (user, data) => {\n  try {\n    let error = await checkUser(data);\n    console.log(\"error:\",error)\n    if(error!=\"success\"){\n      return error; \n    }\n    let command = {\n      type: \"student\",\n      action: \"create\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    let id = await (await courseApi.get()).id;\n    console.log(\"add command success\",id)\n    return \"success\";\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const addStudent = async (user, data) => {\n  try {\n\n    if (data.birthdate._isAMomentObject) {\n      data.birthdate = firebase.firestore.Timestamp.fromDate(data.birthdate.toDate())\n    }\n    data.products=[]\n    console.log(data.birthdate);\n    let command = {\n      type: \"student\",\n      action: \"add\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    console.log(\"add command success\")\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getStudent = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').doc(id).get();\n    const student = querySnapshot.data()\n    student.id = id\n    let products = []\n    if(typeof(student.products)===\"undefined\"){\n      student.products = products\n      return student;\n    }\n    for await (let valp of student.products){\n      const product = await valp.get();\n      products.push(product.id)\n    }\n    student.products = products\n\n    return student\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const updateStudent = async (data) => {\n  if (data.birthdate._isAMomentObject) {\n    data.birthdate = firebase.firestore.Timestamp.fromDate(data.birthdate.toDate())\n  }\n  try {\n    let id = data.id;\n    let result = await app.firestore().collection('students').doc(id).update(data);\n    \n    return result\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nexport const listAllBoughtStudents = async (school_id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').where(\"school_id\", \"==\", school_id).where(\"status\",\"==\",0).where(\"products\",\">\",[]).get();\n    if (querySnapshot.docs) {\n      const students = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return students\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const addBoughtStudent = async (data) => {\n  try {\n    let id = data.id;\n    app.firestore().collection('students').doc(id).update(data);\n    \n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getStudentUser = async (id) => {\n  try {\n    let stUser = await getStudentUser(id);\n    let querySnapshot = await app.firestore().collection('users').doc(id).get();\n    const students = querySnapshot.data()\n    students.id = id\n    students.username = stUser.username;\n    return students\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\nexport const enroleStudent = async (user, data) => {\n  try {\n    let command = {\n      type: \"enrole_student\",\n      action: \"add\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    await app.firestore().collection('commands').add(command);\n    console.log(\"add command success\")\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  TextField,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport {\n  PlusCircle as PlusCircleIcon,\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\n\nconst Header = ({ className, ...rest }) => {\n  let schoolname = localStorage.getItem('schoolname');\n  const classes = useStyles();\n  \n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/hbon/management/schools\"\n            component={RouterLink}\n          >\n            Trường: {schoolname}\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Học sinh\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Danh sách học sinh\n        </Typography>\n      </Grid>\n      \n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  Divider,\n  IconButton,\n  InputAdornment,\n  SvgIcon,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tabs,\n  TextField,\n  Typography,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport {listAllClasses} from '../../../api/classes'\n\nconst tabs = [\n  {\n    value: 'all',\n    label: 'Tất cả'\n  }\n];\nconst class_init = [\n  {\n    code:\"\",\n    name:\"\"\n  }\n]\nconst sortOptions = [\n  {\n    value: 'name|asc',\n    label: 'Tên học sinh (tăng)'\n  },\n  {\n    value: 'name|desc',\n    label: 'Tên học sinh (giảm)'\n  }\n];\n\nconst applyFilters = (students, query, filters) => {\n  return students.filter((student) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (student[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && student[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n};\n\nconst applyPagination = (students, page, limit) => {\n  return students.slice(page * limit, page * limit + limit);\n};\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst applySort = (students, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = students.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500\n  },\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Results = ({\n  className,\n  students,\n  ...rest\n}) => {\n  let schoolid = localStorage.getItem('schoolid');\n  const classes = useStyles();\n  const [sclasses, setClasses] = useState([]);\n  const isMountedRef = useIsMountedRef();\n  const getClasses = useCallback(async () => {\n    try {\n      const sclasses = await listAllClasses(schoolid);\n      if (isMountedRef.current) {\n        setClasses(sclasses);\n        console.log(\"class loaded\")\n        setSClass(sclasses[0])\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getClasses();\n  }, [getClasses]);\n  const [sclass, setSClass] = useState(class_init[0].code);\n  const [currentTab, setCurrentTab] = useState('all');\n  const [selectedBoughtStudents, setSelectedBoughtStudents] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = {\n      ...filters,\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null\n    };\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setSelectedBoughtStudents([]);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n  const handleClassChange = (event) => {\n    event.persist();\n    setSClass(event.target.value);\n  };\n\n  const handleSelectAllBoughtStudents = (event) => {\n    setSelectedBoughtStudents(event.target.checked\n      ? students.map((student) => student.id)\n      : []);\n  };\n\n  const handleSelectOneBoughtStudent = (event, studentId) => {\n    if (!selectedBoughtStudents.includes(studentId)) {\n      setSelectedBoughtStudents((prevSelected) => [...prevSelected, studentId]);\n    } else {\n      setSelectedBoughtStudents((prevSelected) => prevSelected.filter((id) => id !== studentId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const filteredClasses = applyFilters(students, query, filters);\n  const sortedClasses = applySort(filteredClasses, sort);\n  const paginatedBoughtStudents = applyPagination(sortedClasses, page, limit);\n  const enableBulkOperations = selectedBoughtStudents.length > 0;\n  const selectedSomeClasses = selectedBoughtStudents.length > 0 && selectedBoughtStudents.length < students.length;\n  const selectedAllClasses = selectedBoughtStudents.length === students.length;\n\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Tabs\n        onChange={handleTabsChange}\n        scrollButtons=\"auto\"\n        textColor=\"secondary\"\n        value={currentTab}\n        variant=\"scrollable\"\n      >\n        {tabs.map((tab) => (\n          <Tab\n            key={tab.value}\n            value={tab.value}\n            label={tab.label}\n          />\n        ))}\n      </Tabs>\n      <Divider />\n      <Box\n        p={2}\n        minHeight={56}\n        display=\"flex\"\n        alignItems=\"center\"\n      >\n\n     \n        <TextField\n          className={classes.queryField}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SvgIcon\n                  fontSize=\"small\"\n                  color=\"action\"\n                >\n                  <SearchIcon />\n                </SvgIcon>\n              </InputAdornment>\n            )\n          }}\n          onChange={handleQueryChange}\n          placeholder=\"Tìm kiếm theo tên học sinh\"\n          value={query}\n          variant=\"outlined\"\n        />\n        <TextField\n          label=\"Lớp\"\n          name=\"sclass\"\n          value={sclass}\n          onChange={handleClassChange}\n          select\n          SelectProps={{ native: true }}\n          variant=\"outlined\"\n        >\n          {sclasses.map((s) => (\n            <option\n              key={s.id}\n              value={s.id}\n            >\n              {s.name}\n            </option>\n          ))}\n        </TextField>\n        <Box flexGrow={1} />\n        <TextField\n          label=\"Sắp xếp\"\n          name=\"sort\"\n          onChange={handleSortChange}\n          select\n          SelectProps={{ native: true }}\n          value={sort}\n          variant=\"outlined\"\n        >\n          {sortOptions.map((option) => (\n            <option\n              key={option.value}\n              value={option.value}\n            >\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </Box>\n     \n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox\n              checked={selectedAllClasses}\n              indeterminate={selectedSomeClasses}\n              onChange={handleSelectAllBoughtStudents}\n            />\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Xóa\n            </Button>\n            <Button\n              variant=\"outlined\"\n              className={classes.bulkAction}\n            >\n              Sửa\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllClasses}\n                    indeterminate={selectedSomeClasses}\n                    onChange={handleSelectAllBoughtStudents}\n                  />\n                </TableCell>\n                <TableCell>\n                  Tên học sinh\n                </TableCell>\n                <TableCell>\n                  Lớp\n                </TableCell>\n                <TableCell>\n                  Thẻ thành viên\n                </TableCell>\n                <TableCell align=\"right\">\n                  Actions\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedBoughtStudents.map( (student) => {\n                \n                const isBoughtStudentSelected = selectedBoughtStudents.includes(student.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={student.username}\n                    selected={isBoughtStudentSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isBoughtStudentSelected}\n                        onChange={(event) => handleSelectOneBoughtStudent(event, student.id)}\n                        value={isBoughtStudentSelected}\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Box\n                        display=\"flex\"\n                        alignItems=\"center\"\n                      >\n                          <Typography\n                          >\n                            {student.name}\n                          </Typography>\n                        \n                      </Box>\n                    </TableCell>\n                  <TableCell>\n                  {student.class.name}\n                  </TableCell>\n                  <TableCell>\n                    {student.products.length}\n                  {/* {student.products.map( (s) => (\n                        \n                        <span key={s.name}\n                        >\n                          {s.name}, \n                          <br/>\n                            {s.courses.map((c) => (\n                              <span key={c.id}>\n                                {c.shortname},\n                              </span>\n                            ))} \n                        </span>\n                        \n                      )\n                    )} */}\n                  </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton\n                        component={RouterLink}\n                        to={\"/school/management/bought_students/enrole/\"+ student.id}\n                      >\n                        <SvgIcon fontSize=\"small\">\n                          <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredClasses.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  students: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  students: []\n};\n\nexport default Results;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\nimport {listAllBoughtStudents} from '../../../api/students'\n\nimport  { Redirect } from 'react-router-dom'\nimport useAuth from 'src/hooks/useAuth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst BoughtStudentListView = () => {\n  const { user} = useAuth();\n  const renderRedirect = () => {\n    if(user && user.roles && user.roles.some(el => el === \"hbonadmin\")){\n        console.log(\"admin\");\n      }\n      else {\n        console.log(\"khong co quyen\");\n        return <Redirect to='/404' />\n      }\n  }\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [students, setBoughtStudents] = useState([]);\n\n  const getBoughtStudents = useCallback(async () => {\n    try {\n      let schoolid = localStorage.getItem('schoolid');\n      const students = await listAllBoughtStudents(schoolid);\n      console.log(students);\n      if (isMountedRef.current) {\n        setBoughtStudents(students);\n        console.log(students)\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getBoughtStudents();\n  }, [getBoughtStudents]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Trường học\"\n    >\n      {renderRedirect()}\n      <Container maxWidth={false}>\n        <Header />\n        <Box mt={3}>\n          <Results students={students} />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default BoughtStudentListView;\n"],"sourceRoot":""}