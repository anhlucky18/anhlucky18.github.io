{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","../../../../../usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","api/students.js","api/products.js","views/bought_student/BoughtStudentEnrole/BoughtStudentEnroleForm.js","views/bought_student/BoughtStudentEnrole/Header.js","views/bought_student/BoughtStudentEnrole/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","listAllStudents","school_id","a","app","firestore","collection","where","get","querySnapshot","console","log","empty","size","docs","students","map","doc","id","data","checkUser","username","email","length","querySnapshot1","createStudentWithProduct","user","error","command","type","action","status","executer","add","courseApi","addStudent","birthdate","_isAMomentObject","getFirestore","Timestamp","fromDate","toDate","products","getStudent","student","valp","product","push","updateStudent","update","result","listAllBoughtStudents","enroleStudent","listAllProducts","addProduct","courses","course","c","name","shortname","url","API_URL","axios","post","then","resp","useStyles","makeStyles","root","sortOptions","label","descendingComparator","b","orderBy","applySort","sort","split","comparator","order","getComparator","stabilizedThis","el","index","BoughtStudentEnroleForm","className","rest","useAuth","useState","setProducts","isMountedRef","getProducts","useCallback","fproducts","classes","enqueueSnackbar","useSnackbar","selectedProducts","setSelectedProducts","page","setPage","limit","setLimit","query","hasAcceptedMarketing","isProspect","isReturning","filters","handleSelectAllProducts","event","target","checked","handlePageChange","newPage","handleLimitChange","parseInt","filteredClasses","filter","matches","containsQuery","forEach","property","toLowerCase","includes","keys","key","applyFilters","paginatedProducts","slice","applyPagination","selectedSomeClasses","selectedAllClasses","initialValues","class_code","class","submit","onSubmit","values","setErrors","setStatus","setSubmitting","schoolid","localStorage","getItem","productids","Set","fetch","res","json","firstname","lastname","userid","userId","created_at","Date","getTime","wait","success","variant","Button","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","clsx","Card","CardContent","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","onBlur","onChange","required","disabled","Box","mt","color","minWidth","Table","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","align","TableBody","isProductSelected","hover","selected","productId","prevSelected","s","endtime","moment","enddate","seconds","format","TablePagination","component","count","onChangePage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","Header","schoolname","Breadcrumbs","separator","fontSize","Link","to","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","BoughtStudentEnrole","props","studentId","match","params","setStudent","getStudents","fstudent","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/78.b1f8eb76.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","import app from './_firebase';\n\nimport {getFirestore} from 'firebase/firestore'\nimport {getStorage} from 'firebase/storage'\n\n// import axios from 'axios';\n// import {\n//   API_URL\n// } from 'src/config';\nexport const listAllStudents = async (school_id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').where(\"school_id\", \"==\", school_id).where(\"status\",\"==\",0).get();\n    console.log(querySnapshot.empty)\n    console.log(querySnapshot.size)\n    if (querySnapshot.docs) {\n      const students = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return students\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nconst checkUser  = async (data)=>{\n  let username = data.username;\n  let email=data.email;\n  let querySnapshot = await app.firestore().collection('users').where(\"username\", \"==\", username).get();\n  if (querySnapshot.docs) {\n    if (querySnapshot.docs.length>0)\n      return \"username_exited\";\n  }\n  let querySnapshot1 = await app.firestore().collection('users').where(\"email\", \"==\", email).get();\n  if (querySnapshot1.docs) {\n    if (querySnapshot1.docs.length>0)\n      return \"email_exited\";\n  }\n  return \"success\";\n}\nexport const createStudentWithProduct = async (user, data) => {\n  try {\n    let error = await checkUser(data);\n    console.log(\"error:\",error)\n    if(error!=\"success\"){\n      return error; \n    }\n    let command = {\n      type: \"student\",\n      action: \"create\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    let id = await (await courseApi.get()).id;\n    console.log(\"add command success\",id)\n    return \"success\";\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const addStudent = async (user, data) => {\n  try {\n\n    if (data.birthdate._isAMomentObject) {\n      data.birthdate = getFirestore().Timestamp.fromDate(data.birthdate.toDate())\n    }\n    data.products=[]\n    console.log(data.birthdate);\n    let command = {\n      type: \"student\",\n      action: \"add\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    console.log(\"add command success\")\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getStudent = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').doc(id).get();\n    const student = querySnapshot.data()\n    student.id = id\n    let products = []\n    if(typeof(student.products)===\"undefined\"){\n      student.products = products\n      return student;\n    }\n    for await (let valp of student.products){\n      const product = await valp.get();\n      products.push(product.id)\n    }\n    student.products = products\n\n    return student\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const updateStudent = async (data) => {\n  if (data.birthdate._isAMomentObject) {\n    data.birthdate = getFirestore().Timestamp.fromDate(data.birthdate.toDate())\n  }\n  try {\n    let id = data.id;\n    let result = await app.firestore().collection('students').doc(id).update(data);\n    \n    return result\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nexport const listAllBoughtStudents = async (school_id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').where(\"school_id\", \"==\", school_id).where(\"status\",\"==\",0).where(\"products\",\">\",[]).get();\n    if (querySnapshot.docs) {\n      const students = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return students\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const addBoughtStudent = async (data) => {\n  try {\n    let id = data.id;\n    app.firestore().collection('students').doc(id).update(data);\n    \n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getStudentUser = async (id) => {\n  try {\n    let stUser = await getStudentUser(id);\n    let querySnapshot = await app.firestore().collection('users').doc(id).get();\n    const students = querySnapshot.data()\n    students.id = id\n    students.username = stUser.username;\n    return students\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\nexport const enroleStudent = async (user, data) => {\n  try {\n    let command = {\n      type: \"enrole_student\",\n      action: \"add\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    await app.firestore().collection('commands').add(command);\n    console.log(\"add command success\")\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n","\nimport app from './_firebase';\n\nimport axios from 'axios';\nimport { API_URL } from '../config';\n\nexport const listAllProducts = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('products').get();\n    if (querySnapshot.docs) {\n      const products = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return products\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\nexport const addProduct = async (data,courses) => {\n  try { \n    data.courses = [];\n    for await (let id of courses){\n      let querySnapshot = await app.firestore().collection('courses').doc(id).get();\n      const course = querySnapshot.data()\n      let c={id:id,name:course.name,shortname:course.shortname};\n      data.courses.push(c);\n    }\n    if(data.courses.length<1) {\n      return;\n    }\n    let result  = await app.firestore().collection('products').add(data);\n    const url = `${API_URL}/api/create_cohorts`;\n    axios.post(url,data).then(resp => {\n        console.log(resp.data);\n    });\n\n  } catch (err) {\n      console.log(err);\n  }\n};\n\nexport const getProduct = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('product').doc(id).get();\n    const product = querySnapshot.data()\n    return product\n  } catch (err) {\n    console.log(err);\n  }\n}","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\n// import {\n//   Box,\n//   Button,\n//   Card,\n//   CardContent,\n//   Grid,\n//   TextField,\n//   makeStyles,\n//   Tooltip\n// } from '@material-ui/core';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  CardContent,\n  Divider,\n  IconButton,\n  InputAdornment,\n  SvgIcon,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip,\n  TextField,\n  Typography,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport wait from 'src/utils/wait';\n\nimport moment from 'moment';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport {enroleStudent} from '../../../api/students.js';\nimport {listAllProducts} from '../../../api/products'\nimport useAuth from 'src/hooks/useAuth';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\nconst sortOptions = [\n  {\n    value: 'name|asc',\n    label: 'Tên học sinh (tăng)'\n  },\n  {\n    value: 'name|desc',\n    label: 'Tên học sinh (giảm)'\n  }\n];\n\nconst applyFilters = (products, query, filters) => {\n  return products.filter((product) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['email', 'name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (product[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && product[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n};\n\nconst applyPagination = (products, page, limit) => {\n  return products.slice(page * limit, page * limit + limit);\n};\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst applySort = (products, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = products.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst genders = [\n  {\n    id: 'male',\n    name: 'Nam'\n  },\n  {\n    id: 'female',\n    name: 'Nữ'\n  }\n];\n\nconst BoughtStudentEnroleForm = ({\n  className,\n  student,\n  ...rest\n}) => {\n  const { user} = useAuth();\n  const [products, setProducts] = useState([]);\n  const isMountedRef = useIsMountedRef();\n  const getProducts = useCallback(async () => {\n    try {\n      const fproducts = await listAllProducts();\n      if (isMountedRef.current) {\n        setProducts(fproducts);\n        console.log(\"class loaded\")\n      }\n      \n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getProducts();\n  }, [getProducts]);\n\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  var [selectedProducts, setSelectedProducts] = useState([]);\n  for (let id of student.products){\n    selectedProducts.push(id)\n\n  }\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  \n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n\n  const handleSelectAllProducts = (event) => {\n    setSelectedProducts(event.target.checked\n      ? products.map((product) => product.id)\n      : []);\n  };\n\n  const handleSelectOneProduct = (event, productId) => {\n    if (!selectedProducts.includes(productId)) {\n      setSelectedProducts((prevSelected) => [...prevSelected, productId]);\n    } else {\n      setSelectedProducts((prevSelected) => prevSelected.filter((id) => id !== productId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n\n  const filteredClasses = applyFilters(products, query, filters);\n  const sortedClasses = applySort(filteredClasses, sort);\n  const paginatedProducts = applyPagination(sortedClasses, page, limit);\n  const enableBulkOperations = selectedProducts.length > 0;\n  const selectedSomeClasses = selectedProducts.length > 0 && selectedProducts.length < products.length;\n  const selectedAllClasses = selectedProducts.length === products.length;\n    return (\n    <Formik\n    initialValues={{\n      id: student.id || '',\n      name: student.name || '',\n      class_code: student.class.id || '',\n      username: student.username || '',\n      submit: null\n    }}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          let schoolid = localStorage.getItem('schoolid');\n          values.school_id = schoolid;\n          values.productids = [...new Set(selectedProducts)];\n          \n\n          fetch(`https://geolocation-db.com/json/`).then(res=>res.json()).then( async (result)=>{\n            if(typeof(user.name)==\"undefined\"){\n              result.name = user.firstname + \" \" + user.lastname;  \n            } else {\n              result.name=user.name\n            }\n            result.userid=user.userId\n            result.created_at = new Date().getTime();\n            enroleStudent(result ,values)\n          });\n          \n          // NOTE: Make API request\n          await wait(500);\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Class updated', {\n            variant: 'success',\n            action: <Button>See all</Button>\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Tên học sinh\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  \n                  <TextField\n                    error={Boolean(touched.class_code && errors.class_code)}\n                    fullWidth\n                    helperText={touched.class_code && errors.class_code}\n                    label=\"Lớp\"\n                    name=\"class_code\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.class_code}\n                    disabled\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                \n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.username && errors.username)}\n                    fullWidth\n                    helperText={touched.username && errors.username}\n                    label=\"username\"\n                    name=\"username\"\n                    disabled\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.username}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Lưu\n                </Button>\n              </Box>\n              </Grid>  \n                \n              </Grid>\n              \n            </CardContent>\n            <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllClasses}\n                    indeterminate={selectedSomeClasses}\n                    onChange={handleSelectAllProducts}\n                  />\n                </TableCell>\n                <TableCell>\n                  Tên \n                </TableCell>\n                <TableCell>\n                  Các khóa\n                </TableCell>\n                <TableCell align=\"right\">\n                  Ngày hết hạn\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedProducts.map((product) => {\n                const isProductSelected = selectedProducts.includes(product.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={product.id}\n                    selected={isProductSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isProductSelected}\n                        onChange={(event) => handleSelectOneProduct(event, product.id)}\n                        value={isProductSelected}\n                      />\n                    </TableCell>\n                  <TableCell>\n                  {product.name}\n                  </TableCell>\n                    <TableCell>\n                    \n                    {product.courses.map((s) => \n                      (\n                        <span key={s.id}\n                        >\n                          {s.shortname}, \n                        </span>\n                      )\n                    )}\n                    </TableCell>\n                    <TableCell>\n                      {product.endtime==\"0\"?moment(product.enddate.seconds*1000).format('DD/MM/YYYY'):product.endtime}\n                    \n                    </TableCell>\n                    \n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredClasses.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nBoughtStudentEnroleForm.propTypes = {\n  className: PropTypes.string,\n  student:PropTypes.object.isRequired\n};\n\nexport default BoughtStudentEnroleForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  let schoolname = localStorage.getItem('schoolname');\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/hbon/management/schools\"\n            component={RouterLink}\n          >\n            Trường: {schoolname}\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/school/management/classes\"\n            component={RouterLink}\n          >\n            Enrole \n          </Link>\n      </Breadcrumbs>\n      <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Quản lý học sinh mua khóa học\n        </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport BoughtStudentEnroleForm from './BoughtStudentEnroleForm';\nimport Header from './Header';\nimport {getStudent} from '../../../api/students.js';\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst BoughtStudentEnrole = (props) => {\n  const {studentId } = props.match.params;\n  \n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [student, setStudent] = useState(null);\n\n  const getStudents = useCallback(async () => {\n    try {\n      let fstudent = await getStudent(studentId);\n      console.log(fstudent)\n      if (isMountedRef.current) {\n        setStudent(fstudent);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getStudents();\n  }, [getStudents]);\n\n  if (!student) {\n    return null;\n  }\n  return (\n    <Page\n      className={classes.root}\n      title=\"Thêm học sinh\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <BoughtStudentEnroleForm student = {student}/>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default BoughtStudentEnrole;\n"],"sourceRoot":""}