{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","../../../../../usr/local/lib/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","utils/stringutil.js","api/classes.js","views/classes/ClassEditView/ClassEditForm.js","views/classes/ClassEditView/Header.js","views/classes/ClassEditView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","random","length","a","result","charactersLength","characters","i","charAt","Math","floor","random_number","addClass","data","code","app","firestore","collection","doc","docRef","get","exists","set","console","log","school_id","update","classes","getFirestore","FieldValue","arrayUnion","getClassApi","id","querySnapshot","updateClass","listAllClasses","where","docs","map","useStyles","makeStyles","root","sortOptions","label","descendingComparator","b","orderBy","applySort","registers","sort","split","comparator","order","getComparator","stabilizedThis","el","index","ClassEditForm","className","sclass","rest","history","useHistory","useSnackbar","enqueueSnackbar","useState","page","setPage","limit","setLimit","query","hasAcceptedMarketing","isProspect","isReturning","filters","handlePageChange","event","newPage","handleLimitChange","parseInt","target","filteredClasses","filter","register","matches","containsQuery","forEach","property","toLowerCase","includes","keys","key","applyFilters","paginatedregisters","slice","applyPagination","initialValues","name","years","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","wait","push","error","success","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","clsx","Card","CardContent","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","onBlur","onChange","variant","Tooltip","title","disableHoverListener","disabled","Box","mt","Button","color","type","minWidth","Table","TableHead","TableRow","TableCell","TableBody","hover","username","first_pass","email","TablePagination","component","count","onChangePage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","Header","schoolname","localStorage","getItem","Breadcrumbs","separator","fontSize","Link","to","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","ClassEditView","props","classId","match","params","isMountedRef","setClasses","getClasses","useCallback","Page","Container","maxWidth"],"mappings":"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","file":"static/js/77.a0f82178.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","async function random(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n };\n\n async function random_number(length) {\n   var result           = '';\n   var characters       = '0123456789';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n};\n \n export {random,random_number} ;\n","import app from './_firebase';\n\nimport {getFirestore} from 'firebase/firestore'\n\nimport {random} from 'src/utils/stringutil';\nexport const addClass = async (data) => {\n    try {\n        const code = await random(6);\n        var docRef = await app.firestore().collection(\"classes\").doc(code);\n\n        const doc = docRef.get()\n        if (doc.exists) {\n            return \"existed\";\n        } else {\n            await app.firestore().collection('classes').doc(code).set(data);\n            console.log(\"add class success\");\n            // children:getFirestore().FieldValue.arrayUnion(String(student_id))\n\n            await app.firestore().collection('schools').doc(data.school_id).update({classes:getFirestore().FieldValue.arrayUnion(docRef)})\n        }\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const getClassApi = async (id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('classes').doc(id).get();\n        const classes = querySnapshot.data()\n        classes.id=id\n        return classes\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const updateClass = async (data) => {\n    try {\n        console.log(data)\n        let id=data.id;\n        let result  = await app.firestore().collection('classes').doc(id).update(data);\n        \n        return result\n    } catch (err) {\n        console.log(err);\n    }\n};\n\nexport const listAllClasses = async (school_id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('classes').where(\"school_id\",\"==\",school_id).get();\n        if (querySnapshot.docs) {\n            const classes = querySnapshot.docs.map((doc) => {\n              return {\n                id: doc.id,\n                ...doc.data()\n              }\n            })\n            console.log(classes)\n            return classes;\n        }\n    } catch (err) {\n        console.log(err);\n    }\n}\n\nexport const listJsonClasses = async (school_id) => {\n    try {\n        let querySnapshot  = await app.firestore().collection('schools').doc(school_id).get();\n        const dclasses = await querySnapshot.data().classes\n        let a=[]\n        for await (let val of dclasses){\n            const doc =  await val.get()\n            a[doc.id] = { id: doc.id, ...doc.data() }\n        }\n        return a;\n    } catch (err) {\n        console.log(err);\n    }\n}","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tooltip\n} from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport wait from 'src/utils/wait';\nimport { useHistory } from 'react-router-dom';\nimport {updateClass} from '../../../api/classes.js';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst sortOptions = [\n  {\n    value: 'name|asc',\n    label: 'Tên học sinh (tăng)'\n  },\n  {\n    value: 'name|desc',\n    label: 'Tên học sinh (giảm)'\n  }\n];\nconst applyFilters = (registers, query, filters) => {\n  if(!registers){\n    registers = []\n  }\n  return registers.filter((register) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['email', 'name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (register[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && register[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n};\n\nconst applyPagination = (registers, page, limit) => {\n  return registers.slice(page * limit, page * limit + limit);\n};\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst applySort = (registers, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = registers.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\nconst ClassEditForm = ({\n  className,\n  sclass,\n  ...rest\n}) => {\n  const registers = sclass.registers;\n  const classes = useStyles();\n  const history = useHistory();\n  const { enqueueSnackbar } = useSnackbar();\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  \n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const filteredClasses = applyFilters(registers, query, filters);\n  const sortedClasses = applySort(filteredClasses, sort);\n  const paginatedregisters = applyPagination(sortedClasses, page, limit);\n    return (\n    <Formik\n    initialValues={{\n      id: sclass.id || '',\n      name: sclass.name || '',\n      code: sclass.code || '',\n      years:sclass.years || '',\n      submit: null\n    }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().max(5).required('Name is required'),\n        code: Yup.string().max(25),\n        years: Yup.string().max(15),\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          \n          // console.log(values)\n          updateClass(values)\n          // NOTE: Make API request\n          await wait(500);\n          history.push('/school/management/classes');\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Tên lớp\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                <Tooltip title=\"Viết liền, không dấu \" disableHoverListener>\n                  <TextField\n                    error={Boolean(touched.id && errors.id)}\n                    fullWidth\n                    helperText={touched.id && errors.id}\n                    label=\"Mã lớp\"\n                    name=\"id\"\n                    disabled\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.id}\n                    variant=\"outlined\"\n                  />\n                  </Tooltip>\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.years && errors.years)}\n                    fullWidth\n                    helperText={touched.years && errors.years}\n                    label=\"Niên khóa\"\n                    name=\"years\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.years}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n                \n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Lưu\n                </Button>\n              </Box>\n            </CardContent>\n            <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Tên đăng nhập\n                </TableCell>\n                <TableCell>\n                  Mật khẩu lần đầu\n                </TableCell>\n                <TableCell >\n                  email\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedregisters.map((register) => {\n\n                return (\n                  <TableRow\n                    hover\n                    key={register.username}\n                  >\n                    \n                  <TableCell>\n                  {register.username}\n                  </TableCell>\n                    <TableCell>\n                    {register.first_pass}\n                    </TableCell>\n                    <TableCell>\n                    {register.email}\n                    \n                    </TableCell>\n                    \n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredClasses.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nClassEditForm.propTypes = {\n  className: PropTypes.string,\n  sclass:PropTypes.object.isRequired\n};\n\nexport default ClassEditForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  let schoolname = localStorage.getItem('schoolname');\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/hbon/management/schools\"\n            component={RouterLink}\n          >\n            Trường: {schoolname}\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/school/management/classes\"\n            component={RouterLink}\n          >\n            Lớp học\n          </Link>\n      </Breadcrumbs>\n      <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Chỉnh sửa lớp học\n        </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport ClassEditForm from './ClassEditForm';\nimport Header from './Header';\nimport {getClassApi} from '../../../api/classes.js';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst ClassEditView = (props) => {\n  const {classId } = props.match.params;\n  \n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [sclass, setClasses] = useState(null);\n\n  const getClasses = useCallback(async () => {\n    try {\n      let sclass = await getClassApi(classId);\n      console.log(sclass)\n      if (isMountedRef.current) {\n        setClasses(sclass);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getClasses();\n  }, [getClasses]);\n\n  if (!sclass) {\n    return null;\n  }\n  return (\n    <Page\n      className={classes.root}\n      title=\"Thêm lớp học\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <ClassEditForm sclass = {sclass}/>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default ClassEditView;\n"],"sourceRoot":""}