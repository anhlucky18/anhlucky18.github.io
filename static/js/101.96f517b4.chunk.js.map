{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/react-feather/dist/icons/plus-circle.js","api/theory.js","views/flutter/theory/TheoryListView/Header.js","views/flutter/theory/TheoryListView/Results.js","views/flutter/theory/TheoryListView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","PlusCircle","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","db","app","firestore","listTheories","teacherid","a","collection","doc","get","querySnapshot","docs","theories","map","id","data","console","log","getTheory","theoryId","theoryData","createTheory","values","catalogId","sectionIndex","theory","name","tag","detail","created_by","author","restart","navigate","created_time","Date","trial_maxquest","trial_maxtime","trial_maxentry","random","quest_feedback","auto_next","batch","theoryRef","set","sectionRef","update","activities","getFirestore","FieldValue","arrayUnion","type","commit","updateTheory","useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","Header","className","classes","Grid","clsx","container","justify","item","Breadcrumbs","separator","fontSize","Link","variant","to","component","RouterLink","Typography","Button","startIcon","SvgIcon","tabs","label","sortOptions","descendingComparator","b","orderBy","applySort","sort","split","comparator","order","getComparator","stabilizedThis","el","index","queryField","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","backgroundColor","palette","background","bulkAction","avatar","marginRight","Results","useState","currentTab","setCurrentTab","selectedtheories","setSelectedtheories","page","setPage","limit","setLimit","query","setQuery","setSort","hasAcceptedMarketing","isProspect","isReturning","filters","setFilters","handleSelectAlltheories","event","checked","filteredtheories","filter","matches","containsQuery","forEach","property","toLowerCase","includes","applyFilters","paginatedtheories","slice","applyPagination","enableBulkOperations","selectedSometheories","selectedAlltheories","Card","Tabs","onChange","updatedFilters","scrollButtons","textColor","tab","Tab","Divider","Box","p","minHeight","display","alignItems","TextField","InputProps","startAdornment","InputAdornment","persist","placeholder","flexGrow","select","SelectProps","native","option","Checkbox","indeterminate","minWidth","Table","TableHead","TableRow","TableCell","padding","align","TableBody","istheorySelected","hover","selected","prevSelected","desc","catalog","IconButton","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","dark","paddingTop","paddingBottom","TheoryListView","isMountedRef","setTheories","user","useAuth","getTheories","useCallback","userId","error","Page","title","Container","maxWidth","mt"],"mappings":"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","file":"static/js/101.96f517b4.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar PlusCircle = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"8\",\n    x2: \"12\",\n    y2: \"16\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"12\",\n    x2: \"16\",\n    y2: \"12\"\n  }));\n});\nPlusCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlusCircle.displayName = 'PlusCircle';\nexport default PlusCircle;","import app from './_firebase';\n\nimport {getFirestore} from 'firebase/firestore'\n\nimport axios from 'axios';\nconst db = app.firestore();\n\nexport const listTheories = async (teacherid)=>{\n  try {\n    let querySnapshot = await app.firestore().collection('repo/library/users').doc(teacherid).collection('theories').get();\n    if (querySnapshot.docs) {\n      const theories = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return theories\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const getTheory = async (teacherid,theoryId)=>{\n  console.log(teacherid,theoryId)\n\n  let querySnapshot = await db.collection('repo/library/users').doc(teacherid).collection('theories').doc(theoryId).get();\n  try {\n  const theoryData = await querySnapshot.data();\n  console.log(theoryData);\n    return theoryData\n  }catch (err) {\n      console.log(err);\n    }\n}\nexport const searchTags = async()=>{\n  console.log(\"search\")\n  let query=\"\";\naxios.get('https://test.search.dschool.vn/scotch.io-tutorial/cities_list/_search', {\n  data: JSON.stringify(query),\n}\n     ).then((res) => {\n  console.log(res);\n}\n);\n}\n\nexport const getTags = async()=>{\n  const tagRef = await db.collection(\"resource\").doc(\"tags\").collection('tags').get();\n  if (tagRef.docs) {\n    const tags = tagRef.docs.map((doc) => {\n      return {\n        id: doc.id, ...doc.data()\n      }\n    });\n    return tags\n  }\n}\nexport const createTheory = async(values,catalogId,sectionIndex )=>{\n  try {\n\n    console.log(values);\n    console.log(catalogId);\n    console.log(sectionIndex);\n    console.log(typeof(values.data));\n    const theory={name:values.name,tag:values.tag,detail:values.detail,created_by:values.created_by,author:values.author}\n\n    theory.restart=0;\n    theory.navigate=1;\n    theory.created_time = new Date();\n    theory.trial_maxquest=5;\n    theory.trial_maxtime=30;\n    theory.trial_maxentry=1;\n    theory.random=1;\n    theory.quest_feedback=0;\n    theory.auto_next=0;\n    const batch = db.batch();\n    console.log(theory);\n    const theoryRef = await db.collection('repo/library/users').doc(theory.created_by).collection('theories').doc();\n    batch.set( theoryRef,theory);\n    const sectionRef = await db.collection('repo/library/users').doc(theory.created_by).collection('catalogs').doc(catalogId).collection(\"sections\").doc(sectionIndex);\n      let data = await (await sectionRef.get()).data();\n      if(data!=null)\n      if(\"activities\" in data){\n        console.log(theoryRef);\n        batch.update(db.collection('repo/library/users').doc(theory.created_by).collection('catalogs').doc(catalogId).collection(\"sections\").doc(sectionIndex),{activities:getFirestore().FieldValue.arrayUnion({name:theory.name,type:\"theory\",ref:theoryRef})})\n      } else {\n        batch.update(db.collection('repo/library/users').doc(theory.created_by).collection('catalogs').doc(catalogId).collection(\"sections\").doc(sectionIndex),{activities:[{name:theory.name,type:\"theory\",ref:theoryRef}]})\n      }\n\n\n    await batch.commit()\n      console.log(\"theoryid:\",theoryRef.id);\n      theory.id = theoryRef.id;\n\n    return true;\n  }catch (err) {\n    console.log(err);\n  }\n}\nexport const updateTheory = async(theoryId,values )=>{\n  try {\n    console.log(values);\n    console.log(typeof(values.data));\n    const theory={name:values.name,tag:values.tag,detail:values.detail,created_by:values.created_by,author:values.author}\n    // theory.start_time=null;\n    // theory.end_time=null;\n    // theory.duration=null;\n\n    theory.restart=0;\n    theory.navigate=1;\n    theory.created_time = new Date();\n    theory.trial_maxquest=5;\n    theory.trial_maxtime=30;\n    theory.trial_maxentry=1;\n    theory.random=1;\n    theory.quest_feedback=0;\n    theory.auto_next=0;\n    const batch = db.batch();\n    console.log(theory);\n    \n    const theoryRef = await db.collection('repo/library/users').doc(theory.created_by).collection('theories').doc(theoryId);\n    batch.set( theoryRef,theory);\n\n    await batch.commit();\n      //add to elasticsearch\n      console.log(\"theoryid:\",theoryRef.id);\n      theory.id = theoryRef.id;\n\n    return true;\n  }catch (err) {\n    console.log(err);\n  }\n}\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { PlusCircle as PlusCircleIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid className={clsx(classes.root, className)} container justify=\"space-between\" spacing={3}{...rest}>\n      <Grid item>\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\"/>} aria-label=\"breadcrumb\">\n          <Link variant=\"body1\" color=\"inherit\" to=\"/teacher/management/classes\" component={RouterLink}>\n            Trang chủ\n          </Link>\n          <Link variant=\"body1\" color=\"inherit\" to=\"#\" component={RouterLink}>\n            Quản lý\n          </Link>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            Lý Thuyết \n          </Typography>\n        </Breadcrumbs>\n\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          Danh sách lý thuyết\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Link to=\"/flutter/theory/create\" component={RouterLink}>\n          <Button color=\"secondary\" variant=\"contained\" startIcon={<SvgIcon fontSize=\"small\"><PlusCircleIcon/></SvgIcon>}>\n            Thêm Lý Thuyết \n          </Button>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  Divider,\n  IconButton,\n  InputAdornment,\n  SvgIcon,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tabs,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\n\nconst tabs = [\n  {\n    value: 'all',\n    label: 'Tất cả'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'updatedAt|desc',\n    label: 'Last update (newest first)'\n  },\n  {\n    value: 'updatedAt|asc',\n    label: 'Last update (oldest first)'\n  },\n  {\n    value: 'name|desc',\n    label: 'Tên (giảm)'\n  },\n  {\n    value: 'name|asc',\n    label: 'Tên (tăng)'\n  }\n];\n\nconst applyFilters = (theories, query, filters) => {\n  return theories.filter((theory) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['title', 'description'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if ((property in theory) && theory[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && theory[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n};\n\nconst applyPagination = (theories, page, limit) => {\n  return theories.slice(page * limit, page * limit + limit);\n};\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst applySort = (theories, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = theories.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500\n  },\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Results = ({ theories, ...rest }) => {\n\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState('all');\n  const [selectedtheories, setSelectedtheories] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = {\n      ...filters,\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null\n    };\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setSelectedtheories([]);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAlltheories = (event) => {\n    setSelectedtheories(event.target.checked\n      ? theories.map((theory) => theory.id)\n      : []);\n  };\n\n  const handleSelectOnetheory = (event, theoryId) => {\n    if (!selectedtheories.includes(theoryId)) {\n      setSelectedtheories((prevSelected) => [...prevSelected, theoryId]);\n    } else {\n      setSelectedtheories((prevSelected) => prevSelected.filter((id) => id !== theoryId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n\n  const filteredtheories = applyFilters(theories, query, filters);\n  const sortedtheories = applySort(filteredtheories, sort);\n  const paginatedtheories = applyPagination(sortedtheories, page, limit);\n  const enableBulkOperations = selectedtheories.length > 0;\n  const selectedSometheories = selectedtheories.length > 0 && selectedtheories.length < theories.length;\n  const selectedAlltheories = selectedtheories.length === theories.length;\n\n  return (\n    <Card className={clsx(classes.root)}{...rest}>\n      <Tabs onChange={handleTabsChange} scrollButtons=\"auto\" textColor=\"secondary\" value={currentTab} variant=\"scrollable\">\n        {tabs.map((tab) => (\n          <Tab key={tab.value} value={tab.value} label={tab.label}/>\n        ))}\n      </Tabs>\n      <Divider />\n      <Box p={2} minHeight={56} display=\"flex\" alignItems=\"center\">\n        <TextField\n          className={classes.queryField}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SvgIcon fontSize=\"small\" color=\"action\">\n                  <SearchIcon />\n                </SvgIcon>\n              </InputAdornment>\n            )\n          }}\n          onChange={handleQueryChange}\n          placeholder=\"Tìm kiếm\"\n          value={query}\n          variant=\"outlined\"\n        />\n        <Box flexGrow={1} />\n        <TextField label=\"Sắp xếp\" name=\"sort\" onChange={handleSortChange} select SelectProps={{ native: true }} value={sort} variant=\"outlined\">\n          {sortOptions.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox checked={selectedAlltheories} indeterminate={selectedSometheories} onChange={handleSelectAlltheories}/>\n            <Button variant=\"outlined\" className={classes.bulkAction} >\n              Check\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox checked={selectedAlltheories} indeterminate={selectedSometheories} onChange={handleSelectAlltheories}/>\n                </TableCell>\n                <TableCell>\n                  Tên\n                </TableCell>\n                <TableCell>\n                  Mô tả\n                </TableCell>\n                <TableCell>\n                  Catalog\n                </TableCell>\n                <TableCell align=\"right\">\n                  Action\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedtheories.map((theory) => {\n                const istheorySelected = selectedtheories.includes(theory.id);\n                return (\n                  <TableRow hover key={theory.id} selected={istheorySelected}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox checked={istheorySelected} onChange={(event) => handleSelectOnetheory(event, theory.id)} value={istheorySelected}/>\n                    </TableCell>\n                    <TableCell>\n                      <Box display=\"flex\" alignItems=\"center\">{theory.name}</Box>\n                    </TableCell>\n                    <TableCell>\n                      {theory.desc}\n                    </TableCell>\n                    <TableCell>\n                      {theory.catalog}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton component={RouterLink} to={\"/teacher/management/theories/edit/\"+ theory.id}>\n                        <SvgIcon fontSize=\"small\">\n                        <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredtheories.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  theories: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  theories: []\n};\n\nexport default Results;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\nimport { listTheories } from '../../../../api/theory';\nimport useAuth from '../../../../hooks/useAuth';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst TheoryListView = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [theory, setTheories] = useState([]);\n  const { user } = useAuth();\n  const getTheories = useCallback(async () => {\n    try {\n      const theory = await listTheories(user.userId);\n      \n      if (isMountedRef.current) {\n        setTheories(theory);\n        console.log(theory);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {getTheories();}, [getTheories]);\n  return (\n    <Page className={classes.root} title=\"Trường học\">\n      <Container maxWidth={false}>\n        <Header/>\n        <Box mt={3}>\n          <Results theories={theory}/>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default TheoryListView;\n"],"sourceRoot":""}