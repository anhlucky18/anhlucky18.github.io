{"version":3,"sources":["../node_modules/idb/build/idb.js","../../src/util/constants.ts","../../src/util/errors.ts","../../src/functions/common.ts","../../src/functions/create-installation-request.ts","../../src/util/sleep.ts","../../src/helpers/generate-fid.ts","../../src/helpers/buffer-to-base64-url-safe.ts","../../src/util/get-key.ts","../../src/helpers/fid-changed.ts","../../src/helpers/idb-manager.ts","../../src/helpers/get-installation-entry.ts","../../src/functions/generate-auth-token-request.ts","../../src/helpers/refresh-auth-token.ts","../../src/api/get-id.ts","../../src/api/get-token.ts","../../src/helpers/extract-app-config.ts","../../src/functions/config.ts","../../src/index.ts","../../src/interfaces/internal-message-payload.ts","../../src/helpers/array-base64-translator.ts","../../src/helpers/migrate-old-database.ts","../../src/internals/idb-manager.ts","../../src/internals/requests.ts","../../src/internals/token-manager.ts","../../src/helpers/externalizePayload.ts","../../src/helpers/is-console-message.ts","../../src/helpers/logToFirelog.ts","../../src/messaging-service.ts","../../src/helpers/registerDefaultSw.ts","../../src/helpers/updateSwReg.ts","../../src/helpers/updateVapidKey.ts","../../src/api/getToken.ts","../../src/helpers/logToScion.ts","../../src/listeners/window-listener.ts","../../src/helpers/register.ts","../../src/api/deleteToken.ts","../../src/api.ts","../../src/api/onMessage.ts","../../src/helpers/sleep.ts","../../src/listeners/sw-listeners.ts","../../src/api/onBackgroundMessage.ts","../../src/messaging-compat.ts","../../src/registerMessagingCompat.ts"],"names":["exports","toArray","arr","Array","prototype","slice","call","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","p","apply","then","promisifyCursorRequestCall","value","Cursor","proxyProperties","ProxyClass","targetProp","properties","forEach","prop","Object","defineProperty","get","this","set","val","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","index","_index","cursor","_cursor","_request","ObjectStore","store","_store","Transaction","idbTransaction","_tx","complete","oncomplete","onabort","UpgradeDB","db","oldVersion","transaction","_db","DB","openDb","name","version","upgradeCallback","indexedDB","onupgradeneeded","event","deleteDb","IDBIndex","IDBCursor","methodName","createIndex","IDBObjectStore","objectStore","IDBTransaction","createObjectStore","IDBDatabase","funcName","replace","callback","length","nativeObject","getAll","query","count","instance","items","iterateCursor","push","undefined","continue","factory","getInstallationsEndpoint","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","Date","now","getErrorFromResponse","requestName","a","json","responseJson","errorData","ERROR_FACTORY","create","serverCode","code","serverMessage","message","serverStatus","status","getHeaders","apiKey","Headers","Accept","getHeadersWithAuth","appConfig","refreshToken","headers","append","INTERNAL_AUTH_VERSION","getAuthorizationHeader","retryIfServerError","fn","createInstallationRequest","fid","endpoint","body","authVersion","appId","sdkVersion","PACKAGE_VERSION","JSON","stringify","fetch","ok","responseValue","registeredInstallationEntry","registrationStatus","authToken","sleep","ms","setTimeout","VALID_FID_PATTERN","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","array","btoa","String","fromCharCode","substr","encode","test","getKey","appName","fidChangeCallbacks","Map","fidChanged","key","callFidChangeCallbacks","channel","getBroadcastChannel","postMessage","closeBroadcastChannel","broadcastFidChange","callbacks","broadcastChannel","BroadcastChannel","onmessage","e","data","size","close","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDB","tx","oldValue","put","remove","delete","update","updateFn","newValue","getInstallationEntry","oldEntry","installationEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","registrationPromise","clearTimedOutRequest","navigator","onLine","inProgressEntry","registrationTime","registerInstallation","waitUntilFidRegistration","isServerError","customData","updateInstallationRequest","entry","PENDING_TIMEOUT_MS","generateAuthTokenRequest","platformLoggerProvider","getGenerateAuthTokenEndpoint","platformLogger","getImmediate","optional","getPlatformInfoString","installation","completedAuthToken","refreshAuthToken","installations","forceRefresh","isEntryRegistered","oldAuthToken","isAuthTokenValid","tokenPromise","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","updateAuthTokenRequest","requestTime","updatedInstallationEntry","TOKEN_EXPIRATION_BUFFER","isAuthTokenExpired","inProgressAuthToken","installationsImpl","catch","console","completeInstallationRegistration","INSTALLATIONS_NAME","container","app","getProvider","extractAppConfig","_delete","getId","getToken","MessageType","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","DEFAULT_VAPID_KEY","CONSOLE_CAMPAIGN_ID","arrayToBase64","uint8Array","base64ToArray","base64String","base64","repeat","rawData","atob","outputArray","i","charCodeAt","OLD_DB_NAME","OLD_OBJECT_STORE_NAME","migrateOldDatabase","senderId","databases","map","includes","tokenDetails","objectStoreNames","contains","clear","oldDetails","auth","p256dh","fcmToken","createTime","subscriptionOptions","swScope","vapidKey","checkTokenDetails","upgradeDb","dbGet","firebaseDependencies","oldTokenDetails","dbSet","dbRemove","ERROR_MAP","requestGetToken","getBody","subscribeOptions","getEndpoint","responseData","errorInfo","requestUpdateToken","updateOptions","requestDeleteToken","unsubscribeOptions","web","applicationPubKey","TOKEN_EXPIRATION_MS","getTokenInternal","messaging","getPushSubscription","swRegistration","pushSubscription","scope","getNewToken","isTokenValid","warn","updateToken","deleteTokenInternal","pushManager","getSubscription","unsubscribe","updatedToken","updatedTokenDetails","subscription","subscribe","userVisibleOnly","applicationServerKey","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","externalizePayload","internalPayload","payload","from","collapseKey","collapse_key","messageId","fcm_message_id","messagePayloadInternal","notification","title","image","propagateNotificationPayload","propagateDataPayload","fcmOptions","link","analyticsLabel","analytics_label","propagateFcmOptions","isConsoleMessage","_mergeStrings","s1","s2","resultArray","charAt","join","valueName","analyticsProvider","deliveryMetricsExportedToBigQueryEnabled","onBackgroundMessageHandler","onMessageHandler","logEvents","isLogServiceStarted","options","keyName","messagingSenderId","registerDefaultSw","serviceWorker","register","browserErrorMessage","updateSwReg","ServiceWorkerRegistration","updateVapidKey","Notification","permission","requestPermission","serviceWorkerRegistration","logToScion","messageType","eventType","getEventType","logEvent","message_id","message_name","CONSOLE_CAMPAIGN_NAME","message_time","CONSOLE_CAMPAIGN_TIME","message_device_time","Math","floor","NOTIFICATION_CLICKED","PUSH_RECEIVED","Error","isFirebaseMessaging","next","dataPayload","CONSOLE_CAMPAIGN_ANALYTICS_ENABLED","WindowMessagingFactory","addEventListener","messageEventListener","WindowMessagingInternalFactory","_getToken","_deleteToken","nextOrObserver","_onMessage","FCM_MSG","stageLog","createFcmEvent","fcmEvent","createAndEnqueueLogEvent","project_number","instance_id","message_type","DISPLAY_NOTIFICATION","toString","DATA_MESSAGE","sdk_platform","package_name","origin","event_time_ms","source_extension_json_proto3","newSubscription","getMessagePayloadInternal","getClientList","hasVisibleClients","clientList","sendMessagePayloadInternalToWindows","showNotification","wrapInternalPayload","action","stopImmediatePropagation","getLink","url","URL","location","href","originUrl","host","getWindowClient","client","clients","openWindow","focus","wrappedInternalPayload","err","clientUrl","some","visibilityState","startsWith","matchAll","type","includeUncontrolled","notificationPayloadInternal","actions","maxActions","registration","click_action","SwMessagingFactory","waitUntil","onPush","onSubChange","onNotificationClick","document","_onBackgroundMessage","_delegate","messagingCompatFactory","NAMESPACE_EXPORTS","isSupported","hasOwnProperty","PushSubscription","window","cookieEnabled","INTERNAL","registerComponent","setServiceProps","registerVersion"],"mappings":";mJAIQ,SAAUA,GAAW,aAE3B,SAASC,EAAQC,GACf,OAAOC,MAAMC,UAAUC,MAAMC,KAAKJ,GAGpC,SAASK,EAAiBC,GACxB,OAAO,IAAIC,SAAQ,SAASC,EAASC,GACnCH,EAAQI,UAAY,WAClBF,EAAQF,EAAQK,SAGlBL,EAAQM,QAAU,WAChBH,EAAOH,EAAQO,WAKrB,SAASC,EAAqBC,EAAKC,EAAQC,GACzC,IAAIX,EACAY,EAAI,IAAIX,SAAQ,SAASC,EAASC,GAEpCJ,EADAC,EAAUS,EAAIC,GAAQG,MAAMJ,EAAKE,IACPG,KAAKZ,EAASC,MAI1C,OADAS,EAAEZ,QAAUA,EACLY,EAGT,SAASG,EAA2BN,EAAKC,EAAQC,GAC/C,IAAIC,EAAIJ,EAAqBC,EAAKC,EAAQC,GAC1C,OAAOC,EAAEE,MAAK,SAASE,GACrB,GAAKA,EACL,OAAO,IAAIC,EAAOD,EAAOJ,EAAEZ,YAI/B,SAASkB,EAAgBC,EAAYC,EAAYC,GAC/CA,EAAWC,SAAQ,SAASC,GAC1BC,OAAOC,eAAeN,EAAWvB,UAAW2B,EAAM,CAChDG,IAAK,WACH,OAAOC,KAAKP,GAAYG,IAE1BK,IAAK,SAASC,GACZF,KAAKP,GAAYG,GAAQM,QAMjC,SAASC,EAAoBX,EAAYC,EAAYW,EAAaV,GAChEA,EAAWC,SAAQ,SAASC,GACpBA,KAAQQ,EAAYnC,YAC1BuB,EAAWvB,UAAU2B,GAAQ,WAC3B,OAAOf,EAAqBmB,KAAKP,GAAaG,EAAMS,gBAK1D,SAASC,EAAad,EAAYC,EAAYW,EAAaV,GACzDA,EAAWC,SAAQ,SAASC,GACpBA,KAAQQ,EAAYnC,YAC1BuB,EAAWvB,UAAU2B,GAAQ,WAC3B,OAAOI,KAAKP,GAAYG,GAAMV,MAAMc,KAAKP,GAAaY,gBAK5D,SAASE,EAA0Bf,EAAYC,EAAYW,EAAaV,GACtEA,EAAWC,SAAQ,SAASC,GACpBA,KAAQQ,EAAYnC,YAC1BuB,EAAWvB,UAAU2B,GAAQ,WAC3B,OAAOR,EAA2BY,KAAKP,GAAaG,EAAMS,gBAKhE,SAASG,EAAMC,GACbT,KAAKU,OAASD,EAuBhB,SAASnB,EAAOqB,EAAQtC,GACtB2B,KAAKY,QAAUD,EACfX,KAAKa,SAAWxC,EA+BlB,SAASyC,EAAYC,GACnBf,KAAKgB,OAASD,EAuChB,SAASE,EAAYC,GACnBlB,KAAKmB,IAAMD,EACXlB,KAAKoB,SAAW,IAAI9C,SAAQ,SAASC,EAASC,GAC5C0C,EAAeG,WAAa,WAC1B9C,KAEF2C,EAAevC,QAAU,WACvBH,EAAO0C,EAAetC,QAExBsC,EAAeI,QAAU,WACvB9C,EAAO0C,EAAetC,WAkB5B,SAAS2C,EAAUC,EAAIC,EAAYC,GACjC1B,KAAK2B,IAAMH,EACXxB,KAAKyB,WAAaA,EAClBzB,KAAK0B,YAAc,IAAIT,EAAYS,GAkBrC,SAASE,EAAGJ,GACVxB,KAAK2B,IAAMH,EA6Db,SAASK,EAAOC,EAAMC,EAASC,GAC7B,IAAI/C,EAAIJ,EAAqBoD,UAAW,OAAQ,CAACH,EAAMC,IACnD1D,EAAUY,EAAEZ,QAUhB,OARIA,IACFA,EAAQ6D,gBAAkB,SAASC,GAC7BH,GACFA,EAAgB,IAAIT,EAAUlD,EAAQK,OAAQyD,EAAMV,WAAYpD,EAAQqD,gBAKvEzC,EAAEE,MAAK,SAASqC,GACrB,OAAO,IAAII,EAAGJ,MAIlB,SAASY,EAASN,GAChB,OAAOjD,EAAqBoD,UAAW,iBAAkB,CAACH,IA9N5DvC,EAAgBiB,EAAO,SAAU,CAC/B,OACA,UACA,aACA,WAGFL,EAAoBK,EAAO,SAAU6B,SAAU,CAC7C,MACA,SACA,SACA,aACA,UAGF9B,EAA0BC,EAAO,SAAU6B,SAAU,CACnD,aACA,kBAQF9C,EAAgBD,EAAQ,UAAW,CACjC,YACA,MACA,aACA,UAGFa,EAAoBb,EAAQ,UAAWgD,UAAW,CAChD,SACA,WAIF,CAAC,UAAW,WAAY,sBAAsB3C,SAAQ,SAAS4C,GACvDA,KAAcD,UAAUrE,YAC9BqB,EAAOrB,UAAUsE,GAAc,WAC7B,IAAI5B,EAASX,KACThB,EAAOqB,UACX,OAAO/B,QAAQC,UAAUY,MAAK,WAE5B,OADAwB,EAAOC,QAAQ2B,GAAYrD,MAAMyB,EAAOC,QAAS5B,GAC1CZ,EAAiBuC,EAAOE,UAAU1B,MAAK,SAASE,GACrD,GAAKA,EACL,OAAO,IAAIC,EAAOD,EAAOsB,EAAOE,qBAUxCC,EAAY7C,UAAUuE,YAAc,WAClC,OAAO,IAAIhC,EAAMR,KAAKgB,OAAOwB,YAAYtD,MAAMc,KAAKgB,OAAQX,aAG9DS,EAAY7C,UAAUwC,MAAQ,WAC5B,OAAO,IAAID,EAAMR,KAAKgB,OAAOP,MAAMvB,MAAMc,KAAKgB,OAAQX,aAGxDd,EAAgBuB,EAAa,SAAU,CACrC,OACA,UACA,aACA,kBAGFX,EAAoBW,EAAa,SAAU2B,eAAgB,CACzD,MACA,MACA,SACA,QACA,MACA,SACA,SACA,aACA,UAGFlC,EAA0BO,EAAa,SAAU2B,eAAgB,CAC/D,aACA,kBAGFnC,EAAaQ,EAAa,SAAU2B,eAAgB,CAClD,gBAkBFxB,EAAYhD,UAAUyE,YAAc,WAClC,OAAO,IAAI5B,EAAYd,KAAKmB,IAAIuB,YAAYxD,MAAMc,KAAKmB,IAAKd,aAG9Dd,EAAgB0B,EAAa,MAAO,CAClC,mBACA,SAGFX,EAAaW,EAAa,MAAO0B,eAAgB,CAC/C,UASFpB,EAAUtD,UAAU2E,kBAAoB,WACtC,OAAO,IAAI9B,EAAYd,KAAK2B,IAAIiB,kBAAkB1D,MAAMc,KAAK2B,IAAKtB,aAGpEd,EAAgBgC,EAAW,MAAO,CAChC,OACA,UACA,qBAGFjB,EAAaiB,EAAW,MAAOsB,YAAa,CAC1C,oBACA,UAOFjB,EAAG3D,UAAUyD,YAAc,WACzB,OAAO,IAAIT,EAAYjB,KAAK2B,IAAID,YAAYxC,MAAMc,KAAK2B,IAAKtB,aAG9Dd,EAAgBqC,EAAI,MAAO,CACzB,OACA,UACA,qBAGFtB,EAAasB,EAAI,MAAOiB,YAAa,CACnC,UAKF,CAAC,aAAc,iBAAiBlD,SAAQ,SAASmD,GAC/C,CAAChC,EAAaN,GAAOb,SAAQ,SAASS,GAE9B0C,KAAY1C,EAAYnC,YAE9BmC,EAAYnC,UAAU6E,EAASC,QAAQ,OAAQ,YAAc,WAC3D,IAAI/D,EAAOlB,EAAQuC,WACf2C,EAAWhE,EAAKA,EAAKiE,OAAS,GAC9BC,EAAelD,KAAKgB,QAAUhB,KAAKU,OACnCrC,EAAU6E,EAAaJ,GAAU5D,MAAMgE,EAAclE,EAAKd,MAAM,GAAI,IACxEG,EAAQI,UAAY,WAClBuE,EAAS3E,EAAQK,iBAOzB,CAAC8B,EAAOM,GAAanB,SAAQ,SAASS,GAChCA,EAAYnC,UAAUkF,SAC1B/C,EAAYnC,UAAUkF,OAAS,SAASC,EAAOC,GAC7C,IAAIC,EAAWtD,KACXuD,EAAQ,GAEZ,OAAO,IAAIjF,SAAQ,SAASC,GAC1B+E,EAASE,cAAcJ,GAAO,SAASzC,GAChCA,GAIL4C,EAAME,KAAK9C,EAAOtB,YAEJqE,IAAVL,GAAuBE,EAAMN,QAAUI,EAI3C1C,EAAOgD,WAHLpF,EAAQgF,IANRhF,EAAQgF,cAoClB1F,EAAQgE,OAASA,EACjBhE,EAAQuE,SAAWA,EAEnBvC,OAAOC,eAAejC,EAAS,aAAc,CAAEwB,OAAO,IAxTSuE,CAAQ/F,I,0JCkB5D,EAAqB,IAErB,EAAe,YAAQ,GACvB,EAAwB,SAKxB,EAA0B,KCEjC,GAAqB,mBACzB,4BACE,mDAFuB,cAGzB,iBAA4B,4CAHH,cAIzB,yBAAoC,oCAJX,cAKzB,iBACE,8FANuB,cAOzB,cAAyB,mDAPA,cAQzB,8BACE,4EATuB,GAsBd,EAAgB,IAAI,IDtBV,gBACK,gBCwB1B,G,SAYc,EAAc,GAC1B,OACA,aAAiB,KACjB,EAAM,KAAK,SAAQ,kB,SCtCPgG,E,GAAiD,IAAtBC,EAAsB,EAAtBA,UACzC,gBFPA,kDEOA,qBAA4CA,EAA5C,kB,SAGcC,EACdC,GAEA,MAAO,CACLC,MAAOD,EAASC,MAChBC,cAAe,EACfC,WA8DuCC,EA9DMJ,EAASG,UAgEjDE,OAAOD,EAAkBrB,QAAQ,IAAK,SA/D3CuB,aAAcC,KAAKC,OA6DvB,IAA2CJ,E,SAzDrBK,E,gFAAf,WACLC,EACAV,GAFK,iBAAAW,EAAA,sEAIqCX,EAASY,OAJ9C,cAICC,EAJD,OAKCC,EAAYD,EAAajG,MAL1B,kBAMEmG,EAAcC,OAAM,iBAA2B,CACpDN,cACAO,WAAYH,EAAUI,KACtBC,cAAeL,EAAUM,QACzBC,aAAcP,EAAUQ,UAVrB,4C,+BAcSC,E,GAAgC,IAAnBC,EAAmB,EAAnBA,OAC3B,OAAO,IAAIC,QAAQ,CACjB,eAAgB,mBAChBC,OAAQ,mBACR,iBAAkBF,I,SAING,EACdC,E,GAC6C,IAA3CC,EAA2C,EAA3CA,aAEIC,EAAUP,EAAWK,GAE3B,OADAE,EAAQC,OAAO,gBAmCjB,SAAgCF,GAC9B,gBAAUG,EAAV,YAAmCH,GApCHI,CAAuBJ,IAChDC,E,SAgBaI,E,8EAAf,WACLC,GADK,eAAAxB,EAAA,sEAGgBwB,IAHhB,aAGCzH,EAHD,QAKM4G,QAAU,KAAO5G,EAAO4G,OAAS,KALvC,yCAOIa,KAPJ,gCAUEzH,GAVF,4C,+BCzDe0H,E,gFAAf,WACLR,EADK,gCAAAjB,EAAA,6DAEH0B,EAFG,EAEHA,IAEIC,EAAWzC,EAAyB+B,GAEpCE,EAAUP,EAAWK,GACrBW,EAAO,CACXF,MACAG,YAAaR,EACbS,MAAOb,EAAUa,MACjBC,WAAYC,GAGRtI,EAAuB,CAC3BU,OAAQ,OACR+G,UACAS,KAAMK,KAAKC,UAAUN,IAjBlB,SAoBkBL,GAAmB,kBAAMY,MAAMR,EAAUjI,MApB3D,YAoBC2F,EApBD,QAqBQ+C,GArBR,kCAsBqD/C,EAASY,OAtB9D,eAsBGoC,EAtBH,OAuBGC,EAA2D,CAC/DZ,IAAKW,EAAcX,KAAOA,EAC1Ba,mBAAoB,EACpBrB,aAAcmB,EAAcnB,aAC5BsB,UAAWpD,EAAiCiD,EAAcG,YA3BzD,kBA6BIF,GA7BJ,yBA+BSxC,EAAqB,sBAAuBT,GA/BrD,kE,+BCfSoD,EAAMC,GACpB,OAAO,IAAI/I,SAAc,SAAAC,GACvB+I,WAAW/I,EAAS8I,MCDjB,IAAME,EAAoB,oB,SAOjBC,IACd,IAGE,IAAMC,EAAe,IAAIC,WAAW,KAElCC,KAAKC,QAAYD,KAA0CE,UACtDC,gBAAgBL,GAGvBA,EAAa,GAAK,IAAcA,EAAa,GAAK,GAElD,IAAMpB,EAUV,SAAgBoB,GAKd,OCpCoCM,EDgCIN,EC/B5BO,KAAKC,OAAOC,aAAP,MAAAD,OAAM,YAAiBF,KAC7BhF,QAAQ,MAAO,KAAKA,QAAQ,MAAO,MDkC7BoF,OAAO,EAAG,I,ICpCSJ,EDqBtBK,CAAOX,GAEnB,OAAOF,EAAkBc,KAAKhC,GAAOA,EApBd,GAqBvB,SAEA,MAvBuB,I,SEAXiC,EAAO1C,GACrB,gBAAUA,EAAU2C,QAApB,YAA+B3C,EAAUa,OCA3C,IAAM+B,EAA2D,IAAIC,I,SAMrDC,EAAW9C,EAAsBS,GAC/C,IAAMsC,EAAML,EAAO1C,GAEnBgD,EAAuBD,EAAKtC,GAsD9B,SAA4BsC,EAAatC,GACvC,IAAMwC,EAAUC,IACZD,GACFA,EAAQE,YAAY,CAAEJ,MAAKtC,QAE7B2C,IA1DAC,CAAmBN,EAAKtC,GA0C1B,SAASuC,EAAuBD,EAAatC,GAC3C,IAAM6C,EAAYV,EAAmBzI,IAAI4I,GACzC,GAAKO,EAAL,CAFsD,oBAM/BA,GAN+B,IAMtD,2BAAkC,EAChClG,EADgC,SACvBqD,IAP2C,gCAmBxD,IAAI8C,EAA4C,KAEhD,SAASL,IAOP,OANKK,GAAoB,qBAAsBxB,QAC7CwB,EAAmB,IAAIC,iBAAiB,0BACvBC,UAAY,SAAAC,GAC3BV,EAAuBU,EAAEC,KAAKZ,IAAKW,EAAEC,KAAKlD,OAGvC8C,EAGT,SAASH,IACyB,IAA5BR,EAAmBgB,MAAcL,IACnCA,EAAiBM,QACjBN,EAAmB,MCpFvB,IAEMO,EAAoB,+BAEtBC,EAAgC,KACpC,SAASC,IAcP,OAbKD,IACHA,EAAY,iBAPM,kCACG,GAM+B,SAAAE,GAMlD,OAAQA,EAAUpI,YAChB,KAAK,EACHoI,EAAUjH,kBAAkB8G,QAI7BC,E,SAgBa1J,E,gFAAf,WACL2F,EACAvG,GAFK,uBAAAsF,EAAA,6DAICgE,EAAML,EAAO1C,GAJd,SAKYgE,IALZ,cAKCpI,EALD,OAMCsI,EAAKtI,EAAGE,YAAYgI,EAAmB,aACvChH,EAAcoH,EAAGpH,YAAYgH,GAP9B,SAQkBhH,EAAY3C,IAAI4I,GARlC,cAQCoB,EARD,iBASCrH,EAAYsH,IAAI3K,EAAOsJ,GATxB,yBAUCmB,EAAG1I,SAVJ,eAYA2I,GAAYA,EAAS1D,MAAQhH,EAAMgH,KACtCqC,EAAW9C,EAAWvG,EAAMgH,KAbzB,kBAgBEhH,GAhBF,6C,+BAoBe4K,E,8EAAf,WAAsBrE,GAAtB,mBAAAjB,EAAA,6DACCgE,EAAML,EAAO1C,GADd,SAEYgE,IAFZ,cAECpI,EAFD,OAGCsI,EAAKtI,EAAGE,YAAYgI,EAAmB,aAHxC,SAICI,EAAGpH,YAAYgH,GAAmBQ,OAAOvB,GAJ1C,uBAKCmB,EAAG1I,SALJ,4C,+BAce+I,E,gFAAf,WACLvE,EACAwE,GAFK,yBAAAzF,EAAA,6DAICgE,EAAML,EAAO1C,GAJd,SAKYgE,IALZ,cAKCpI,EALD,OAMCsI,EAAKtI,EAAGE,YAAYgI,EAAmB,aACvC3I,EAAQ+I,EAAGpH,YAAYgH,GAPxB,SAQiD3I,EAAMhB,IAAI4I,GAR3D,UAQCoB,EARD,YAWYrG,KAFX2G,EAAWD,EAASL,IATrB,kCAYGhJ,EAAMmJ,OAAOvB,GAZhB,iDAcG5H,EAAMiJ,IAAIK,EAAU1B,GAdvB,yBAgBCmB,EAAG1I,SAhBJ,eAkBDiJ,GAAcN,GAAYA,EAAS1D,MAAQgE,EAAShE,KACtDqC,EAAW9C,EAAWyE,EAAShE,KAnB5B,kBAsBEgE,GAtBF,6C,+BCnDeC,G,iFAAf,WACL1E,GADK,iBAAAjB,EAAA,sEAK2BwF,EAAOvE,GAAW,SAAA2E,GAChD,IAAMC,EAAoBC,GAAgCF,GACpDG,EAAmBC,GACvB/E,EACA4E,GAGF,OADAI,EAAsBF,EAAiBE,oBAChCF,EAAiBF,qBAZrB,ULrBoB,MK0BnBA,EALD,QAeiBnE,IAfjB,gCAiB+BuE,EAjB/B,6CAiBMJ,kBAjBN,uCAoBE,CACLA,oBACAI,wBAtBG,4C,sBA8BP,SAASH,GACPF,GAOA,OAAOM,GAL0BN,GAAY,CAC3ClE,IAAKmB,IACLN,mBAAoB,IAaxB,SAASyD,GACP/E,EACA4E,GAEA,GAAwC,IAApCA,EAAkBtD,mBAAkD,CACtE,IAAK4D,UAAUC,OAKb,MAAO,CACLP,oBACAI,oBALmCtM,QAAQE,OAC3CuG,EAAcC,OAAM,iBASxB,IAAMgG,EAA+C,CACnD3E,IAAKmE,EAAkBnE,IACvBa,mBAAoB,EACpB+D,iBAAkB1G,KAAKC,OAMzB,MAAO,CAAEgG,kBAAmBQ,EAAiBJ,oB,8CAJjBM,CAC1BtF,EACAoF,IAGG,OAC+B,IAApCR,EAAkBtD,mBAEX,CACLsD,oBACAI,oBAAqBO,GAAyBvF,IAGzC,CAAE4E,qB,8CAKb,WACE5E,EACA4E,GAFF,eAAA7F,EAAA,+EAK8CyB,EACxCR,EACA4E,GAPN,cAKUvD,EALV,yBASWhH,EAAI2F,EAAWqB,IAT1B,oCAWQmE,EAAc,EAAD,KAAmC,MAA5B,KAAEC,WAAWpG,WAXzC,kCAcYgF,EAAOrE,GAdnB,iDAiBY3F,EAAI2F,EAAW,CACnBS,IAAKmE,EAAkBnE,IACvBa,mBAAoB,IAnB5B,6E,+BA2BeiE,G,iFAAf,WACEvF,GADF,qBAAAjB,EAAA,sEAOuC2G,GAA0B1F,GAPjE,OAOM2F,EAPN,iBAQiC,IAAxBA,EAAMrE,mBARf,iCAUUE,EAAM,KAVhB,uBAYkBkE,GAA0B1F,GAZ5C,OAYI2F,EAZJ,iCAe8B,IAAxBA,EAAMrE,mBAfZ,kCAoBcoD,GAAqB1E,GApBnC,oBAkBM4E,EAlBN,EAkBMA,oBACAI,EAnBN,EAmBMA,qBAnBN,0CAuBaA,GAvBb,iCA0BaJ,GA1Bb,iCA8BSe,GA9BT,6C,sBAyCA,SAASD,GACP1F,GAEA,OAAOuE,EAAOvE,GAAW,SAAA2E,GACvB,IAAKA,EACH,MAAMxF,EAAcC,OAAM,0BAE5B,OAAO6F,GAAqBN,MAIhC,SAASM,GAAqBU,GAC5B,OAcsC,KAHtCf,EAXmCe,GAcfrE,oBAClBsD,EAAkBS,iBAAmBO,EAAqBjH,KAAKC,MAdxD,CACL6B,IAAKkF,EAAMlF,IACXa,mBAAoB,GAIjBqE,EAGT,IACEf,E,SCzLoBiB,G,mFAAf,aAELjB,GAFK,iCAAA7F,EAAA,6DACHiB,EADG,EACHA,UAAW8F,EADR,EACQA,uBAGPpF,EAAWqF,GAA6B/F,EAAW4E,GAEnD1E,EAAUH,EAAmBC,EAAW4E,IAGxCoB,EAAiBF,EAAuBG,aAAa,CACzDC,UAAU,MAGVhG,EAAQC,OAAO,oBAAqB6F,EAAeG,yBAG/CxF,EAAO,CACXyF,aAAc,CACZtF,WAAYC,IAIVtI,EAAuB,CAC3BU,OAAQ,OACR+G,UACAS,KAAMK,KAAKC,UAAUN,IAzBlB,SA4BkBL,GAAmB,kBAAMY,MAAMR,EAAUjI,MA5B3D,YA4BC2F,EA5BD,QA6BQ+C,GA7BR,kCA8BoD/C,EAASY,OA9B7D,eA8BGoC,EA9BH,OA+BGiF,EAAyClI,EAC7CiD,GAhCC,kBAkCIiF,GAlCJ,yBAoCSxH,EAAqB,sBAAuBT,GApCrD,kE,sBAwCP,SAAS2H,GACP/F,EADF,GAEsC,IAAlCS,EAAkC,EAAlCA,IAEF,gBAAUxC,EAAyB+B,GAAnC,YAAiDS,EAAjD,wB,SCtCoB6F,G,iFAAf,WACLC,GADK,iCAAAxH,EAAA,6DAELyH,EAFK,yCAKejC,EAAOgC,EAAcvG,WAAW,SAAA2E,GAClD,IAAK8B,GAAkB9B,GACrB,MAAMxF,EAAcC,OAAM,kBAG5B,IAAMsH,EAAe/B,EAASpD,UAC9B,IAAKiF,GAAgBG,GAAiBD,GAEpC,OAAO/B,EACF,GAA8B,IAA1B+B,EAAapI,cAGtB,OADAsI,EAAeC,GAA0BN,EAAeC,GACjD7B,EAGP,IAAKO,UAAUC,OACb,MAAMhG,EAAcC,OAAM,eAG5B,IAAMgG,EAAkB0B,GAAoCnC,GAE5D,OADAiC,EAAeG,GAAyBR,EAAenB,GAChDA,KA1BN,UAKCO,EALD,QA8BaiB,EA9Bb,iCA+BKA,EA/BL,gDAgCAjB,EAAMpE,UAhCN,eA8BCA,EA9BD,uBAiCEA,GAjCF,6C,+BA0CQsF,G,mFAAf,WACEN,EACAC,GAFF,iBAAAzH,EAAA,sEAQoBiI,GAAuBT,EAAcvG,WARzD,OAQM2F,EARN,iBASsC,IAA7BA,EAAMpE,UAAUjD,cATzB,iCAWUkD,EAAM,KAXhB,uBAakBwF,GAAuBT,EAAcvG,WAbvD,OAaI2F,EAbJ,iCAiB6B,KADrBpE,EAAYoE,EAAMpE,WACVjD,cAjBhB,0CAmBWgI,GAAiBC,EAAeC,IAnB3C,iCAqBWjF,GArBX,6C,sBAiCA,SAASyF,GACPhH,GAEA,OAAOuE,EAAOvE,GAAW,SAAA2E,GACvB,IAAK8B,GAAkB9B,GACrB,MAAMxF,EAAcC,OAAM,kBAG5B,IAoFiCmC,EApF3BmF,EAAe/B,EAASpD,UAC9B,OAqFuB,KAFUA,EAnFDmF,GAqFtBpI,eACViD,EAAU0F,YAAcrB,EAAqBjH,KAAKC,MArFhD,+BACK+F,GAAQ,CACXpD,UAAW,CAAEjD,cAAe,KAIzBqG,K,SAIIoC,G,mFAAf,WACER,EACA3B,GAFF,mBAAA7F,EAAA,+EAK4B8G,GACtBU,EACA3B,GAPN,cAKUrD,EALV,OASU2F,EAAwB,+BACzBtC,GAAiB,CACpBrD,cAXN,SAaUlH,EAAIkM,EAAcvG,UAAWkH,GAbvC,gCAcW3F,GAdX,sCAiBMiE,EAAc,EAAD,KACgB,MAA5B,KAAEC,WAAWpG,YAAkD,MAA5B,KAAEoG,WAAWpG,WAlBvD,kCAsBYgF,EAAOkC,EAAcvG,WAtBjC,uCAwBY,EAAwB,+BACzB4E,GAAiB,CACpBrD,UAAW,CAAEjD,cAAe,KA1BpC,UA4BYjE,EAAIkM,EAAcvG,UAAW,GA5BzC,8E,sBAkCA,SAASyG,GACP7B,GAEA,YACwB9G,IAAtB8G,GACoC,IAApCA,EAAkBtD,mBAItB,SAASqF,GAAiBpF,GACxB,OACyB,IAAvBA,EAAUjD,gBAKd,SAA4BiD,GAC1B,IAAM3C,EAAMD,KAAKC,MACjB,OACEA,EAAM2C,EAAU7C,cAChB6C,EAAU7C,aAAe6C,EAAUhD,UAAYK,EAAMuI,EARpDC,CAAmB7F,GAaxB,SAASuF,GACPnC,GAEA,IAAM0C,EAA2C,CAC/C/I,cAAe,EACf2I,YAAatI,KAAKC,OAEpB,sCACK+F,GAAQ,CACXpD,UAAW8F,I,8CC/KR,WAAqBd,GAArB,qBAAAxH,EAAA,6DACCuI,EAAoBf,EADrB,SAEoD7B,GACvD4C,EAAkBtH,WAHf,uBAEG4E,EAFH,EAEGA,mBAAmBI,EAFtB,EAEsBA,qBAKzBA,EAAoBuC,MAAMC,QAAQxO,OAIlCsN,GAAiBgB,GAAmBC,MAAMC,QAAQxO,OAX/C,kBAcE4L,EAAkBnE,KAdpB,4C,oECIA,WACL8F,GADK,+BAAAxH,EAAA,6DAELyH,EAFK,gCAICc,EAAoBf,EAJrB,SAKCkB,GAAiCH,EAAkBtH,WALpD,uBASmBsG,GAAiBgB,EAAmBd,GATvD,cASCjF,EATD,yBAUEA,EAAUlD,OAVZ,4C,+BAaQoJ,G,iFAAf,WACEzH,GADF,iBAAAjB,EAAA,sEAGwC2F,GAAqB1E,GAH7D,qBAGUgF,EAHV,EAGUA,qBAHV,gCAOUA,EAPV,4C,sBCMA,SAAS,GAAqB,GAC5B,OAAO,EAAc,OAAM,4BAAsC,CAC/D,cCzBJ,I,GAAM0C,GAAqB,gBAGrB,GAAkD,SACtDC,GAEA,IAAMC,EAAMD,EAAUE,YAAY,OAAO5B,eAWzC,MANqD,CACnD2B,MACA5H,U,SDpB6B,GAC/B,IAAK,IAAQ,EAAI,QACf,MAAM,GAAqB,qBAG7B,IAAK,EAAI,KACP,MAAM,GAAqB,YAU7B,IANA,IAMA,MANiD,CAC/C,YACA,SACA,SAGF,eAAkC,CAA7B,IAAM,EAAO,KAChB,IAAK,EAAI,QAAQ,GACf,MAAM,GAAqB,GAI7B,MAAK,CACL,QAAS,EAAI,KACb,UAAW,EAAI,QAAQ,UACvB,OAAQ,EAAI,QAAQ,OACpB,MAAO,EAAI,QAAQ,OCXH8H,CAAiBF,GAMjC9B,uBAL6B,uBAAa8B,EAAK,mBAM/CG,QAAS,kBAAMrP,QAAQC,aAKrB,GAA6D,SACjEgP,GAEA,IAAMC,EAAMD,EAAUE,YAAY,OAAO5B,eAEnCM,EAAgB,uBAAaqB,EAAKF,IAAoBzB,eAM5D,MAJ8D,CAC5D+B,MAAO,kB,4CAAM,CAAMzB,IACnB0B,SAAU,SAACzB,GAAD,O,4CAA4B,CAASD,EAAeC,MAMhE,6BACE,IAAI,IAAUkB,GAAoB,GAAa,WAEjD,6BACE,IAAI,IAtC4B,yBAwC9B,GAAe,YCvCrB,0B,0BAAsB,GjBdf,IA8BKQ,GkBOAA,GlBrCCC,GAAkB,4BAClBC,GAAmB,uCAEnBC,GACX,0FAOWC,GAAsB,kB,SmBXnBC,GAAcpG,GAC5B,IAAMqG,EAAa,IAAI1G,WAAWK,GAElC,OADqBC,KAAKC,OAAOC,aAAP,MAAAD,OAAM,YAAiBmG,KAC7BrL,QAAQ,KAAM,IAAIA,QAAQ,MAAO,KAAKA,QAAQ,MAAO,K,SAG3DsL,GAAcC,GAS5B,IARA,IACMC,GAAUD,EADA,IAAIE,QAAQ,EAAKF,EAAarL,OAAS,GAAM,IAE1DF,QAAQ,MAAO,KACfA,QAAQ,KAAM,KAEX0L,EAAUC,KAAKH,GACfI,EAAc,IAAIjH,WAAW+G,EAAQxL,QAElC2L,EAAI,EAAGA,EAAIH,EAAQxL,SAAU2L,EACpCD,EAAYC,GAAKH,EAAQI,WAAWD,GAEtC,OAAOD,GnBYT,SAAYb,GACV,mCACA,mDAFF,CAAYA,QAAW,KkBOvB,SAAYA,GACV,gCACA,8CAFF,CAAYA,QAAW,KEOvB,IAAMgB,GAAc,uBAMdC,GAAwB,yB,SAERC,G,iFAAf,WACLC,GADK,iBAAAtK,EAAA,2DAGD,cAAe1C,WAHd,gCAMsBA,UAEtBiN,YARA,UAMGA,EANH,OASaA,EAAUC,KAAI,SAAA3N,GAAE,OAAIA,EAAGM,QAE1BsN,SAASN,IAXnB,yCAaM,MAbN,cAiBDO,EAAoC,KAjBnC,UAmBY,iBAAOP,GAtBH,EAsBE,uCAA8B,WAAMtN,GAAN,yBAAAmD,EAAA,2DAC/CnD,EAAGC,WAAa,GAD+B,oDAM9CD,EAAG8N,iBAAiBC,SAASR,IANiB,wDAW7CrM,EAAclB,EAAGE,YAAYgB,YAAYqM,IAXI,SAY/BrM,EAAYjC,MAAM,eAAeV,IAAIkP,GAZN,cAY7C5P,EAZ6C,iBAa7CqD,EAAY8M,QAbiC,WAe9CnQ,EAf8C,sDAoB7B,IAAlBmC,EAAGC,WApB4C,qBAqB3CgO,EAAapQ,GAEHqQ,MAASD,EAAWE,QAAWF,EAAWnJ,SAvBT,mDA2BjD+I,EAAe,CACbpL,MAAOwL,EAAWG,SAClBC,WAAiC,QAArB,EAAAJ,EAAWI,kBAAU,QAAItL,KAAKC,MAC1CsL,oBAAqB,CACnBJ,KAAMD,EAAWC,KACjBC,OAAQF,EAAWE,OACnBrJ,SAAUmJ,EAAWnJ,SACrByJ,QAASN,EAAWM,QACpBC,SACiC,kBAAxBP,EAAWO,SACdP,EAAWO,SACX7B,GAAcsB,EAAWO,YAtCc,wBAyCtB,IAAlBxO,EAAGC,WAGZ4N,EAAe,CACbpL,OAHI,EAAa5E,GAGCuQ,SAClBC,WAAY,EAAWA,WACvBC,oBAAqB,CACnBJ,KAAMvB,GAAc,EAAWuB,MAC/BC,OAAQxB,GAAc,EAAWwB,QACjCrJ,SAAU,EAAWA,SACrByJ,QAAS,EAAWA,QACpBC,SAAU7B,GAAc,EAAW6B,YAGZ,IAAlBxO,EAAGC,aAGZ4N,EAAe,CACbpL,OAHI,EAAa5E,GAGCuQ,SAClBC,WAAY,EAAWA,WACvBC,oBAAqB,CACnBJ,KAAMvB,GAAc,EAAWuB,MAC/BC,OAAQxB,GAAc,EAAWwB,QACjCrJ,SAAU,EAAWA,SACrByJ,QAAS,EAAWA,QACpBC,SAAU7B,GAAc,EAAW6B,aAlEU,4CAA9B,uDAnBlB,sBA0FFvG,QA1FE,UA6FC,mBAASqF,IA7FV,yBA8FC,mBAAS,wBA9FV,yBA+FC,mBAAS,aA/FV,iCAiGEmB,GAAkBZ,GAAgBA,EAAe,MAjGnD,6C,sBAoGP,SAASY,GACPZ,GAEA,IAAKA,IAAiBA,EAAaS,oBACjC,OAAO,EAET,IAAQA,EAAwBT,EAAxBS,oBACR,MACqC,kBAA5BT,EAAaQ,YACpBR,EAAaQ,WAAa,GACI,kBAAvBR,EAAapL,OACpBoL,EAAapL,MAAMhB,OAAS,GACQ,kBAA7B6M,EAAoBJ,MAC3BI,EAAoBJ,KAAKzM,OAAS,GACI,kBAA/B6M,EAAoBH,QAC3BG,EAAoBH,OAAO1M,OAAS,GACI,kBAAjC6M,EAAoBxJ,UAC3BwJ,EAAoBxJ,SAASrD,OAAS,GACC,kBAAhC6M,EAAoBC,SAC3BD,EAAoBC,QAAQ9M,OAAS,GACG,kBAAjC6M,EAAoBE,UAC3BF,EAAoBE,SAAS/M,OAAS,ECtKnC,IAED,GAAoB,2BAEtB,GAAgC,KACpC,SAAS,KAaP,OAZK,KACH,GAAY,iBAPa,8BACJ,GAM+B,SAAAiN,GAKlD,OAAQA,EAAUzO,YAChB,KAAK,EACHyO,EAAUtN,kBAAkB,SAI7B,G,SAIauN,G,iFAAf,WACLC,GADK,qBAAAzL,EAAA,6DAGCgE,EAAM,GAAOyH,GAHd,SAIY,KAJZ,cAIC5O,EAJD,gBAKsBA,EACxBE,YAAY,IACZgB,YAAY,IACZ3C,IAAI4I,GARF,YAKC0G,EALD,kDAWIA,GAXJ,yBAc2BL,GAC5BoB,EAAqBxK,UAAUqJ,UAf9B,aAcGoB,EAdH,0CAkBKC,GAAMF,EAAsBC,GAlBjC,iCAmBMA,GAnBN,6C,+BAyBeC,G,mFAAf,WACLF,EACAf,GAFK,mBAAA1K,EAAA,6DAICgE,EAAM,GAAOyH,GAJd,SAKY,KALZ,cAKC5O,EALD,OAMCsI,EAAKtI,EAAGE,YAAY,GAAmB,aANxC,SAOCoI,EAAGpH,YAAY,IAAmBsH,IAAIqF,EAAc1G,GAPrD,uBAQCmB,EAAG1I,SARJ,gCASEiO,GATF,6C,+BAaekB,G,iFAAf,WACLH,GADK,mBAAAzL,EAAA,6DAGCgE,EAAM,GAAOyH,GAHd,SAIY,KAJZ,cAIC5O,EAJD,OAKCsI,EAAKtI,EAAGE,YAAY,GAAmB,aALxC,SAMCoI,EAAGpH,YAAY,IAAmBwH,OAAOvB,GAN1C,uBAOCmB,EAAG1I,SAPJ,4C,sBAmBP,SAAS,GAAT,GACE,OADyD,EAAzCwE,UACCa,MpBhEZ,IAAM+J,IAAS,qBACpB,4BACE,mDAFkB,eAGpB,2BACE,iDAJkB,eAKpB,uBACE,yDANkB,eAOpB,qBACE,sEARkB,eASpB,qBACE,oEAVkB,eAWpB,sBACE,4EAZkB,eAapB,yBACE,oGAdkB,eAepB,qCACE,gFAhBkB,eAiBpB,yBACE,sEAlBkB,eAmBpB,2BACE,4DApBkB,eAqBpB,2BACE,0EAtBkB,eAwBpB,sBACE,qEAzBkB,eA0BpB,wBACE,yDA3BkB,eA4BpB,yBACE,6IA7BkB,eA+BpB,0BACE,wEAhCkB,eAiCpB,qBACE,kEAlCkB,eAmCpB,oBAA+B,0CAnCX,eAoCpB,gCACE,yIArCkB,IAmDT,GAAgB,IAAI,IAC/B,YACA,YACAA,I,SqBxDoBC,G,mFAAf,WACLL,EACAN,GAFK,yBAAAnL,EAAA,sEAIiB,GAAWyL,GAJ5B,cAICtK,EAJD,OAKCS,EAAOmK,GAAQZ,GAEfa,EAAmB,CACvB5R,OAAQ,OACR+G,UACAS,KAAMK,KAAKC,UAAUN,IAVlB,kBAeoBO,MACrB8J,GAAYR,EAAqBxK,WACjC+K,GAjBC,cAeG3M,EAfH,iBAmBkBA,EAASY,OAnB3B,QAmBHiM,EAnBG,+DAqBG,GAAc7L,OAAM,yBAAmC,CAC3D8L,UAAW,EAAF,KAtBR,YA0BDD,EAAajS,MA1BZ,uBA2BGwG,EAAUyL,EAAajS,MAAMwG,QAC7B,GAAcJ,OAAM,yBAAmC,CAC3D8L,UAAW1L,IA7BV,WAiCAyL,EAAa5M,MAjCb,uBAkCG,GAAce,OAAM,4BAlCvB,iCAqCE6L,EAAa5M,OArCf,2D,+BAwCe8M,G,mFAAf,WACLX,EACAf,GAFK,yBAAA1K,EAAA,sEAIiB,GAAWyL,GAJ5B,cAICtK,EAJD,OAKCS,EAAOmK,GAAQrB,EAAaS,qBAE5BkB,EAAgB,CACpBjS,OAAQ,QACR+G,UACAS,KAAMK,KAAKC,UAAUN,IAVlB,kBAeoBO,MAAM,GAAD,OACvB8J,GAAYR,EAAqBxK,WADV,YACwByJ,EAAapL,OAC/D+M,GAjBC,cAeGhN,EAfH,iBAmBkBA,EAASY,OAnB3B,QAmBHiM,EAnBG,+DAqBG,GAAc7L,OAAM,sBAAgC,CACxD8L,UAAW,EAAF,KAtBR,YA0BDD,EAAajS,MA1BZ,uBA2BGwG,EAAUyL,EAAajS,MAAMwG,QAC7B,GAAcJ,OAAM,sBAAgC,CACxD8L,UAAW1L,IA7BV,WAiCAyL,EAAa5M,MAjCb,uBAkCG,GAAce,OAAM,yBAlCvB,iCAqCE6L,EAAa5M,OArCf,2D,+BAwCegN,G,mFAAf,WACLb,EACAnM,GAFK,uBAAAU,EAAA,sEAIiB,GAAWyL,GAJ5B,cAICtK,EAJD,OAMCoL,EAAqB,CACzBnS,OAAQ,SACR+G,WARG,kBAYoBgB,MAAM,GAAD,OACvB8J,GAAYR,EAAqBxK,WADV,YACwB3B,GAClDiN,GAdC,cAYGlN,EAZH,iBAgBqCA,EAASY,OAhB9C,aAgBGiM,EAhBH,QAiBcjS,MAjBd,uBAkBKwG,EAAUyL,EAAajS,MAAMwG,QAC7B,GAAcJ,OAAM,2BAAqC,CAC7D8L,UAAW1L,IApBZ,gEAwBG,GAAcJ,OAAM,2BAAqC,CAC7D8L,UAAW,EAAF,KAzBR,2D,sBA8BP,SAASF,GAAT,GAA6C,IAAtB9M,EAAsB,EAAtBA,UACrB,gBtB9HsB,6CsB8HtB,qBAA+BA,EAA/B,kB,SAGa,G,iFAAf,iCAAAa,EAAA,6DACEiB,EADF,EACEA,UACAuG,EAFF,EAEEA,cAFF,SAI0BA,EAAc0B,WAJxC,cAIQ1G,EAJR,yBAMS,IAAI1B,QAAQ,CACjB,eAAgB,mBAChBC,OAAQ,mBACR,iBAAkBE,EAAUJ,OAC5B,mDAA6C2B,MAVjD,4C,sBAcA,SAASuJ,GAAT,GAKsB,IAJpBf,EAIoB,EAJpBA,OACAD,EAGoB,EAHpBA,KACApJ,EAEoB,EAFpBA,SACA0J,EACoB,EADpBA,SAEMzJ,EAAuB,CAC3B4K,IAAK,CACH7K,WACAoJ,OACAC,WAQJ,OAJIK,IAAa/B,KACf1H,EAAK4K,IAAIC,kBAAoBpB,GAGxBzJ,ECvJT,IAAM8K,GAAsB,O,SAENC,G,iFAAf,WACLC,GADK,mBAAA5M,EAAA,sEAG0B6M,GAC7BD,EAAUE,eACVF,EAAUvB,UALP,cAGC0B,EAHD,OAQC5B,EAA2C,CAC/CE,SAAUuB,EAAUvB,SACpBD,QAASwB,EAAUE,eAAgBE,MACnCrL,SAAUoL,EAAiBpL,SAC3BoJ,KAAMvB,GAAcuD,EAAiBpJ,OAAO,SAC5CqH,OAAQxB,GAAcuD,EAAiBpJ,OAAO,YAb3C,SAgBsB6H,GAAMoB,EAAUnB,sBAhBtC,UAgBCf,EAhBD,iDAmBIuC,GAAYL,EAAUnB,qBAAsBN,IAnBhD,WAqBF+B,GAAaxC,EAAaS,oBAAsBA,GArB9C,4CAyBKmB,GACJM,EAAUnB,qBACVf,EAAapL,OA3Bd,2DA+BDmJ,QAAQ0E,KAAR,MA/BC,iCAkCIF,GAAYL,EAAUnB,qBAAuBN,IAlCjD,aAmCMvL,KAAKC,OAAS6K,EAAaQ,WAAawB,IAnC9C,0CAqCIU,GAAYR,EAAW,CAC5BtN,MAAOoL,EAAapL,MACpB4L,WAAYtL,KAAKC,MACjBsL,yBAxCC,iCA4CIT,EAAapL,OA5CjB,4D,+BAoDe+N,G,iFAAf,WACLT,GADK,iBAAA5M,EAAA,sEAGsBwL,GAAMoB,EAAUnB,sBAHtC,YAGCf,EAHD,wCAKG4B,GACJM,EAAUnB,qBACVf,EAAapL,OAPZ,uBASGsM,GAASgB,EAAUnB,sBATtB,wBAa0BmB,EAAUE,eAAgBQ,YAAYC,kBAbhE,aAaCR,EAbD,kDAeIA,EAAiBS,eAfrB,kCAmBE,GAnBF,6C,+BAsBQJ,G,mFAAf,WACER,EACAlC,GAFF,iBAAA1K,EAAA,+EAK+BoM,GACzBQ,EAAUnB,qBACVf,GAPN,cAKU+C,EALV,OAUUC,EAAmB,+BACpBhD,GAAY,CACfpL,MAAOmO,EACPvC,WAAYtL,KAAKC,QAbvB,SAgBU8L,GAAMiB,EAAUnB,qBAAsBiC,GAhBhD,gCAiBWD,GAjBX,mDAmBUJ,GAAoBT,GAnB9B,8E,+BAwBeK,G,mFAAf,WACExB,EACAN,GAFF,iBAAAnL,EAAA,sEAIsB8L,GAClBL,EACAN,GANJ,cAIQ7L,EAJR,OAQQoL,EAA6B,CACjCpL,QACA4L,WAAYtL,KAAKC,MACjBsL,uBAXJ,SAaQQ,GAAMF,EAAsBf,GAbpC,gCAcSA,EAAapL,OAdtB,4C,+BAoBeuN,G,mFAAf,WACEC,EACAzB,GAFF,eAAArL,EAAA,sEAI6B8M,EAAeQ,YAAYC,kBAJxD,YAIQI,EAJR,iDAMWA,GANX,gCASSb,EAAeQ,YAAYM,UAAU,CAC1CC,iBAAiB,EAGjBC,qBAAsBpE,GAAc2B,MAbxC,4C,sBAoBA,SAAS6B,GACPa,EACAC,GAEA,IAAMC,EAAkBD,EAAe3C,WAAa0C,EAAU1C,SACxD6C,EAAkBF,EAAerM,WAAaoM,EAAUpM,SACxDwM,EAAcH,EAAejD,OAASgD,EAAUhD,KAChDqD,EAAgBJ,EAAehD,SAAW+C,EAAU/C,OAE1D,OAAOiD,GAAmBC,GAAmBC,GAAeC,E,SClK9CC,GACdC,GAEA,IAAMC,EAA0B,CAC9BC,KAAMF,EAAgBE,KAEtBC,YAAaH,EAAgBI,aAE7BC,UAAWL,EAAgBM,gBAO7B,OAGF,SACEL,EACAM,GAEA,IAAKA,EAAuBC,aAC1B,OAGFP,EAAQO,aAAe,GAEvB,IAAMC,EAAQF,EAAuBC,aAAcC,MAC7CA,IACJR,EAAQO,aAAcC,MAAQA,GAGhC,IAAMnN,EAAOiN,EAAuBC,aAAclN,KAC5CA,IACJ2M,EAAQO,aAAclN,KAAOA,GAG/B,IAAMoN,EAAQH,EAAuBC,aAAcE,MAC7CA,IACJT,EAAQO,aAAcE,MAAQA,GA7BhCC,CAA6BV,EAASD,GAiCxC,SACEC,EACAM,GAEA,IAAKA,EAAuBjK,KAC1B,OAGF2J,EAAQ3J,KAAOiK,EAAuBjK,KAxCtCsK,CAAqBX,EAASD,GA2ChC,SACEC,EACAM,GAEA,IAAKA,EAAuBM,WAC1B,OAGFZ,EAAQY,WAAa,GAErB,IAAMC,EAAOP,EAAuBM,WAAYC,KAC1CA,IACJb,EAAQY,WAAYC,KAAOA,GAI7B,IAAMC,EAAiBR,EAAuBM,WAAYG,gBACpDD,IACJd,EAAQY,WAAYE,eAAiBA,GA5DvCE,CAAoBhB,EAASD,GAEtBC,E,SCfOiB,GAAiB5K,GAE/B,MAAuB,kBAATA,KAAuBA,GAAQ2E,MAAuB3E,E,SCmNtD6K,GAAcC,EAAYC,GAExC,IADA,IAAMC,EAAc,GACX3F,EAAI,EAAGA,EAAIyF,EAAGpR,OAAQ2L,IAC7B2F,EAAY9Q,KAAK4Q,EAAGG,OAAO5F,IACvBA,EAAI0F,EAAGrR,QACTsR,EAAY9Q,KAAK6Q,EAAGE,OAAO5F,IAI/B,OAAO2F,EAAYE,KAAK,IX1L1B,SAAS,GAAqBC,GAC5B,OAAO,GAAc1P,OAAM,4BAAsC,CAC/D0P,cWrBqBN,GACvB,mCACA,mCAGwBA,GACxB,uBACA,uB,ICjBW,G,WAoBX,WACE5G,EACArB,EACAwI,GAA0D,oBAhB5D,KAAAC,0CAAoD,EAEpD,KAAAC,2BAGW,KAEX,KAAAC,iBACE,KAEF,KAAAC,UAAwB,GACxB,KAAAC,qBAA+B,EAO7B,IAAMpP,E,SZ7BuB4H,GAC/B,IAAKA,IAAQA,EAAIyH,QACf,MAAM,GAAqB,4BAG7B,IAAKzH,EAAI1L,KACP,MAAM,GAAqB,YAY7B,IARA,IAOQmT,EAAYzH,EAAZyH,QACR,MARyD,CACvD,YACA,SACA,QACA,qBAIF,eAAkC,CAA7B,IAAMC,EAAO,KAChB,IAAKD,EAAQC,GACX,MAAM,GAAqBA,GAI/B,MAAO,CACL3M,QAASiF,EAAI1L,KACbgC,UAAWmR,EAAQnR,UACnB0B,OAAQyP,EAAQzP,OAChBiB,MAAOwO,EAAQxO,MACfwI,SAAUgG,EAAQE,mBYAA,CAAiB3H,GAEnCxN,KAAKoQ,qBAAuB,CAC1B5C,MACA5H,YACAuG,gBACAwI,qB,2CAIJ,WACE,OAAOrW,QAAQC,c,cCzCG6W,G,iFAAf,WACL7D,GADK,SAAA5M,EAAA,+EAI8BmG,UAAUuK,cAAcC,SACvDvH,GACA,CACE4D,MAAO3D,KAPR,OAIHuD,EAAUE,eAJP,OAgBHF,EAAUE,eAAetH,SAASgD,OAAM,eAhBrC,sDAoBG,GAAcnI,OAAM,qCAAwC,CAChEuQ,oBAAqB,KAAEnQ,UArBtB,0D,+BCAeoQ,G,mFAAf,WACLjE,EACAE,GAFK,SAAA9M,EAAA,yDAIA8M,GAAmBF,EAAUE,eAJ7B,gCAKG2D,GAAkB7D,GALrB,UAQAE,IAAoBF,EAAUE,eAR9B,oDAYCA,aAA0BgE,0BAZ3B,sBAaG,GAAczQ,OAAM,2BAbvB,OAgBLuM,EAAUE,eAAiBA,EAhBtB,4C,+BCFeiE,G,mFAAf,WACLnE,EACAvB,GAFK,SAAArL,EAAA,sDAICqL,EACJuB,EAAUvB,SAAWA,EACXuB,EAAUvB,WACpBuB,EAAUvB,SAAW/B,IAPlB,4C,+BCKeJ,G,mFAAf,WACL0D,EACA0D,GAFK,SAAAtQ,EAAA,yDAIAmG,UAJA,sBAKG,GAAc9F,OAAM,4BALvB,UAQ2B,YAA5B2Q,aAAaC,WARZ,gCASGD,aAAaE,oBAThB,UAY2B,YAA5BF,aAAaC,WAZZ,sBAaG,GAAc5Q,OAAM,sBAbvB,uBAgBC0Q,GAAenE,EAAkB,OAAP0D,QAAO,IAAPA,OAAO,EAAPA,EAASjF,UAhBpC,wBAiBCwF,GAAYjE,EAAkB,OAAP0D,QAAO,IAAPA,OAAO,EAAPA,EAASa,2BAjBjC,iCAmBExE,GAAiBC,IAnBnB,6C,+BCIewE,G,qFAAf,WACLxE,EACAyE,EACAzM,GAHK,eAAA5E,EAAA,6DAKCsR,EAAYC,GAAaF,GAL1B,SAMmBzE,EAAUnB,qBAAqBuE,kBAAkB5U,MANpE,cAOKoW,SAASF,EAAW,CAE5BG,WAAY7M,EAAK2E,mBACjBmI,aAAc9M,EAAK+M,kBACnBC,aAAchN,EAAKiN,iBACnBC,oBAAqBC,KAAKC,MAAMpS,KAAKC,MAAQ,OAZ1C,4C,sBAiBP,SAAS0R,GAAaF,GACpB,OAAQA,GACN,KAAKlI,GAAY8I,qBACf,MAAO,oBACT,KAAK9I,GAAY+I,cACf,MAAO,0BACT,QACE,MAAM,IAAIC,O,8CCzBT,WACLvF,EACApP,GAFK,iBAAAwC,EAAA,0DAICsO,EAAkB9Q,EAAMoH,MAETwN,oBANhB,oDAWHxF,EAAUuD,kBACV7B,EAAgB+C,cAAgBlI,GAAY+I,gBAEF,oBAA/BtF,EAAUuD,iBACnBvD,EAAUuD,iBAAiB9B,GAAmBC,IAE9C1B,EAAUuD,iBAAiBkC,KAAKhE,GAAmBC,MAOrDkB,GAFI8C,EAAchE,EAAgB1J,OAGkB,MAApD0N,EAAYC,gBAzBT,gCA2BGnB,GAAWxE,EAAW0B,EAAgB+C,YAAciB,GA3BvD,4C,sBCSP,I,GAAME,GAAuD,SAC3D5J,GAEA,IAAMgE,EAAY,IAAI,GACpBhE,EAAUE,YAAY,OAAO5B,eAC7B0B,EAAUE,YAAY,0BAA0B5B,eAChD0B,EAAUE,YAAY,uBAOxB,OAJA3C,UAAUuK,cAAc+B,iBAAiB,WAAW,SAAA9N,GAAC,O,8CACnD+N,CAAqB9F,EAA+BjI,MAG/CiI,GAGH+F,GAAwE,SAC5E/J,GAEA,IAAMgE,EAAYhE,EACfE,YAAY,aACZ5B,eAMH,MAJ6C,CAC3CgC,SAAU,SAACoH,GAAD,OAA+BpH,GAAS0D,EAAW0D,M,8CCtC1D,WACL1D,GADK,SAAA5M,EAAA,yDAGAmG,UAHA,sBAIG,GAAc9F,OAAM,4BAJvB,UAOAuM,EAAUE,eAPV,gCAQG2D,GAAkB7D,GARrB,gCAWES,GAAoBT,IAXtB,4C,+BCqFe,G,mFAAf,WACLA,EACA0D,GAFK,SAAAtQ,EAAA,6DAIL4M,EAAY,YAAmBA,GAJ1B,kBAKEgG,GAAUhG,EAA+B0D,IAL3C,4C,+BAkBS,GAAY1D,GAE1B,O,4CAAOiG,CADPjG,EAAY,YAAmBA,I,SAiBjB,GACdA,EACAkG,GAGA,O,SCzHAlG,EACAkG,GAEA,IAAK3M,UACH,MAAM,GAAc9F,OAAM,4BAK5B,OAFAuM,EAAUuD,iBAAmB2C,EAEtB,WACLlG,EAAUuD,iBAAmB,MD+GxB4C,CADPnG,EAAY,YAAmBA,GACkBkG,GF1DjD,6BACE,IAAI,IAAU,YAAaN,GAAsB,WAGnD,6BACE,IAAI,IACF,qBACAG,GAA8B,YlC9E7B,IA2BKxJ,GkBOA,GlBlCC,GACX,0FAKW6J,GAAU,U,SmBTP,GAAc5P,GAC5B,IAAMqG,EAAa,IAAI1G,WAAWK,GAElC,OADqBC,KAAKC,OAAOC,aAAP,MAAAD,OAAM,YAAiBmG,KAC7BrL,QAAQ,KAAM,IAAIA,QAAQ,MAAO,KAAKA,QAAQ,MAAO,K,SAG3D,GAAcuL,GAS5B,IARA,IACMC,GAAUD,EADA,IAAIE,QAAQ,EAAKF,EAAarL,OAAS,GAAM,IAE1DF,QAAQ,MAAO,KACfA,QAAQ,KAAM,KAEX0L,EAAUC,KAAKH,GACfI,EAAc,IAAIjH,WAAW+G,EAAQxL,QAElC2L,EAAI,EAAGA,EAAIH,EAAQxL,SAAU2L,EACpCD,EAAYC,GAAKH,EAAQI,WAAWD,GAEtC,OAAOD,GnBYT,SAAYb,GACV,mCACA,mDAFF,CAAYA,QAAW,KkBOvB,SAAYA,GACV,gCACA,8CAFF,CAAY,QAAW,KEOvB,IAAM,GAAc,uBAMd,GAAwB,yB,SAER,G,iFAAf,WACLmB,GADK,iBAAAtK,EAAA,2DAGD,cAAe1C,WAHd,gCAMsBA,UAEtBiN,YARA,UAMGA,EANH,OASaA,EAAUC,KAAI,SAAA3N,GAAE,OAAIA,EAAGM,QAE1BsN,SAAS,IAXnB,yCAaM,MAbN,cAiBDC,EAAoC,KAjBnC,UAmBY,iBAAO,GAtBH,EAsBE,uCAA8B,WAAM7N,GAAN,yBAAAmD,EAAA,2DAC/CnD,EAAGC,WAAa,GAD+B,oDAM9CD,EAAG8N,iBAAiBC,SAAS,IANiB,wDAW7C7M,EAAclB,EAAGE,YAAYgB,YAAY,IAXI,SAY/BA,EAAYjC,MAAM,eAAeV,IAAIkP,GAZN,cAY7C5P,EAZ6C,iBAa7CqD,EAAY8M,QAbiC,WAe9CnQ,EAf8C,sDAoB7B,IAAlBmC,EAAGC,WApB4C,qBAqB3CgO,EAAapQ,GAEHqQ,MAASD,EAAWE,QAAWF,EAAWnJ,SAvBT,mDA2BjD+I,EAAe,CACbpL,MAAOwL,EAAWG,SAClBC,WAAiC,QAArB,EAAAJ,EAAWI,kBAAU,QAAItL,KAAKC,MAC1CsL,oBAAqB,CACnBJ,KAAMD,EAAWC,KACjBC,OAAQF,EAAWE,OACnBrJ,SAAUmJ,EAAWnJ,SACrByJ,QAASN,EAAWM,QACpBC,SACiC,kBAAxBP,EAAWO,SACdP,EAAWO,SACX,GAAcP,EAAWO,YAtCc,wBAyCtB,IAAlBxO,EAAGC,WAGZ4N,EAAe,CACbpL,OAHI,EAAa5E,GAGCuQ,SAClBC,WAAY,EAAWA,WACvBC,oBAAqB,CACnBJ,KAAM,GAAc,EAAWA,MAC/BC,OAAQ,GAAc,EAAWA,QACjCrJ,SAAU,EAAWA,SACrByJ,QAAS,EAAWA,QACpBC,SAAU,GAAc,EAAWA,YAGZ,IAAlBxO,EAAGC,aAGZ4N,EAAe,CACbpL,OAHI,EAAa5E,GAGCuQ,SAClBC,WAAY,EAAWA,WACvBC,oBAAqB,CACnBJ,KAAM,GAAc,EAAWA,MAC/BC,OAAQ,GAAc,EAAWA,QACjCrJ,SAAU,EAAWA,SACrByJ,QAAS,EAAWA,QACpBC,SAAU,GAAc,EAAWA,aAlEU,4CAA9B,uDAnBlB,sBA0FFvG,QA1FE,UA6FC,mBAAS,IA7FV,yBA8FC,mBAAS,wBA9FV,yBA+FC,mBAAS,aA/FV,iCAiGE,GAAkB4F,GAAgBA,EAAe,MAjGnD,6C,sBAoGP,SAAS,GACPA,GAEA,IAAKA,IAAiBA,EAAaS,oBACjC,OAAO,EAET,IAAQA,EAAwBT,EAAxBS,oBACR,MACqC,kBAA5BT,EAAaQ,YACpBR,EAAaQ,WAAa,GACI,kBAAvBR,EAAapL,OACpBoL,EAAapL,MAAMhB,OAAS,GACQ,kBAA7B6M,EAAoBJ,MAC3BI,EAAoBJ,KAAKzM,OAAS,GACI,kBAA/B6M,EAAoBH,QAC3BG,EAAoBH,OAAO1M,OAAS,GACI,kBAAjC6M,EAAoBxJ,UAC3BwJ,EAAoBxJ,SAASrD,OAAS,GACC,kBAAhC6M,EAAoBC,SAC3BD,EAAoBC,QAAQ9M,OAAS,GACG,kBAAjC6M,EAAoBE,UAC3BF,EAAoBE,SAAS/M,OAAS,ECtKnC,IAED,GAAoB,2BAEtB,GAAgC,KACpC,SAAS,KAaP,OAZK,KACH,GAAY,iBAPa,8BACJ,GAM+B,SAAAiN,GAKlD,OAAQA,EAAUzO,YAChB,KAAK,EACHyO,EAAUtN,kBAAkB,SAI7B,G,SAIa,G,iFAAf,WACLwN,GADK,qBAAAzL,EAAA,6DAGCgE,EAAM,GAAOyH,GAHd,SAIY,KAJZ,cAIC5O,EAJD,gBAKsBA,EACxBE,YAAY,IACZgB,YAAY,IACZ3C,IAAI4I,GARF,YAKC0G,EALD,kDAWIA,GAXJ,yBAc2B,GAC5Be,EAAqBxK,UAAUqJ,UAf9B,aAcGoB,EAdH,0CAkBK,GAAMD,EAAsBC,GAlBjC,iCAmBMA,GAnBN,6C,+BAyBe,G,mFAAf,WACLD,EACAf,GAFK,mBAAA1K,EAAA,6DAICgE,EAAM,GAAOyH,GAJd,SAKY,KALZ,cAKC5O,EALD,OAMCsI,EAAKtI,EAAGE,YAAY,GAAmB,aANxC,SAOCoI,EAAGpH,YAAY,IAAmBsH,IAAIqF,EAAc1G,GAPrD,uBAQCmB,EAAG1I,SARJ,gCASEiO,GATF,6C,+BAae,G,iFAAf,WACLe,GADK,mBAAAzL,EAAA,6DAGCgE,EAAM,GAAOyH,GAHd,SAIY,KAJZ,cAIC5O,EAJD,OAKCsI,EAAKtI,EAAGE,YAAY,GAAmB,aALxC,SAMCoI,EAAGpH,YAAY,IAAmBwH,OAAOvB,GAN1C,uBAOCmB,EAAG1I,SAPJ,4C,sBAmBP,SAAS,GAAT,GACE,OADyD,EAAzCwE,UACCa,MpBhEZ,IAAM,IAAS,qBACpB,4BACE,mDAFkB,eAGpB,2BACE,iDAJkB,eAKpB,uBACE,yDANkB,eAOpB,qBACE,sEARkB,eASpB,qBACE,oEAVkB,eAWpB,sBACE,4EAZkB,eAapB,yBACE,oGAdkB,eAepB,qCACE,gFAhBkB,eAiBpB,yBACE,sEAlBkB,eAmBpB,2BACE,4DApBkB,eAqBpB,2BACE,0EAtBkB,eAwBpB,sBACE,qEAzBkB,eA0BpB,wBACE,yDA3BkB,eA4BpB,yBACE,6IA7BkB,eA+BpB,0BACE,wEAhCkB,eAiCpB,qBACE,kEAlCkB,eAmCpB,oBAA+B,0CAnCX,eAoCpB,gCACE,yIArCkB,IAmDT,GAAgB,IAAI,IAC/B,YACA,YACA,I,SqBxDoB,G,mFAAf,WACL2J,EACAN,GAFK,yBAAAnL,EAAA,sEAIiB,GAAWyL,GAJ5B,cAICtK,EAJD,OAKCS,EAAO,GAAQuJ,GAEfa,EAAmB,CACvB5R,OAAQ,OACR+G,UACAS,KAAMK,KAAKC,UAAUN,IAVlB,kBAeoBO,MACrB,GAAYsJ,EAAqBxK,WACjC+K,GAjBC,cAeG3M,EAfH,iBAmBkBA,EAASY,OAnB3B,QAmBHiM,EAnBG,+DAqBG,GAAc7L,OAAM,yBAAmC,CAC3D8L,UAAW,EAAF,KAtBR,YA0BDD,EAAajS,MA1BZ,uBA2BGwG,EAAUyL,EAAajS,MAAMwG,QAC7B,GAAcJ,OAAM,yBAAmC,CAC3D8L,UAAW1L,IA7BV,WAiCAyL,EAAa5M,MAjCb,uBAkCG,GAAce,OAAM,4BAlCvB,iCAqCE6L,EAAa5M,OArCf,2D,+BAwCe,G,mFAAf,WACLmM,EACAf,GAFK,yBAAA1K,EAAA,sEAIiB,GAAWyL,GAJ5B,cAICtK,EAJD,OAKCS,EAAO,GAAQ8I,EAAaS,qBAE5BkB,EAAgB,CACpBjS,OAAQ,QACR+G,UACAS,KAAMK,KAAKC,UAAUN,IAVlB,kBAeoBO,MAAM,GAAD,OACvB,GAAYsJ,EAAqBxK,WADV,YACwByJ,EAAapL,OAC/D+M,GAjBC,cAeGhN,EAfH,iBAmBkBA,EAASY,OAnB3B,QAmBHiM,EAnBG,+DAqBG,GAAc7L,OAAM,sBAAgC,CACxD8L,UAAW,EAAF,KAtBR,YA0BDD,EAAajS,MA1BZ,uBA2BGwG,EAAUyL,EAAajS,MAAMwG,QAC7B,GAAcJ,OAAM,sBAAgC,CACxD8L,UAAW1L,IA7BV,WAiCAyL,EAAa5M,MAjCb,uBAkCG,GAAce,OAAM,yBAlCvB,iCAqCE6L,EAAa5M,OArCf,2D,+BAwCe,G,mFAAf,WACLmM,EACAnM,GAFK,uBAAAU,EAAA,sEAIiB,GAAWyL,GAJ5B,cAICtK,EAJD,OAMCoL,EAAqB,CACzBnS,OAAQ,SACR+G,WARG,kBAYoBgB,MAAM,GAAD,OACvB,GAAYsJ,EAAqBxK,WADV,YACwB3B,GAClDiN,GAdC,cAYGlN,EAZH,iBAgBqCA,EAASY,OAhB9C,aAgBGiM,EAhBH,QAiBcjS,MAjBd,uBAkBKwG,EAAUyL,EAAajS,MAAMwG,QAC7B,GAAcJ,OAAM,2BAAqC,CAC7D8L,UAAW1L,IApBZ,gEAwBG,GAAcJ,OAAM,2BAAqC,CAC7D8L,UAAW,EAAF,KAzBR,2D,sBA8BP,SAAS,GAAT,GAA6C,IAAtBhN,EAAsB,EAAtBA,UACrB,gBtB9HsB,6CsB8HtB,qBAA+BA,EAA/B,kB,SAGa,G,iFAAf,iCAAAa,EAAA,6DACEiB,EADF,EACEA,UACAuG,EAFF,EAEEA,cAFF,SAI0BA,EAAc0B,WAJxC,cAIQ1G,EAJR,yBAMS,IAAI1B,QAAQ,CACjB,eAAgB,mBAChBC,OAAQ,mBACR,iBAAkBE,EAAUJ,OAC5B,mDAA6C2B,MAVjD,4C,sBAcA,SAAS,GAAT,GAKsB,IAJpBwI,EAIoB,EAJpBA,OACAD,EAGoB,EAHpBA,KACApJ,EAEoB,EAFpBA,SACA0J,EACoB,EADpBA,SAEMzJ,EAAuB,CAC3B4K,IAAK,CACH7K,WACAoJ,OACAC,WAQJ,OAJIK,IAAa,KACfzJ,EAAK4K,IAAIC,kBAAoBpB,GAGxBzJ,ECvJT,IAAM,GAAsB,O,SAEN,G,iFAAf,WACLgL,GADK,mBAAA5M,EAAA,sEAG0B,GAC7B4M,EAAUE,eACVF,EAAUvB,UALP,cAGC0B,EAHD,OAQC5B,EAA2C,CAC/CE,SAAUuB,EAAUvB,SACpBD,QAASwB,EAAUE,eAAgBE,MACnCrL,SAAUoL,EAAiBpL,SAC3BoJ,KAAM,GAAcgC,EAAiBpJ,OAAO,SAC5CqH,OAAQ,GAAc+B,EAAiBpJ,OAAO,YAb3C,SAgBsB,GAAMiJ,EAAUnB,sBAhBtC,UAgBCf,EAhBD,iDAmBI,GAAYkC,EAAUnB,qBAAsBN,IAnBhD,WAqBF,GAAaT,EAAaS,oBAAsBA,GArB9C,4CAyBK,GACJyB,EAAUnB,qBACVf,EAAapL,OA3Bd,2DA+BDmJ,QAAQ0E,KAAR,MA/BC,iCAkCI,GAAYP,EAAUnB,qBAAuBN,IAlCjD,aAmCMvL,KAAKC,OAAS6K,EAAaQ,WAAa,IAnC9C,0CAqCI,GAAY0B,EAAW,CAC5BtN,MAAOoL,EAAapL,MACpB4L,WAAYtL,KAAKC,MACjBsL,yBAxCC,iCA4CIT,EAAapL,OA5CjB,4D,+BAoDe,G,iFAAf,WACLsN,GADK,iBAAA5M,EAAA,sEAGsB,GAAM4M,EAAUnB,sBAHtC,YAGCf,EAHD,wCAKG,GACJkC,EAAUnB,qBACVf,EAAapL,OAPZ,uBASG,GAASsN,EAAUnB,sBATtB,wBAa0BmB,EAAUE,eAAgBQ,YAAYC,kBAbhE,aAaCR,EAbD,kDAeIA,EAAiBS,eAfrB,kCAmBE,GAnBF,6C,+BAsBQ,G,mFAAf,WACEZ,EACAlC,GAFF,iBAAA1K,EAAA,+EAK+B,GACzB4M,EAAUnB,qBACVf,GAPN,cAKU+C,EALV,OAUUC,EAAmB,+BACpBhD,GAAY,CACfpL,MAAOmO,EACPvC,WAAYtL,KAAKC,QAbvB,SAgBU,GAAM+M,EAAUnB,qBAAsBiC,GAhBhD,gCAiBWD,GAjBX,mDAmBU,GAAoBb,GAnB9B,8E,+BAwBe,G,mFAAf,WACEnB,EACAN,GAFF,iBAAAnL,EAAA,sEAIsB,GAClByL,EACAN,GANJ,cAIQ7L,EAJR,OAQQoL,EAA6B,CACjCpL,QACA4L,WAAYtL,KAAKC,MACjBsL,uBAXJ,SAaQ,GAAMM,EAAsBf,GAbpC,gCAcSA,EAAapL,OAdtB,4C,+BAoBe,G,mFAAf,WACEwN,EACAzB,GAFF,eAAArL,EAAA,sEAI6B8M,EAAeQ,YAAYC,kBAJxD,YAIQI,EAJR,iDAMWA,GANX,gCASSb,EAAeQ,YAAYM,UAAU,CAC1CC,iBAAiB,EAGjBC,qBAAsB,GAAczC,MAbxC,4C,sBAoBA,SAAS,GACP0C,EACAC,GAEA,IAAMC,EAAkBD,EAAe3C,WAAa0C,EAAU1C,SACxD6C,EAAkBF,EAAerM,WAAaoM,EAAUpM,SACxDwM,EAAcH,EAAejD,OAASgD,EAAUhD,KAChDqD,EAAgBJ,EAAehD,SAAW+C,EAAU/C,OAE1D,OAAOiD,GAAmBC,GAAmBC,GAAeC,E,SClK9C,GACdE,GAEA,IAAMC,EAA0B,CAC9BC,KAAMF,EAAgBE,KAEtBC,YAAaH,EAAgBI,aAE7BC,UAAWL,EAAgBM,gBAO7B,OAGF,SACEL,EACAM,GAEA,IAAKA,EAAuBC,aAC1B,OAGFP,EAAQO,aAAe,GAEvB,IAAMC,EAAQF,EAAuBC,aAAcC,MAC7CA,IACJR,EAAQO,aAAcC,MAAQA,GAGhC,IAAMnN,EAAOiN,EAAuBC,aAAclN,KAC5CA,IACJ2M,EAAQO,aAAclN,KAAOA,GAG/B,IAAMoN,EAAQH,EAAuBC,aAAcE,MAC7CA,IACJT,EAAQO,aAAcE,MAAQA,GA7BhC,CAA6BT,EAASD,GAiCxC,SACEC,EACAM,GAEA,IAAKA,EAAuBjK,KAC1B,OAGF2J,EAAQ3J,KAAOiK,EAAuBjK,KAxCtC,CAAqB2J,EAASD,GA2ChC,SACEC,EACAM,GAEA,IAAKA,EAAuBM,WAC1B,OAGFZ,EAAQY,WAAa,GAErB,IAAMC,EAAOP,EAAuBM,WAAYC,KAC1CA,IACJb,EAAQY,WAAYC,KAAOA,GAI7B,IAAMC,EAAiBR,EAAuBM,WAAYG,gBACpDD,IACJd,EAAQY,WAAYE,eAAiBA,GA5DvC,CAAoBd,EAASD,GAEtBC,E,ScjBO,GAAM7L,GACpB,OAAO,IAAI/I,SAAc,SAAAC,GACvB+I,WAAW/I,EAAS8I,M,SZuIFuQ,G,mFAAf,WACLrG,EACA0B,GAFK,eAAAtO,EAAA,kEAIYkT,GAJZ,KAKH5E,EALG,SAMG1B,EAAUnB,qBAAqBjE,cAAcyB,QANhD,mBAICkK,GAJD,mBASLC,GAAyBxG,EAAWuG,GAT/B,4C,sBAYP,SAASD,GACP5E,EACA5M,G,QAEMyR,EAAW,GAkCjB,OA9BM7E,EAAgBE,OACpB2E,EAASE,eAAiB/E,EAAgBE,MAGtCF,EAAgBM,iBACpBuE,EAAS1B,WAAanD,EAAgBM,gBAGxCuE,EAASG,YAAc5R,EAEjB4M,EAAgBQ,aACpBqE,EAASI,aAAepK,GAAYqK,qBAAqBC,WAEzDN,EAASI,aAAepK,GAAYuK,aAAaD,WAGnDN,EAASQ,a1BnJqB,G0BmJWF,WACzCN,EAASS,aAAe5Q,KAAK6Q,OAAOzV,QAAQ,gBAAiB,IAEvDkQ,EAAgBI,eACpByE,EAASzE,aAAeJ,EAAgBI,cAG1CyE,EAAS3V,M1BzJ4B,G0ByJIiW,YAET,QAA1B,EAAAnF,EAAgBa,kBAAU,eAAEG,mBAChC6D,EAAS7D,gBAA4C,QAA1B,EAAAhB,EAAgBa,kBAAU,eAAEG,iBAIlD6D,EAGT,SAASC,GACPxG,EACAuG,GAEA,IAAM3B,EAAW,GAGjBA,EAASsC,cAAgB/B,KAAKC,MAAMpS,KAAKC,OAAO4T,WAChDjC,EAASuC,6BAA+B9R,KAAKC,UAAUiR,GAGvDvG,EAAUwD,UAAUtR,KAAK0S,G,SAcX,GAAc9B,EAAYC,GAExC,IADA,IAAMC,EAAc,GACX3F,EAAI,EAAGA,EAAIyF,EAAGpR,OAAQ2L,IAC7B2F,EAAY9Q,KAAK4Q,EAAGG,OAAO5F,IACvBA,EAAI0F,EAAGrR,QACTsR,EAAY9Q,KAAK6Q,EAAGE,OAAO5F,IAI/B,OAAO2F,EAAYE,KAAK,I,8CarMnB,WACLtS,EACAoP,GAFK,mBAAA5M,EAAA,yDAIuBxC,EAApBwW,gBAJH,gCAOG,GAAoBpH,GAPvB,wDAWsB,GAAMA,EAAUnB,sBAXtC,cAWCf,EAXD,iBAYC,GAAoBkC,GAZrB,eAcLA,EAAUvB,SACmC,QAA3C,EAAiC,QAAjC,EAAY,OAAZX,QAAY,IAAZA,OAAY,EAAZA,EAAcS,2BAAmB,eAAEE,gBAAQ,QAAI,GAf5C,UAgBC,GAAiBuB,GAhBlB,6C,oEAmBA,WACLpP,EACAoP,GAFK,mBAAA5M,EAAA,yDAICsO,EAAkB2F,GAA0BzW,GAJ7C,qDAWDoP,EAAUqD,yCAXT,gCAYGgD,GAASrG,EAAW0B,GAZvB,uBAgBoB4F,KAhBpB,WAiBDC,GADEC,EAhBD,kDAkBIC,GAAoCD,EAAY9F,IAlBpD,YAsBCA,EAAgBQ,aAtBjB,kCAuBGwF,GAAiBC,GAAoBjG,IAvBxC,WA0BA1B,EA1BA,mDA8BCA,EAAUsD,6BACR3B,EAAU,GAAmBD,GAEiB,oBAAzC1B,EAAUsD,2BACnBtD,EAAUsD,2BAA2B3B,GAErC3B,EAAUsD,2BAA2BmC,KAAK9D,IApCzC,6C,oEAyCA,WACL/Q,GADK,2BAAAwC,EAAA,yDAGCsO,EACoB,QAAxB,EAAkB,QAAlB,EAAA9Q,EAAMsR,oBAAY,eAAElK,YAAI,uBAJrB,qDAQMpH,EAAMgX,OARZ,oDAeLhX,EAAMiX,2BACNjX,EAAMsR,aAAahK,QAGbsK,EAAOsF,GAAQpG,GAnBhB,sDAyBCqG,EAAM,IAAIC,IAAIxF,EAAMpM,KAAK6R,SAASC,MAClCC,EAAY,IAAIH,IAAI5R,KAAK6R,SAAShB,QAEpCc,EAAIK,OAASD,EAAUC,KA5BtB,oEAgCcC,GAAgBN,GAhC9B,WAgCDO,EAhCC,yCAmCYlS,KAAKmS,QAAQC,WAAWhG,GAnCpC,eAmCH8F,EAnCG,iBAuCG,GAAM,KAvCT,iDAyCYA,EAAOG,QAzCnB,QAyCHH,EAzCG,kBA4CAA,EA5CA,0DAiDL5G,EAAgB+C,YAAc,GAAYY,qBAC1C3D,EAAgB8D,qBAAsB,EAlDjC,kBAmDE8C,EAAO9Q,YAAYkK,IAnDrB,6C,sBAsDP,SAASiG,GACPjG,GAEA,IAAMgH,EAAsB,iBACtBhH,EAAgBQ,cAUtB,OAJAwG,EAAuB1Q,KAAvB,eACGoO,GAAU1E,GAGNgH,EAGT,SAASrB,GAAT,GAEY,IADVrP,EACU,EADVA,KAEA,IAAKA,EACH,OAAO,KAGT,IACE,OAAOA,EAAK3E,OACZ,MAAOsV,GAEP,OAAO,M,SAQIN,G,iFAAf,WAA+BN,GAA/B,uBAAA3U,EAAA,sEAC2BkU,KAD3B,OACQE,EADR,qBAGuBA,GAHvB,4DAGac,EAHb,QAIUM,EAAY,IAAIZ,IAAIM,EAAOP,IAAK3R,KAAK6R,SAASC,MAEhDH,EAAIK,OAASQ,EAAUR,KAN/B,0CAOaE,GAPb,wKAWS,MAXT,iE,sBAkBA,SAASf,GAAkBC,GACzB,OAAOA,EAAWqB,MAChB,SAAAP,GAAM,MACuB,YAA3BA,EAAOQ,kBAGNR,EAAOP,IAAIgB,WAAW,0BAI7B,SAAStB,GACPD,EACA9F,GAEAA,EAAgB8D,qBAAsB,EACtC9D,EAAgB+C,YAAc,GAAYa,cAHH,oBAKlBkC,GALkB,IAKvC,2BAAiC,SACxBhQ,YAAYkK,IANkB,+BAUzC,SAAS4F,KACP,OAAOlR,KAAKmS,QAAQS,SAAS,CAC3BC,KAAM,SACNC,qBAAqB,IAKzB,SAASxB,GACPyB,G,MAIQC,EAAYD,EAAZC,QACAC,EAAejF,aAAfiF,WAOR,OANID,GAAWC,GAAcD,EAAQ1X,OAAS2X,GAC5CxN,QAAQ0E,KAAR,qCACgC8I,EADhC,2DAKKjT,KAAKkT,aAAa5B,iBACuB,QAAjC,EAAAyB,EAA4BhH,aAAK,QAAI,GAClDgH,GAIJ,SAASrB,GAAQnG,G,UdlPgB3J,EcoPzBwK,EAA+B,QAAxB,EAAkB,QAAlB,EAAAb,EAAQY,kBAAU,eAAEC,YAAI,QAAwB,QAApB,EAAAb,EAAQO,oBAAY,eAAEqH,aAC/D,OAAI/G,IdnPmB,kBAFQxK,EcyPV2J,EAAQ3J,OdvPQA,GzBMJ,oByBNmCA,EcyP3D5B,KAAK6R,SAAShB,OAEd,MxBzNX,SAAS,GAAqB9D,GAC5B,OAAO,GAAc1P,OAAM,4BAAsC,CAC/D0P,cWrBqB,GACvB,mCACA,mCAGwB,GACxB,uBACA,uB,ICjBW,G,WAoBX,WACElH,EACArB,EACAwI,GAA0D,oBAhB5D,KAAAC,0CAAoD,EAEpD,KAAAC,2BAGW,KAEX,KAAAC,iBACE,KAEF,KAAAC,UAAwB,GACxB,KAAAC,qBAA+B,EAO7B,IAAMpP,E,SZ7BuB4H,GAC/B,IAAKA,IAAQA,EAAIyH,QACf,MAAM,GAAqB,4BAG7B,IAAKzH,EAAI1L,KACP,MAAM,GAAqB,YAY7B,IARA,IAOQmT,EAAYzH,EAAZyH,QACR,MARyD,CACvD,YACA,SACA,QACA,qBAIF,eAAkC,CAA7B,IAAMC,EAAO,KAChB,IAAKD,EAAQC,GACX,MAAM,GAAqBA,GAI/B,MAAO,CACL3M,QAASiF,EAAI1L,KACbgC,UAAWmR,EAAQnR,UACnB0B,OAAQyP,EAAQzP,OAChBiB,MAAOwO,EAAQxO,MACfwI,SAAUgG,EAAQE,mBYAA,CAAiB3H,GAEnCxN,KAAKoQ,qBAAuB,CAC1B5C,MACA5H,YACAuG,gBACAwI,qB,2CAIJ,WACE,OAAOrW,QAAQC,c,KOKbwc,GAAmD,SACvDxN,GAEA,IAAMgE,EAAY,IAAI,GACpBhE,EAAUE,YAAY,OAAO5B,eAC7B0B,EAAUE,YAAY,0BAA0B5B,eAChD0B,EAAUE,YAAY,uBAaxB,OAVA9F,KAAKyP,iBAAiB,QAAQ,SAAA9N,GAC5BA,EAAE0R,U,8CAAUC,CAAO3R,EAAGiI,OAExB5J,KAAKyP,iBAAiB,0BAA0B,SAAA9N,GAC9CA,EAAE0R,U,8CAAUE,CAAY5R,EAAGiI,OAE7B5J,KAAKyP,iBAAiB,qBAAqB,SAAA9N,GACzCA,EAAE0R,U,4CAAUG,CAAoB7R,OAG3BiI,G,SE6EO,GACdA,EACAkG,GAGA,O,SI7IAlG,EACAkG,GAEA,QAAsB/T,IAAlBiE,KAAKyT,SACP,MAAM,GAAcpW,OAAM,wBAK5B,OAFAuM,EAAUsD,2BAA6B4C,EAEhC,WACLlG,EAAUsD,2BAA6B,MJmIlCwG,CADP9J,EAAY,YAAmBA,GAC4BkG,GF3D3D,6BACE,IAAI,IAAU,eAAgBsD,GAAkB,W,IOrBvC,G,WACX,WAAqBvN,EAAyB8N,GAAoB,oBAA7C,KAAA9N,MAAyB,KAAA8N,YAC5Ctb,KAAKwN,IAAMA,EACXxN,KAAKsb,UAAYA,E,mFAGnB,WAAerG,GAAf,SAAAtQ,EAAA,+EAIS,GAAS3E,KAAKsb,UAAWrG,IAJlC,gD,uHAOA,sBAAAtQ,EAAA,+EACS,GAAY3E,KAAKsb,YAD1B,gD,6EAIA,SACE7D,GAEA,OAAO,GAAUzX,KAAKsb,UAAW7D,K,iCAGnC,SACEA,GAEA,OAAO,GAAoBzX,KAAKsb,UAAW7D,O,KCpFzC8D,GAA8D,SAClEhO,GAEA,OAAI5F,MAAQ,6BAA8BA,KAEjC,IAAI,GACT4F,EAAUE,YAAY,cAAc5B,eACpC0B,EAAUE,YAAY,gBAAgB5B,gBAIjC,IAAI,GACT0B,EAAUE,YAAY,cAAc5B,eACpC0B,EAAUE,YAAY,aAAa5B,iBAKnC2P,GAAoB,CACxBC,Y,WDDA,OAAI9T,MAAQ,6BAA8BA,KA+BxC,cAAeA,MACD,OAAd1F,WACA,gBAAiB0F,MACjB,iBAAkBA,MAClB8N,0BAA0BxX,UAAUyd,eAAe,qBACnDC,iBAAiB1d,UAAUyd,eAAe,UAtB1C,cAAeE,QACD,OAAd3Z,WACA6I,UAAU+Q,eACV,kBAAmB/Q,WACnB,gBAAiB8Q,QACjB,iBAAkBA,QAClB,UAAWA,QACXnG,0BAA0BxX,UAAUyd,eAAe,qBACnDC,iBAAiB1d,UAAUyd,eAAe,YCjB3C,IAAgCI,SAASC,kBACxC,IAAI,IACF,mBACAR,GAAsB,UAEtBS,gBAAgBR,KzBpCtB,IAASS,gB","file":"static/js/7.937f1bc5.chunk.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.idb = {}));\n}(this, function (exports) { 'use strict';\n\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      // Don't create iterateKeyCursor if openKeyCursor doesn't exist.\n      if (!(funcName in Constructor.prototype)) return;\n\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  function openDb(name, version, upgradeCallback) {\n    var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n    var request = p.request;\n\n    if (request) {\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n    }\n\n    return p.then(function(db) {\n      return new DB(db);\n    });\n  }\n\n  function deleteDb(name) {\n    return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n  }\n\n  exports.openDb = openDb;\n  exports.deleteDb = deleteDb;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  appConfig: AppConfig,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || ((self as unknown) as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, openDb } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDB => {\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDB.oldVersion) {\n        case 0:\n          upgradeDB.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = await objectStore.get(key);\n  await objectStore.put(value, key);\n  await tx.complete;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = await store.get(key);\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.complete;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.complete;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  appConfig: AppConfig\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      appConfig,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  appConfig: AppConfig,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      appConfig,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(appConfig)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  appConfig: AppConfig,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      appConfig,\n      installationEntry\n    );\n    return set(appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(appConfig);\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const {\n      installationEntry,\n      registrationPromise\n    } = await getInstallationEntry(appConfig);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, platformLoggerProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If platform logger exists, add the platform info string to the header.\n  const platformLogger = platformLoggerProvider.getImmediate({\n    optional: true\n  });\n  if (platformLogger) {\n    headers.append('x-firebase-client', platformLogger.getPlatformInfoString());\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken = extractAuthTokenInfoFromResponse(\n      responseValue\n    );\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(installations: Installations): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl.appConfig\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: Installations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl.appConfig);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  appConfig: AppConfig\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(appConfig);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nconst publicFactory: InstanceFactory<'installations'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const platformLoggerProvider = _getProvider(app, 'platform-logger');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    platformLoggerProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { name, version } from '../package.json';\n\nimport firebase from '@firebase/app-compat';\nimport { registerMessagingCompat } from './registerMessagingCompat';\nimport { MessagingCompat } from './messaging-compat';\n\nregisterMessagingCompat();\nfirebase.registerVersion(name, version);\n\n/**\n * Define extension behavior of `registerMessaging`\n */\ndeclare module '@firebase/app-compat' {\n  interface FirebaseNamespace {\n    messaging: {\n      (app?: FirebaseApp): MessagingCompat;\n      isSupported(): boolean;\n    };\n  }\n  interface FirebaseApp {\n    messaging(): MessagingCompat;\n  }\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n  // eslint-disable-next-line camelcase\n  fcm_message_id: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDb, openDb } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (indexedDB as {\n      databases(): Promise<Array<{ name: string; version: number }>>;\n    }).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDb(OLD_DB_NAME, OLD_DB_VERSION, async db => {\n    if (db.oldVersion < 2) {\n      // Database too old, skip migration.\n      return;\n    }\n\n    if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n      // Database did not exist. Nothing to do.\n      return;\n    }\n\n    const objectStore = db.transaction.objectStore(OLD_OBJECT_STORE_NAME);\n    const value = await objectStore.index('fcmSenderId').get(senderId);\n    await objectStore.clear();\n\n    if (!value) {\n      // No entry in the database, nothing to migrate.\n      return;\n    }\n\n    if (db.oldVersion === 2) {\n      const oldDetails = value as V2TokenDetails;\n\n      if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n        return;\n      }\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime ?? Date.now(),\n        subscriptionOptions: {\n          auth: oldDetails.auth,\n          p256dh: oldDetails.p256dh,\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey:\n            typeof oldDetails.vapidKey === 'string'\n              ? oldDetails.vapidKey\n              : arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 3) {\n      const oldDetails = value as V3TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    } else if (db.oldVersion === 4) {\n      const oldDetails = value as V4TokenDetails;\n\n      tokenDetails = {\n        token: oldDetails.fcmToken,\n        createTime: oldDetails.createTime,\n        subscriptionOptions: {\n          auth: arrayToBase64(oldDetails.auth),\n          p256dh: arrayToBase64(oldDetails.p256dh),\n          endpoint: oldDetails.endpoint,\n          swScope: oldDetails.swScope,\n          vapidKey: arrayToBase64(oldDetails.vapidKey)\n        }\n      };\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDb(OLD_DB_NAME);\n  await deleteDb('fcm_vapid_details_db');\n  await deleteDb('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DB, deleteDb, openDb } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\nlet dbPromise: Promise<DB> | null = null;\nfunction getDbPromise(): Promise<DB> {\n  if (!dbPromise) {\n    dbPromise = openDb(DATABASE_NAME, DATABASE_VERSION, upgradeDb => {\n      // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n      // because if there are multiple versions between the old version and the current version, we\n      // want ALL the migrations that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (upgradeDb.oldVersion) {\n        case 0:\n          upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key);\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.complete;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.complete;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDb(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: err\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: err\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription = await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcm_message_id\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.fcmOptions) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link = messagePayloadInternal.fcmOptions!.link;\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions!.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst FIRELOG_ENDPOINT = _mergeStrings(\n  'hts/frbslgigp.ogepscmv/ieo/eaylg',\n  'tp:/ieaeogn-agolai.o/1frlglgc/o'\n);\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          FIRELOG_ENDPOINT.concat('?key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcm_message_id) {\n    fcmEvent.message_id = internalPayload.fcm_message_id;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_SW_PATH, DEFAULT_SW_SCOPE } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function registerDefaultSw(\n  messaging: MessagingService\n): Promise<void> {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(\n      DEFAULT_SW_PATH,\n      {\n        scope: DEFAULT_SW_SCOPE\n      }\n    );\n\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n  } catch (e) {\n    throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n      browserErrorMessage: e.message\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { registerDefaultSw } from './registerDefaultSw';\n\nexport async function updateSwReg(\n  messaging: MessagingService,\n  swRegistration?: ServiceWorkerRegistration | undefined\n): Promise<void> {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n  }\n\n  messaging.swRegistration = swRegistration;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\n\nexport async function updateVapidKey(\n  messaging: MessagingService,\n  vapidKey?: string | undefined\n): Promise<void> {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { getTokenInternal } from '../internals/token-manager';\nimport { updateSwReg } from '../helpers/updateSwReg';\nimport { updateVapidKey } from '../helpers/updateVapidKey';\nimport { GetTokenOptions } from '../interfaces/public-types';\n\nexport async function getToken(\n  messaging: MessagingService,\n  options?: GetTokenOptions\n): Promise<string> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  await updateVapidKey(messaging, options?.vapidKey);\n  await updateSwReg(messaging, options?.serviceWorkerRegistration);\n\n  return getTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function logToScion(\n  messaging: MessagingService,\n  messageType: MessageType,\n  data: ConsoleMessageData\n): Promise<void> {\n  const eventType = getEventType(messageType);\n  const analytics = await messaging.firebaseDependencies.analyticsProvider.get();\n  analytics.logEvent(eventType, {\n    /* eslint-disable camelcase */\n    message_id: data[CONSOLE_CAMPAIGN_ID],\n    message_name: data[CONSOLE_CAMPAIGN_NAME],\n    message_time: data[CONSOLE_CAMPAIGN_TIME],\n    message_device_time: Math.floor(Date.now() / 1000)\n    /* eslint-enable camelcase */\n  });\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { CONSOLE_CAMPAIGN_ANALYTICS_ENABLED } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { logToScion } from '../helpers/logToScion';\n\nexport async function messageEventListener(\n  messaging: MessagingService,\n  event: MessageEvent\n): Promise<void> {\n  const internalPayload = event.data as MessagePayloadInternal;\n\n  if (!internalPayload.isFirebaseMessaging) {\n    return;\n  }\n\n  if (\n    messaging.onMessageHandler &&\n    internalPayload.messageType === MessageType.PUSH_RECEIVED\n  ) {\n    if (typeof messaging.onMessageHandler === 'function') {\n      messaging.onMessageHandler(externalizePayload(internalPayload));\n    } else {\n      messaging.onMessageHandler.next(externalizePayload(internalPayload));\n    }\n  }\n\n  // Log to Scion if applicable\n  const dataPayload = internalPayload.data;\n  if (\n    isConsoleMessage(dataPayload) &&\n    dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n  ) {\n    await logToScion(messaging, internalPayload.messageType!, dataPayload);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { deleteTokenInternal } from '../internals/token-manager';\nimport { registerDefaultSw } from '../helpers/registerDefaultSw';\n\nexport async function deleteToken(\n  messaging: MessagingService\n): Promise<boolean> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  return deleteTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function setDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, FCM_MSG } from '../util/constants';\nimport {\n  MessagePayloadInternal,\n  MessageType,\n  NotificationPayloadInternal\n} from '../interfaces/internal-message-payload';\nimport {\n  NotificationEvent,\n  PushEvent,\n  PushSubscriptionChangeEvent,\n  ServiceWorkerGlobalScope,\n  WindowClient\n} from '../util/sw-types';\nimport {\n  deleteTokenInternal,\n  getTokenInternal\n} from '../internals/token-manager';\n\nimport { MessagingService } from '../messaging-service';\nimport { dbGet } from '../internals/idb-manager';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { sleep } from '../helpers/sleep';\nimport { stageLog } from '../helpers/logToFirelog';\n\n// Let TS know that this is a service worker\ndeclare const self: ServiceWorkerGlobalScope;\n\nexport async function onSubChange(\n  event: PushSubscriptionChangeEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const { newSubscription } = event;\n  if (!newSubscription) {\n    // Subscription revoked, delete token\n    await deleteTokenInternal(messaging);\n    return;\n  }\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  await deleteTokenInternal(messaging);\n\n  messaging.vapidKey =\n    tokenDetails?.subscriptionOptions?.vapidKey ?? DEFAULT_VAPID_KEY;\n  await getTokenInternal(messaging);\n}\n\nexport async function onPush(\n  event: PushEvent,\n  messaging: MessagingService\n): Promise<void> {\n  const internalPayload = getMessagePayloadInternal(event);\n  if (!internalPayload) {\n    // Failed to get parsed MessagePayload from the PushEvent. Skip handling the push.\n    return;\n  }\n\n  // log to Firelog with user consent\n  if (messaging.deliveryMetricsExportedToBigQueryEnabled) {\n    await stageLog(messaging, internalPayload);\n  }\n\n  // foreground handling: eventually passed to onMessage hook\n  const clientList = await getClientList();\n  if (hasVisibleClients(clientList)) {\n    return sendMessagePayloadInternalToWindows(clientList, internalPayload);\n  }\n\n  // background handling: display if possible and pass to onBackgroundMessage hook\n  if (!!internalPayload.notification) {\n    await showNotification(wrapInternalPayload(internalPayload));\n  }\n\n  if (!messaging) {\n    return;\n  }\n\n  if (!!messaging.onBackgroundMessageHandler) {\n    const payload = externalizePayload(internalPayload);\n\n    if (typeof messaging.onBackgroundMessageHandler === 'function') {\n      messaging.onBackgroundMessageHandler(payload);\n    } else {\n      messaging.onBackgroundMessageHandler.next(payload);\n    }\n  }\n}\n\nexport async function onNotificationClick(\n  event: NotificationEvent\n): Promise<void> {\n  const internalPayload: MessagePayloadInternal =\n    event.notification?.data?.[FCM_MSG];\n\n  if (!internalPayload) {\n    return;\n  } else if (event.action) {\n    // User clicked on an action button. This will allow developers to act on action button clicks\n    // by using a custom onNotificationClick listener that they define.\n    return;\n  }\n\n  // Prevent other listeners from receiving the event\n  event.stopImmediatePropagation();\n  event.notification.close();\n\n  // Note clicking on a notification with no link set will focus the Chrome's current tab.\n  const link = getLink(internalPayload);\n  if (!link) {\n    return;\n  }\n\n  // FM should only open/focus links from app's origin.\n  const url = new URL(link, self.location.href);\n  const originUrl = new URL(self.location.origin);\n\n  if (url.host !== originUrl.host) {\n    return;\n  }\n\n  let client = await getWindowClient(url);\n\n  if (!client) {\n    client = await self.clients.openWindow(link);\n\n    // Wait three seconds for the client to initialize and set up the message handler so that it\n    // can receive the message.\n    await sleep(3000);\n  } else {\n    client = await client.focus();\n  }\n\n  if (!client) {\n    // Window Client will not be returned if it's for a third party origin.\n    return;\n  }\n\n  internalPayload.messageType = MessageType.NOTIFICATION_CLICKED;\n  internalPayload.isFirebaseMessaging = true;\n  return client.postMessage(internalPayload);\n}\n\nfunction wrapInternalPayload(\n  internalPayload: MessagePayloadInternal\n): NotificationPayloadInternal {\n  const wrappedInternalPayload: NotificationPayloadInternal = {\n    ...(internalPayload.notification as unknown as NotificationPayloadInternal)\n  };\n\n  // Put the message payload under FCM_MSG name so we can identify the notification as being an FCM\n  // notification vs a notification from somewhere else (i.e. normal web push or developer generated\n  // notification).\n  wrappedInternalPayload.data = {\n    [FCM_MSG]: internalPayload\n  };\n\n  return wrappedInternalPayload;\n}\n\nfunction getMessagePayloadInternal({\n  data\n}: PushEvent): MessagePayloadInternal | null {\n  if (!data) {\n    return null;\n  }\n\n  try {\n    return data.json();\n  } catch (err) {\n    // Not JSON so not an FCM message.\n    return null;\n  }\n}\n\n/**\n * @param url The URL to look for when focusing a client.\n * @return Returns an existing window client or a newly opened WindowClient.\n */\nasync function getWindowClient(url: URL): Promise<WindowClient | null> {\n  const clientList = await getClientList();\n\n  for (const client of clientList) {\n    const clientUrl = new URL(client.url, self.location.href);\n\n    if (url.host === clientUrl.host) {\n      return client;\n    }\n  }\n\n  return null;\n}\n\n/**\n * @returns If there is currently a visible WindowClient, this method will resolve to true,\n * otherwise false.\n */\nfunction hasVisibleClients(clientList: WindowClient[]): boolean {\n  return clientList.some(\n    client =>\n      client.visibilityState === 'visible' &&\n      // Ignore chrome-extension clients as that matches the background pages of extensions, which\n      // are always considered visible for some reason.\n      !client.url.startsWith('chrome-extension://')\n  );\n}\n\nfunction sendMessagePayloadInternalToWindows(\n  clientList: WindowClient[],\n  internalPayload: MessagePayloadInternal\n): void {\n  internalPayload.isFirebaseMessaging = true;\n  internalPayload.messageType = MessageType.PUSH_RECEIVED;\n\n  for (const client of clientList) {\n    client.postMessage(internalPayload);\n  }\n}\n\nfunction getClientList(): Promise<WindowClient[]> {\n  return self.clients.matchAll({\n    type: 'window',\n    includeUncontrolled: true\n    // TS doesn't know that \"type: 'window'\" means it'll return WindowClient[]\n  }) as Promise<WindowClient[]>;\n}\n\nfunction showNotification(\n  notificationPayloadInternal: NotificationPayloadInternal\n): Promise<void> {\n  // Note: Firefox does not support the maxActions property.\n  // https://developer.mozilla.org/en-US/docs/Web/API/notification/maxActions\n  const { actions } = notificationPayloadInternal;\n  const { maxActions } = Notification;\n  if (actions && maxActions && actions.length > maxActions) {\n    console.warn(\n      `This browser only supports ${maxActions} actions. The remaining actions will not be displayed.`\n    );\n  }\n\n  return self.registration.showNotification(\n    /* title= */ notificationPayloadInternal.title ?? '',\n    notificationPayloadInternal\n  );\n}\n\nfunction getLink(payload: MessagePayloadInternal): string | null {\n  // eslint-disable-next-line camelcase\n  const link = payload.fcmOptions?.link ?? payload.notification?.click_action;\n  if (link) {\n    return link;\n  }\n\n  if (isConsoleMessage(payload.data)) {\n    // Notification created in the Firebase Console. Redirect to origin.\n    return self.location.origin;\n  } else {\n    return null;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onBackgroundMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (self.document !== undefined) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_SW);\n  }\n\n  messaging.onBackgroundMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onBackgroundMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FirebaseApp as AppCompat,\n  _FirebaseService\n} from '@firebase/app-compat';\nimport {\n  Messaging,\n  MessagePayload,\n  deleteToken,\n  getToken,\n  onMessage\n} from '@firebase/messaging';\nimport { NextFn, Observer, Unsubscribe } from '@firebase/util';\n\nimport { onBackgroundMessage } from '@firebase/messaging/sw';\n\nexport interface MessagingCompat {\n  getToken(options?: {\n    vapidKey?: string;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n  }): Promise<string>;\n\n  deleteToken(): Promise<boolean>;\n\n  onMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe;\n\n  onBackgroundMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe;\n}\n\nexport function isSupported(): boolean {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // Running in ServiceWorker context\n    return isSwSupported();\n  } else {\n    // Assume we are in the window context.\n    return isWindowSupported();\n  }\n}\n\n/**\n * Checks to see if the required APIs exist.\n */\nfunction isWindowSupported(): boolean {\n  return (\n    'indexedDB' in window &&\n    indexedDB !== null &&\n    navigator.cookieEnabled &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks to see if the required APIs exist within SW Context.\n */\nfunction isSwSupported(): boolean {\n  return (\n    'indexedDB' in self &&\n    indexedDB !== null &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\nexport class MessagingCompatImpl implements MessagingCompat, _FirebaseService {\n  constructor(readonly app: AppCompat, readonly _delegate: Messaging) {\n    this.app = app;\n    this._delegate = _delegate;\n  }\n\n  async getToken(options?: {\n    vapidKey?: string;\n    serviceWorkerRegistration?: ServiceWorkerRegistration;\n  }): Promise<string> {\n    return getToken(this._delegate, options);\n  }\n\n  async deleteToken(): Promise<boolean> {\n    return deleteToken(this._delegate);\n  }\n\n  onMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe {\n    return onMessage(this._delegate, nextOrObserver);\n  }\n\n  onBackgroundMessage(\n    nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n  ): Unsubscribe {\n    return onBackgroundMessage(this._delegate, nextOrObserver);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport { MessagingCompatImpl, isSupported } from './messaging-compat';\nimport firebase, { _FirebaseNamespace } from '@firebase/app-compat';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'messaging-compat': MessagingCompatImpl;\n  }\n}\n\nconst messagingCompatFactory: InstanceFactory<'messaging-compat'> = (\n  container: ComponentContainer\n) => {\n  if (self && 'ServiceWorkerGlobalScope' in self) {\n    // in sw\n    return new MessagingCompatImpl(\n      container.getProvider('app-compat').getImmediate(),\n      container.getProvider('messaging-sw').getImmediate()\n    );\n  } else {\n    // in window\n    return new MessagingCompatImpl(\n      container.getProvider('app-compat').getImmediate(),\n      container.getProvider('messaging').getImmediate()\n    );\n  }\n};\n\nconst NAMESPACE_EXPORTS = {\n  isSupported\n};\n\nexport function registerMessagingCompat(): void {\n  (firebase as _FirebaseNamespace).INTERNAL.registerComponent(\n    new Component(\n      'messaging-compat',\n      messagingCompatFactory,\n      ComponentType.PUBLIC\n    ).setServiceProps(NAMESPACE_EXPORTS)\n  );\n}\n"],"sourceRoot":""}