{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/react-feather/dist/icons/plus-circle.js","views/hbon/quizzes/QuizListView/Header.js","views/hbon/quizzes/QuizListView/Results.js","api/hbon_quiz.js","views/hbon/quizzes/QuizListView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","PlusCircle","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","propTypes","PropTypes","string","oneOfType","number","displayName","useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","Header","className","classes","Grid","clsx","container","justify","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","to","component","RouterLink","Typography","Button","startIcon","SvgIcon","tabs","label","sortOptions","descendingComparator","a","b","orderBy","applySort","quizzes","sort","split","comparator","order","getComparator","stabilizedThis","map","el","index","queryField","bulkOperations","position","bulkActions","paddingLeft","paddingRight","marginTop","zIndex","backgroundColor","palette","background","bulkAction","avatar","marginRight","Results","useState","currentTab","setCurrentTab","selectedquizzes","setSelectedquizzes","page","setPage","limit","setLimit","query","setQuery","setSort","hasAcceptedMarketing","isProspect","isReturning","filters","setFilters","handleSelectAllquizzes","event","checked","quiz","id","filteredquizzes","filter","matches","containsQuery","forEach","property","toLowerCase","includes","applyFilters","paginatedquizzes","slice","applyPagination","enableBulkOperations","selectedSomequizzes","selectedAllquizzes","Card","Tabs","onChange","updatedFilters","scrollButtons","textColor","tab","Tab","Divider","Box","p","minHeight","display","alignItems","TextField","InputProps","startAdornment","InputAdornment","persist","placeholder","flexGrow","name","select","SelectProps","native","option","Checkbox","indeterminate","minWidth","Table","TableHead","TableRow","TableCell","padding","align","TableBody","isquizSelected","hover","selected","quizId","prevSelected","desc","catalog","IconButton","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","rowsPerPage","rowsPerPageOptions","defaultProps","app","firestore","listQuizes","teacherid","collection","doc","get","querySnapshot","docs","data","console","log","dark","paddingTop","paddingBottom","QuizListView","isMountedRef","setQuizzes","user","useAuth","getQuizzes","useCallback","userId","error","Page","title","Container","maxWidth","mt"],"mappings":"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","file":"static/js/101.a2e2e5d2.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar PlusCircle = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"12\",\n    cy: \"12\",\n    r: \"10\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"12\",\n    y1: \"8\",\n    x2: \"12\",\n    y2: \"16\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"8\",\n    y1: \"12\",\n    x2: \"16\",\n    y2: \"12\"\n  }));\n});\nPlusCircle.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nPlusCircle.displayName = 'PlusCircle';\nexport default PlusCircle;","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { PlusCircle as PlusCircleIcon } from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid className={clsx(classes.root, className)} container justify=\"space-between\" spacing={3}{...rest}>\n      <Grid item>\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\"/>} aria-label=\"breadcrumb\">\n          <Link variant=\"body1\" color=\"inherit\" to=\"/teacher/management/classes\" component={RouterLink}>\n            Trang chủ\n          </Link>\n          <Link variant=\"body1\" color=\"inherit\" to=\"#\" component={RouterLink}>\n            Quản lý\n          </Link>\n          <Typography variant=\"body1\" color=\"textPrimary\">\n            Quiz của tôi\n          </Typography>\n        </Breadcrumbs>\n\n        <Typography variant=\"h3\" color=\"textPrimary\">\n          Danh sách quiz của tôi\n        </Typography>\n      </Grid>\n      <Grid item>\n        <Link to=\"/teacher/management/quizzes/create\" component={RouterLink}>\n          <Button color=\"secondary\" variant=\"contained\" startIcon={<SvgIcon fontSize=\"small\"><PlusCircleIcon/></SvgIcon>}>\n            Thêm Quiz\n          </Button>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  Divider,\n  IconButton,\n  InputAdornment,\n  SvgIcon,\n  Tab,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Tabs,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport {\n  Edit as EditIcon,\n  ArrowRight as ArrowRightIcon,\n  Search as SearchIcon\n} from 'react-feather';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\n\nconst tabs = [\n  {\n    value: 'all',\n    label: 'Tất cả'\n  }\n];\n\nconst sortOptions = [\n  {\n    value: 'updatedAt|desc',\n    label: 'Last update (newest first)'\n  },\n  {\n    value: 'updatedAt|asc',\n    label: 'Last update (oldest first)'\n  },\n  {\n    value: 'name|desc',\n    label: 'Tên (giảm)'\n  },\n  {\n    value: 'name|asc',\n    label: 'Tên (tăng)'\n  }\n];\n\nconst applyFilters = (quizzes, query, filters) => {\n  return quizzes.filter((quiz) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['title', 'description'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if ((property in quiz) && quiz[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && quiz[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n};\n\nconst applyPagination = (quizzes, page, limit) => {\n  return quizzes.slice(page * limit, page * limit + limit);\n};\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\n\nconst applySort = (quizzes, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = quizzes.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  queryField: {\n    width: 500\n  },\n  bulkOperations: {\n    position: 'relative'\n  },\n  bulkActions: {\n    paddingLeft: 4,\n    paddingRight: 4,\n    marginTop: 6,\n    position: 'absolute',\n    width: '100%',\n    zIndex: 2,\n    backgroundColor: theme.palette.background.default\n  },\n  bulkAction: {\n    marginLeft: theme.spacing(2)\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst Results = ({ quizzes, ...rest }) => {\n\n  const classes = useStyles();\n  const [currentTab, setCurrentTab] = useState('all');\n  const [selectedquizzes, setSelectedquizzes] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  const handleTabsChange = (event, value) => {\n    const updatedFilters = {\n      ...filters,\n      hasAcceptedMarketing: null,\n      isProspect: null,\n      isReturning: null\n    };\n\n    if (value !== 'all') {\n      updatedFilters[value] = true;\n    }\n\n    setFilters(updatedFilters);\n    setSelectedquizzes([]);\n    setCurrentTab(value);\n  };\n\n  const handleQueryChange = (event) => {\n    event.persist();\n    setQuery(event.target.value);\n  };\n\n  const handleSortChange = (event) => {\n    event.persist();\n    setSort(event.target.value);\n  };\n\n  const handleSelectAllquizzes = (event) => {\n    setSelectedquizzes(event.target.checked\n      ? quizzes.map((quiz) => quiz.id)\n      : []);\n  };\n\n  const handleSelectOnequiz = (event, quizId) => {\n    if (!selectedquizzes.includes(quizId)) {\n      setSelectedquizzes((prevSelected) => [...prevSelected, quizId]);\n    } else {\n      setSelectedquizzes((prevSelected) => prevSelected.filter((id) => id !== quizId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n\n  const filteredquizzes = applyFilters(quizzes, query, filters);\n  const sortedquizzes = applySort(filteredquizzes, sort);\n  const paginatedquizzes = applyPagination(sortedquizzes, page, limit);\n  const enableBulkOperations = selectedquizzes.length > 0;\n  const selectedSomequizzes = selectedquizzes.length > 0 && selectedquizzes.length < quizzes.length;\n  const selectedAllquizzes = selectedquizzes.length === quizzes.length;\n\n  return (\n    <Card className={clsx(classes.root)}{...rest}>\n      <Tabs onChange={handleTabsChange} scrollButtons=\"auto\" textColor=\"secondary\" value={currentTab} variant=\"scrollable\">\n        {tabs.map((tab) => (\n          <Tab key={tab.value} value={tab.value} label={tab.label}/>\n        ))}\n      </Tabs>\n      <Divider />\n      <Box p={2} minHeight={56} display=\"flex\" alignItems=\"center\">\n        <TextField\n          className={classes.queryField}\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SvgIcon fontSize=\"small\" color=\"action\">\n                  <SearchIcon />\n                </SvgIcon>\n              </InputAdornment>\n            )\n          }}\n          onChange={handleQueryChange}\n          placeholder=\"Tìm kiếm\"\n          value={query}\n          variant=\"outlined\"\n        />\n        <Box flexGrow={1} />\n        <TextField label=\"Sắp xếp\" name=\"sort\" onChange={handleSortChange} select SelectProps={{ native: true }} value={sort} variant=\"outlined\">\n          {sortOptions.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n      </Box>\n      {enableBulkOperations && (\n        <div className={classes.bulkOperations}>\n          <div className={classes.bulkActions}>\n            <Checkbox checked={selectedAllquizzes} indeterminate={selectedSomequizzes} onChange={handleSelectAllquizzes}/>\n            <Button variant=\"outlined\" className={classes.bulkAction} >\n              Check\n            </Button>\n          </div>\n        </div>\n      )}\n      <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox checked={selectedAllquizzes} indeterminate={selectedSomequizzes} onChange={handleSelectAllquizzes}/>\n                </TableCell>\n                <TableCell>\n                  Tên\n                </TableCell>\n                <TableCell>\n                  Mô tả\n                </TableCell>\n                <TableCell>\n                  Catalog\n                </TableCell>\n                <TableCell align=\"right\">\n                  Action\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedquizzes.map((quiz) => {\n                const isquizSelected = selectedquizzes.includes(quiz.id);\n                return (\n                  <TableRow hover key={quiz.id} selected={isquizSelected}>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox checked={isquizSelected} onChange={(event) => handleSelectOnequiz(event, quiz.id)} value={isquizSelected}/>\n                    </TableCell>\n                    <TableCell>\n                      <Box display=\"flex\" alignItems=\"center\">{quiz.name}</Box>\n                    </TableCell>\n                    <TableCell>\n                      {quiz.desc}\n                    </TableCell>\n                    <TableCell>\n                      {quiz.catalog}\n                    </TableCell>\n                    <TableCell align=\"right\">\n                      <IconButton component={RouterLink} to={\"/teacher/management/quizzes/edit/\"+ quiz.id}>\n                        <SvgIcon fontSize=\"small\">\n                        <EditIcon />\n                        </SvgIcon>\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredquizzes.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  quizzes: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  quizzes: []\n};\n\nexport default Results;\n","import  app from './firebase';\nimport \"firebase/messaging\";\n// import {messaging} from './fcm';\nimport axios from 'axios';\nimport { API_URL } from '../config';\nconst db = app.firestore();\n\nexport const listAllQuiztests = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('quiz_test').get();\n    if (querySnapshot.docs) {\n      const products = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id, ...doc.data()\n        }\n      });\n      return products\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\nexport const addQuiztest = async (data,tags,typeQuiz,ListQuiz) => {\n  try {\n    let newData = {\n          name : data.name,\n          tags : tags,\n          typeQuiz : typeQuiz,\n          listQuiz : ListQuiz\n    }\n    let QuizTestRef = await app.firestore().collection('quiz_test').add(newData);\n    let quiz_test = await QuizTestRef.get();\n    sendNotify(tags, newData);\n    return quiz_test.data();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nasync function sendNotify(tags,  newData){\n  var i;\n  for (i = 0; i < tags.length; i++) {\n    const condtion =  parseInt(tags[i].slice(-1));\n    const listReceiver  =  await app.firestore().collection('users').where(\"grade\", \"==\", condtion).where('last_device.active_status' ,\"==\",1).get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc){\n        console.log(doc.id, \" => \", doc.data());\n        const last_device = doc.data().last_device;\n        // if(typeof last_device!==\"undefined\" && last_device.active_status === 1){\n          const devicetoken = last_device.device_token;\n          const params = {\n            // 'condition':topic,\n            to: devicetoken,\n            // 'to':\"fseo_43NQcq1oGsjpjn84B:APA91bESRa4YiBHTr015vGyHMhehOF3goLV42r4aR7uG79WE5hT6FhLo5eKMIXLbb6M76zGYgj_CGFZwcjoazuUs4HbLquFCWElpRhEv5mhpnRy7e0vbNRg62ghdcAmtojJNSU6WtySs\",\n            priority: \"high\",\n            notification: {\n              \"body\": 'Học bài ở nhà vừa gửi 1 bài tập',\n              \"title\": newData.name,\n            },\n            data: {\n              \"click_action\": \"FLUTTER_NOTIFICATION_CLICK\",\n              \"deep_link\": '',\n              \"body\": 'Học bài ở nhà vừa gửi 1 bài tập',\n              \"title\": newData.name,\n              \"content_type\": 'h5p'\n            },\n          };\n\n          const headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"key=\"+process.env.REACT_APP_FIREBASE_CLOUD_MESSAGE_KEY,\n          };\n\n\n          axios.post('https://fcm.googleapis.com/fcm/send', params, {\"headers\":headers})\n            .then(function (response) {\n              console.log(response);\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n        // }\n      });\n    }).catch(function(err){\n      console.log(\"Error getting documents: \", err);\n    });\n  }\n}\n\nexport const updateQuiztest = async (data,tags,typeQuiz,ListQuiz) => {\n  try {\n    let newData = {\n          name : data.name,\n          tags : tags,\n          typeQuiz : typeQuiz,\n          listQuiz : ListQuiz\n    }\n    console.log(data);\n    console.log(newData);\n    let QuizTestRef = await app.firestore().collection('quiz_test').doc(data.id).update(newData);\n    let quiz_test = await QuizTestRef.get();\n    return quiz_test.data();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getQuizTest = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('quiz_test').doc(id).get();\n    const quiz_test = querySnapshot.data();\n    return quiz_test\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const deleteQuizTest = async(ids)=>{\n  try {\n    ids.map((id) => {\n      app.firestore().collection('quiz_test').doc(id).delete();\n    });\n    return true;\n  }catch (err) {\n    console.log(err);\n  }\n}\nexport const listQuizes = async (teacherid)=>{\n  try {\n    let querySnapshot = await app.firestore().collection('teachers').doc(teacherid).collection('quizzes').get();\n    if (querySnapshot.docs) {\n      const quizzes = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return quizzes\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const getQuiz = async (teacherid,quizId)=>{\n  console.log(teacherid,quizId)\n  \n  let querySnapshot = await db.collection('teachers').doc(teacherid).collection('quizzes').doc(quizId).get();\n  try {\n  console.log(\"123\")\n  const quizData = await querySnapshot.data();\n  console.log(quizData)\n  // const questions = quizData.questions;\n  quizData.task_data = [];\n  const questions = await quizData.questions.map(async (questionRef) => {\n    let doc = await questionRef.get();\n    \n    quizData.task_data.push( {\n      id: doc.id,\n      ...doc.data()\n    });\n  })\n  console.log(quizData)\n  delete quizData.questions;\n    return quizData\n  }catch (err) {\n      console.log(err);\n    }\n}\nexport const createQuiz = async(data)=>{\n  try {\n    \n    console.log(data)\n    console.log(typeof(data.data))\n    const quiz={name:data.name,catalog:data.catalog,desc:data.desc,created_by:data.created_by,author:data.author}\n    // quiz.start_time=null;\n    // quiz.end_time=null;\n    // quiz.duration=null;\n    \n    quiz.restart=0;\n    quiz.navigate=1;\n    quiz.created_time = new Date();\n    quiz.trial_maxquest=5;\n    quiz.trial_maxtime=30;\n    quiz.trial_maxentry=1;\n    quiz.random=1;\n    quiz.quest_feedback=0;\n    quiz.auto_next=0;\n    const batch = db.batch();\n    quiz.questions=[];\n    const questions=[];\n    console.log(quiz);\n    data.data.forEach(async question=> {\n      question.created_by=quiz.created_by;\n      question.catalog=quiz.catalog;\n      question.created_time = quiz.created_time\n      const questRef = await db.collection(\"resource\").doc('public').collection(\"questions\").doc(question.id);\n      batch.set(questRef,question);\n      quiz.questions.push(questRef);\n      questions.push(question)\n    })\n    const quizRef = await db.collection('teachers').doc(data.created_by).collection('quizzes').doc();\n    batch.set( quizRef,quiz);\n    batch.commit().then(()=>{\n      //add to elasticsearch\n      console.log(\"quizid:\",quizRef.id);\n      quiz.id = quizRef.id;\n\n    return;  \n    });\n    return true;\n  }catch (err) {\n    console.log(err);\n  }\n}\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\nimport { listQuizes } from '../../../../api/hbon_quiz';\nimport useAuth from '../../../../hooks/useAuth';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst QuizListView = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [quiz, setQuizzes] = useState([]);\n  const { user } = useAuth();\n  const getQuizzes = useCallback(async () => {\n    try {\n      const quiz = await listQuizes(user.userId);\n      \n      if (isMountedRef.current) {\n        setQuizzes(quiz);\n        console.log(quiz);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {getQuizzes();}, [getQuizzes]);\n  return (\n    <Page className={classes.root} title=\"Hbon quizzes\">\n      <Container maxWidth={false}>\n        <Header/>\n        <Box mt={3}>\n          <Results quizzes={quiz}/>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default QuizListView;\n"],"sourceRoot":""}