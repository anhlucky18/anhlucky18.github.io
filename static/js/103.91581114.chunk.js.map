{"version":3,"sources":["hooks/useIsMountedRef.js","api/products.js","api/courses.js","views/product/ProductCreateView/ProductCreateForm.js","views/product/ProductCreateView/Header.js","views/product/ProductCreateView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","listAllProducts","a","app","firestore","collection","get","querySnapshot","docs","products","map","doc","id","data","console","log","addProduct","courses","course","c","name","shortname","push","length","add","url","API_URL","axios","post","then","resp","listAllCourses","useStyles","makeStyles","root","sortOptions","value","label","timeOptions","descendingComparator","b","orderBy","applySort","sort","split","comparator","order","getComparator","stabilizedThis","el","index","ProductCreateForm","className","rest","enddate","Date","setFullYear","getFullYear","useAuth","user","useState","timeOption","setTimeOption","classes","isMountedRef","setCourses","getCourses","useCallback","fcourses","error","enqueueSnackbar","useSnackbar","selectedCourses","setSelectedCourses","page","setPage","limit","setLimit","query","hasAcceptedMarketing","isProspect","isReturning","filters","handleSelectAllCourses","event","target","checked","handlePageChange","newPage","handleLimitChange","parseInt","filteredCourses","filter","matches","containsQuery","forEach","property","toLowerCase","includes","Object","keys","key","applyFilters","paginatedCourses","slice","applyPagination","selectedSomeCourses","selectedAllCourses","initialValues","idnumber","submit","validationSchema","Yup","shape","max","required","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","endtime","wait","success","variant","action","Button","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","setFieldTouched","touched","clsx","Card","CardContent","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","onBlur","onChange","select","SelectProps","native","option","datePicker","format","inputVariant","onClose","onAccept","date","Box","mt","color","type","disabled","minWidth","Table","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","TableBody","isCourseSelected","hover","selected","courseId","prevSelected","category","TablePagination","component","count","onChangePage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","Header","schoolname","localStorage","getItem","Breadcrumbs","separator","fontSize","aria-label","Link","to","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","ProductCreateView","props","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/103.91581114.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","\nimport app from './firebase';\nimport axios from 'axios';\nimport { API_URL } from '../config';\n\nexport const listAllProducts = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('products').get();\n    if (querySnapshot.docs) {\n      const products = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return products\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\nexport const addProduct = async (data,courses) => {\n  try { \n    data.courses = [];\n    for await (let id of courses){\n      let querySnapshot = await app.firestore().collection('courses').doc(id).get();\n      const course = querySnapshot.data()\n      let c={id:id,name:course.name,shortname:course.shortname};\n      data.courses.push(c);\n    }\n    if(data.courses.length<1) {\n      return;\n    }\n    let result  = await app.firestore().collection('products').add(data);\n    const url = `${API_URL}/api/create_cohorts`;\n    axios.post(url,data).then(resp => {\n        console.log(resp.data);\n    });\n\n  } catch (err) {\n      console.log(err);\n  }\n};\n\nexport const getProduct = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('product').doc(id).get();\n    const product = querySnapshot.data()\n    return product\n  } catch (err) {\n    console.log(err);\n  }\n}","import firebase from 'firebase';\nimport app from './firebase';\n\n\n//TODO generate token for moodle webservice and insert to Course (webservice/lib)\nexport const addCourseCommand = async (image,user, data) => {\n\n  // const { userapi} = useAuth();\n  try {\n    let command={\n      type:\"course\",\n      action:\"add\",\n      status:0,\n      user:user,\n      data:data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    let course = await courseApi.get();\n    let coursedata = course.data();\n    var metadata = {\n      contentType: 'image/jpeg'\n    };\n    let fb_url = \"public/\"+data.school.id+\"/course/\" + course.id;\n    var storageRef = app.storage().ref();\n    var uploadTask = storageRef.child(fb_url).put(image, metadata);\n    uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n      function (snapshot) {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload is ' + progress + '% done');\n        switch (snapshot.state) {\n          case firebase.storage.TaskState.PAUSED: // or 'paused'\n            console.log('Upload is paused');\n            break;\n          case firebase.storage.TaskState.RUNNING: // or 'running'\n            console.log('Upload is running');\n            break;\n        }\n      },\n      function (error) {\n\n        switch (error.code) {\n          case 'storage/unauthorized':\n              console.log(\"unauthorized\")\n            break;\n          case 'storage/canceled':\n            console.log(\"cancel\")\n            break;\n          case 'storage/unknown':\n\n            console.log(\"unkonwn\")\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      },\n      function () {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          console.log('File available at', downloadURL);\n          coursedata.data.image = downloadURL;\n          app.firestore().collection('commands').doc(course.id).set(coursedata);\n        });\n      });\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getCourseApi = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('courses').doc(id).get();\n    const course = querySnapshot.data()\n    course.id = id\n    return course\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const updateCourse = async (data) => {\n  try {\n    let id = data.id;\n    let result = await app.firestore().collection('courses').doc(id).set(data);\n    return result\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const listAllCourses = async (data) => {\n  try {\n    let querySnapshot = await app.firestore().collection('courses').get();\n    const course = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      }\n    })\n    return course\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  CardContent,\n  Grid,\n  TextField,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  makeStyles\n} from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport wait from 'src/utils/wait';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport {addProduct} from '../../../api/products';\nimport {listAllCourses} from '../../../api/courses';\nimport useAuth from 'src/hooks/useAuth';\nimport moment from 'moment';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst sortOptions = [\n  {\n    value: 'category|asc',\n    label: 'Category (tăng)'\n  },\n  {\n    value: 'category|desc',\n    label: 'Category (giảm)'\n  }\n];\nconst timeOptions = [\n  {\n    value: '0',\n    label: 'Chọn ngày hết hạn'\n  },\n  {\n    value: '1',\n    label: '1 tháng'\n  },\n  {\n    value: '3',\n    label: '3 tháng'\n  },\n  {\n    value: '6',\n    label: '6 tháng'\n  },\n  {\n    value: '12',\n    label: '12 tháng'\n  },\n  {\n    value: '00',\n    label: 'Trọn đời'\n  }\n];\n\nconst applyFilters = (courses, query, filters) => {\n  return courses.filter((course) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['email', 'name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (course[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && course[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n};\n\nconst applyPagination = (courses, page, limit) => {\n  return courses.slice(page * limit, page * limit + limit);\n};\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\nconst applySort = (courses, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = courses.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst ProductCreateForm = ({\n  className,\n  ...rest\n}) => {\n  const enddate = new Date()\n  enddate.setFullYear(enddate.getFullYear() + 1);\n  const { user} = useAuth();\n  const [timeOption, setTimeOption] = useState(\"0\");\n  const classes = useStyles();\n  \n  const isMountedRef = useIsMountedRef();\n  const [courses, setCourses] = useState([]);\n\n  const getCourses = useCallback(async () => {\n    try {\n      const fcourses = await listAllCourses();\n      if (isMountedRef.current) {\n        setCourses(fcourses);\n      }\n      \n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getCourses();\n  }, [getCourses]);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [selectedCourses, setSelectedCourses] = useState([]);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n  \n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n\n  const handleSelectAllCourses = (event) => {\n    setSelectedCourses(event.target.checked\n      ? courses.map((course) => course.id)\n      : []);\n  };\n\n  const handleSelectOneCourse = (event, courseId) => {\n    if (!selectedCourses.includes(courseId)) {\n      setSelectedCourses((prevSelected) => [...prevSelected, courseId]);\n    } else {\n      setSelectedCourses((prevSelected) => prevSelected.filter((id) => id !== courseId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n\n  const filteredCourses = applyFilters(courses, query, filters);\n  const sortedClasses = applySort(filteredCourses, sort);\n  const paginatedCourses = applyPagination(sortedClasses, page, limit);\n  const selectedSomeCourses = selectedCourses.length > 0 && selectedCourses.length < courses.length;\n  const selectedAllCourses = selectedCourses.length === courses.length;\n    return (\n    <Formik\n    initialValues={{\n      name: '',\n      idnumber: '',\n      enddate: enddate,\n      submit: null\n    }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().max(75).required('Bắt buộc nhập tên'),\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          if(timeOption!==\"0\"){\n            delete(values.enddate);\n          }\n          values.endtime = timeOption\n          addProduct(values,selectedCourses)\n          // NOTE: Make API request\n          await wait(500);\n          resetForm();\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Class updated', {\n            variant: 'success',\n            action: <Button>See all</Button>\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        setFieldTouched,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Tên\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.idnumber && errors.idnumber)}\n                    fullWidth\n                    helperText={touched.idnumber && errors.idnumber}\n                    label=\"idnumber\"\n                    name=\"idnumber\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.idnumber}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={3} xs={6}>\n                <TextField\n                  fullWidth\n                  name=\"endtime\"\n                  onChange={(event) => setTimeOption(event.target.value)}\n                  select\n                  SelectProps={{ native: true }}\n                  value={timeOption}\n                  variant=\"outlined\"\n                >\n                  {timeOptions.map((option) => (\n                    <option\n                      key={option.value}\n                      value={option.value}\n                    >\n                      {option.label}\n                    </option>\n                  ))}\n                </TextField>\n                </Grid>\n                { timeOption==\"0\" ? <Grid item md={3} xs={6}>\n                  <KeyboardDatePicker\n                    className={classes.datePicker}\n                    label=\"Ngày hết hạn (ngày/tháng/năm)\"\n                    format=\"DD/MM/YYYY\"\n                    name=\"enddate\"\n                    inputVariant=\"outlined\"\n                    value={values.enddate}\n                    onBlur={() => setFieldTouched('enddate')}\n                    onClose={() => setFieldTouched('enddate')}\n                    onAccept={() => setFieldTouched('enddate')}\n                    onChange={date => setFieldValue('enddate', date)}\n                  />\n                </Grid> : null }\n                \n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Lưu\n                </Button>\n              </Box>\n            </CardContent>\n            <PerfectScrollbar>\n        <Box minWidth={700}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    checked={selectedAllCourses}\n                    indeterminate={selectedSomeCourses}\n                    onChange={handleSelectAllCourses}\n                  />\n                </TableCell>\n                <TableCell>\n                  Tên \n                </TableCell>\n                <TableCell>\n                  Shortname\n                </TableCell>\n                <TableCell >\n                  Category\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {paginatedCourses.map((course) => {\n                const isCourseSelected = selectedCourses.includes(course.id);\n\n                return (\n                  <TableRow\n                    hover\n                    key={course.id}\n                    selected={isCourseSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isCourseSelected}\n                        onChange={(event) => handleSelectOneCourse(event, course.id)}\n                        value={isCourseSelected}\n                      />\n                    </TableCell>\n                  <TableCell>\n                  {course.name}\n                  </TableCell>\n                    <TableCell>\n                    {course.shortname}\n                    \n                    </TableCell>\n                    <TableCell>\n                    {course.category}\n                    </TableCell>\n                    \n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={filteredCourses.length}\n        onChangePage={handlePageChange}\n        onChangeRowsPerPage={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nProductCreateForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default ProductCreateForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  let schoolname = localStorage.getItem('schoolname');\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/hbon/management/schools\"\n            component={RouterLink}\n          >\n            Trường: {schoolname}\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/school/management/classes\"\n            component={RouterLink}\n          >\n            Thẻ thành viên \n          </Link>\n      </Breadcrumbs>\n      <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Thêm thẻ thành viên\n        </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport ProductCreateForm from './ProductCreateForm';\nimport Header from './Header';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst ProductCreateView = (props) => {\n  console.log(\"start ProductCreateView\")\n  const classes = useStyles();\n  return (\n    <Page\n      className={classes.root}\n      title=\"Thêm học sinh\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <ProductCreateForm />\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default ProductCreateView;\n"],"sourceRoot":""}