{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","api/roles.js","views/roles/RoleEditView/RoleEditForm.js","views/roles/RoleEditView/Header.js","views/roles/RoleEditView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","listAllRole","a","app","firestore","collection","get","querySnapshot","role","docs","map","doc","id","data","console","log","addRole","add","deleteRoles","ids","delete","err","getRoleApi","updateRole","set","result","useStyles","makeStyles","root","RoleEditForm","className","rest","classes","enqueueSnackbar","useSnackbar","initialValues","name","shortname","submit","validationSchema","Yup","shape","max","required","onSubmit","values","setErrors","setStatus","setSubmitting","wait","success","variant","action","href","Button","error","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","clsx","Card","CardContent","type","Grid","container","spacing","item","md","xs","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","Box","mt","color","disabled","Header","Breadcrumbs","separator","fontSize","aria-label","Link","to","component","RouterLink","Typography","theme","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","RoleEditView","props","roleId","match","params","isMountedRef","useState","setRole","getRole","useCallback","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/105.3eba486a.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","import app from './firebase';\n\nexport const listAllRole = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('roles').get();\n    const role = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      }\n    })\n    return role\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\nexport const addRole = async (data) => {\n  try {\n    let role = await app.firestore().collection('roles').add(data);\n    console.log(role.data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteRoles = (ids) => {\n  try {\n    ids.map((id) => {\n      app.firestore().collection('roles').doc(id).delete();\n    })\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getRoleApi = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('roles').doc(id).get();\n    const role = querySnapshot.data()\n    role.id = id\n    return role\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const updateRole = async (data) => {\n  try {\n    console.log(\"update roles\")\n    let id = data.id;\n    let result = await app.firestore().collection('roles').doc(id).set(data);\n    console.log(result);\n    return result\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport wait from 'src/utils/wait';\nimport {updateRole} from '../../../api/roles'\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst RoleEditForm = ({\n  className,\n  role,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n\n  return (\n    <Formik\n      initialValues={{\n        id: role.id || '',\n        name: role.name || '',\n        shortname: role.shortname || '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().max(25).required('Name is required'),\n        shortname: Yup.string().max(25)\n      })}\n      onSubmit={async (values, {\n        \n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n\n          console.log(values)\n          updateRole(values);\n          // NOTE: Make API request\n          await wait(500);\n          \n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Cập nhật thành công', {\n            variant: 'success',\n            action: <a href=\"/hbon/management/roles\"><Button>Xem tất cả</Button></a>\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              <input type=\"hidden\" name=\"id\" \n                    required\n                    value={values.id}/>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Vai trò\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.shortname && errors.shortname)}\n                    fullWidth\n                    helperText={touched.shortname && errors.shortname}\n                    label=\"Moodle shortname\"\n                    name=\"shortname\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.shortname}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                \n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Lưu\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nRoleEditForm.propTypes = {\n  className: PropTypes.string,\n  role: PropTypes.object.isRequired\n};\n\nexport default RoleEditForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n      <Link\n        variant=\"body1\"\n        color=\"inherit\"\n        to=\"/hbon \"\n        component={RouterLink}\n      >\n        Trang chủ\n      </Link>\n      <Link\n        variant=\"body1\"\n        color=\"inherit\"\n        to=\"/hbon/management/roles\"\n        component={RouterLink}\n      >\n        Vai trò\n      </Link>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Chỉnh sửa vai trò\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport RoleEditForm from './RoleEditForm';\nimport Header from './Header';\nimport {getRoleApi}  from '../../../api/roles'\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst  RoleEditView  = (props) => {\n  const {roleId } = props.match.params;\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [role, setRole] = useState(null);\n\n  const getRole = useCallback(async () => {\n    try {\n      let role = await getRoleApi(roleId);\n      if (isMountedRef.current) {\n        setRole(role);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getRole();\n  }, [getRole]);\n\n  if (!role) {\n    return null;\n  }\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Role Edit\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <RoleEditForm role={role} />\n        </Container>\n      </Box>\n    </Page>\n  );\n};\nexport default RoleEditView;\n"],"sourceRoot":""}