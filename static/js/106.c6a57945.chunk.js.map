{"version":3,"sources":["hooks/useIsMountedRef.js","api/students.js","components/Label.js","views/student/StudentEditView/StudentEditForm.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError.js","views/student/StudentEditView/Header.js","views/student/StudentEditView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","listAllStudents","school_id","a","app","firestore","collection","where","get","querySnapshot","console","log","empty","size","docs","students","map","doc","id","data","checkUser","username","email","length","querySnapshot1","createStudentWithProduct","user","error","command","type","action","status","executer","add","courseApi","addStudent","birthdate","_isAMomentObject","firebase","Timestamp","fromDate","toDate","products","getStudent","student","valp","product","push","updateStudent","update","result","listAllBoughtStudents","enroleStudent","useStyles","makeStyles","theme","root","fontFamily","typography","alignItems","borderRadius","display","flexGrow","whiteSpace","cursor","flexShrink","fontSize","pxToRem","fontWeight","fontWeightMedium","height","justifyContent","letterSpacing","minWidth","padding","spacing","textTransform","primary","color","palette","main","backgroundColor","fade","secondary","success","warning","Label","className","children","rest","style","classes","clsx","genders","name","StudentEditForm","Error","seconds","enqueueSnackbar","useSnackbar","initialValues","class_code","moment","Date","parent_name","parent_phone","submit","validationSchema","Yup","shape","max","required","code","years","onSubmit","values","setErrors","setStatus","setSubmitting","localStorage","getItem","wait","variant","Button","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","setFieldValue","setFieldTouched","touched","Card","CardContent","Grid","container","item","md","xs","TextField","Boolean","fullWidth","helperText","label","onBlur","onChange","value","disabled","select","SelectProps","native","gender","key","datePicker","format","inputVariant","onClose","onAccept","date","Box","mt","Header","schoolname","Breadcrumbs","separator","aria-label","Link","to","component","RouterLink","Typography","background","dark","minHeight","paddingTop","paddingBottom","StudentEditView","props","studentId","match","params","isMountedRef","useState","setStudent","getStudents","useCallback","fstudent","Page","title","Container","maxWidth"],"mappings":"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","file":"static/js/106.c6a57945.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import firebase from 'firebase';\nimport app from './firebase';\n\n// import axios from 'axios';\n// import {\n//   API_URL\n// } from 'src/config';\nexport const listAllStudents = async (school_id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').where(\"school_id\", \"==\", school_id).where(\"status\",\"==\",0).get();\n    console.log(querySnapshot.empty)\n    console.log(querySnapshot.size)\n    if (querySnapshot.docs) {\n      const students = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return students\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nconst checkUser  = async (data)=>{\n  let username = data.username;\n  let email=data.email;\n  let querySnapshot = await app.firestore().collection('users').where(\"username\", \"==\", username).get();\n  if (querySnapshot.docs) {\n    if (querySnapshot.docs.length>0)\n      return \"username_exited\";\n  }\n  let querySnapshot1 = await app.firestore().collection('users').where(\"email\", \"==\", email).get();\n  if (querySnapshot1.docs) {\n    if (querySnapshot1.docs.length>0)\n      return \"email_exited\";\n  }\n  return \"success\";\n}\nexport const createStudentWithProduct = async (user, data) => {\n  try {\n    let error = await checkUser(data);\n    console.log(\"error:\",error)\n    if(error!=\"success\"){\n      return error; \n    }\n    let command = {\n      type: \"student\",\n      action: \"create\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    let id = await (await courseApi.get()).id;\n    console.log(\"add command success\",id)\n    return \"success\";\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const addStudent = async (user, data) => {\n  try {\n\n    if (data.birthdate._isAMomentObject) {\n      data.birthdate = firebase.firestore.Timestamp.fromDate(data.birthdate.toDate())\n    }\n    data.products=[]\n    console.log(data.birthdate);\n    let command = {\n      type: \"student\",\n      action: \"add\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    let courseApi = await app.firestore().collection('commands').add(command);\n    console.log(\"add command success\")\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getStudent = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').doc(id).get();\n    const student = querySnapshot.data()\n    student.id = id\n    let products = []\n    if(typeof(student.products)===\"undefined\"){\n      student.products = products\n      return student;\n    }\n    for await (let valp of student.products){\n      const product = await valp.get();\n      products.push(product.id)\n    }\n    student.products = products\n\n    return student\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const updateStudent = async (data) => {\n  if (data.birthdate._isAMomentObject) {\n    data.birthdate = firebase.firestore.Timestamp.fromDate(data.birthdate.toDate())\n  }\n  try {\n    let id = data.id;\n    let result = await app.firestore().collection('students').doc(id).update(data);\n    \n    return result\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nexport const listAllBoughtStudents = async (school_id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('students').where(\"school_id\", \"==\", school_id).where(\"status\",\"==\",0).where(\"products\",\">\",[]).get();\n    if (querySnapshot.docs) {\n      const students = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return students\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const addBoughtStudent = async (data) => {\n  try {\n    let id = data.id;\n    app.firestore().collection('students').doc(id).update(data);\n    \n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const getStudentUser = async (id) => {\n  try {\n    let stUser = await getStudentUser(id);\n    let querySnapshot = await app.firestore().collection('users').doc(id).get();\n    const students = querySnapshot.data()\n    students.id = id\n    students.username = stUser.username;\n    return students\n  } catch (err) {\n    console.log(err);\n  }\n}\n\n\nexport const enroleStudent = async (user, data) => {\n  try {\n    let command = {\n      type: \"enrole_student\",\n      action: \"add\",\n      status: 0,\n      executer: user,\n      data: data\n    }\n    console.log(command);\n    await app.firestore().collection('commands').add(command);\n    console.log(\"add command success\")\n\n  } catch (err) {\n    console.log(err);\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    fontFamily: theme.typography.fontFamily,\n    alignItems: 'center',\n    borderRadius: 2,\n    display: 'inline-flex',\n    flexGrow: 0,\n    whiteSpace: 'nowrap',\n    cursor: 'default',\n    flexShrink: 0,\n    fontSize: theme.typography.pxToRem(12),\n    fontWeight: theme.typography.fontWeightMedium,\n    height: 20,\n    justifyContent: 'center',\n    letterSpacing: 0.5,\n    minWidth: 20,\n    padding: theme.spacing(0.5, 1),\n    textTransform: 'uppercase'\n  },\n  primary: {\n    color: theme.palette.primary.main,\n    backgroundColor: fade(theme.palette.primary.main, 0.08)\n  },\n  secondary: {\n    color: theme.palette.secondary.main,\n    backgroundColor: fade(theme.palette.secondary.main, 0.08)\n  },\n  error: {\n    color: theme.palette.error.main,\n    backgroundColor: fade(theme.palette.error.main, 0.08)\n  },\n  success: {\n    color: theme.palette.success.main,\n    backgroundColor: fade(theme.palette.success.main, 0.08)\n  },\n  warning: {\n    color: theme.palette.warning.main,\n    backgroundColor: fade(theme.palette.warning.main, 0.08)\n  }\n}));\n\nconst Label = ({\n  className = '',\n  color = 'secondary',\n  children,\n  style,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <span\n      className={\n        clsx(classes.root, {\n          [classes[color]]: color\n        }, className)\n      }\n      {...rest}\n    >\n      {children}\n    </span>\n  );\n};\n\nLabel.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  color: PropTypes.oneOf(['primary', 'secondary', 'error', 'warning', 'success'])\n};\n\nexport default Label;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  makeStyles,\n  Tooltip\n} from '@material-ui/core';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport wait from 'src/utils/wait';\nimport {updateStudent} from '../../../api/students.js';\nimport Label from 'src/components/Label.js';\nimport moment from 'moment';\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst genders = [\n  {\n    id: 'male',\n    name: 'Nam'\n  },\n  {\n    id: 'female',\n    name: 'Nữ'\n  }\n];\nconst StudentEditForm = ({\n  className,\n  student,\n  ...rest\n}) => {\n  const birthdate = null\n  if(student.birthdate){\n    birthdate = student.birthdate.seconds*1000;\n  }\n  const classes = useStyles();\n  const { enqueueSnackbar } = useSnackbar();\n    return (\n    <Formik\n    initialValues={{\n      id: student.id || '',\n      name: student.name || '',\n      class_code: student.class_code || '',\n      birthdate: moment(birthdate) || new Date(),\n      parent_name: student.parent_name || '',\n      parent_phone: student.parent_phone || '',\n      submit: null\n    }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string().max(255).required('Name is required'),\n        code: Yup.string().max(15),\n        years: Yup.string().max(15),\n      })}\n      onSubmit={async (values, {\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          values.school_id = localStorage.getItem('schoolid');\n          console.log(values)\n          updateStudent(values)\n          // NOTE: Make API request\n          await wait(500);\n          setStatus({ success: true });\n          setSubmitting(false);\n          enqueueSnackbar('Class updated', {\n            variant: 'success',\n            action: <Button>See all</Button>\n          });\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        isSubmitting,\n        setFieldValue,\n        setFieldTouched,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.name && errors.name)}\n                    fullWidth\n                    helperText={touched.name && errors.name}\n                    label=\"Tên học sinh\"\n                    name=\"name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  \n                  <TextField\n                    error={Boolean(touched.class_code && errors.class_code)}\n                    fullWidth\n                    helperText={touched.class_code && errors.class_code}\n                    label=\"Lớp\"\n                    name=\"class_code\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.class_code}\n                    disabled\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    fullWidth\n                    label=\"Giới tính\"\n                    name=\"gender\"\n                    onChange={handleChange}\n                    select\n                    SelectProps={{ native: true }}\n                    value={values.gender}\n                    variant=\"outlined\"\n                  >\n                    {genders.map((gender) => (\n                      <option\n                        key={gender.id}\n                        value={gender.id}\n                      >\n                        {gender.name}\n                      </option>\n                    ))}\n                  </TextField>\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                 <KeyboardDatePicker\n                className={classes.datePicker}\n                label=\"Ngày sinh (ngày/tháng/năm)\"\n                format=\"DD/MM/YYYY\"\n                name=\"birthdate\"\n                inputVariant=\"outlined\"\n                value={values.birthdate}\n                onBlur={() => setFieldTouched('birthdate')}\n                onClose={() => setFieldTouched('birthdate')}\n                onAccept={() => setFieldTouched('birthdate')}\n                onChange={(date) => setFieldValue('birthdate', date)}\n              />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.parent_name && errors.parent_name)}\n                    fullWidth\n                    helperText={touched.parent_name && errors.parent_name}\n                    label=\"Tên phụ huynh\"\n                    name=\"parent_name\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.parent_name}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid\n                  item\n                  md={6}\n                  xs={12}\n                >\n                  <TextField\n                    error={Boolean(touched.parent_phone && errors.parent_phone)}\n                    fullWidth\n                    helperText={touched.parent_phone && errors.parent_phone}\n                    label=\"Số điện thoại phụ huynh\"\n                    name=\"parent_phone\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    value={values.parent_phone}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item />\n                \n              </Grid>\n              <Box mt={2}>\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  type=\"submit\"\n                  disabled={isSubmitting}\n                >\n                  Lưu\n                </Button>\n              </Box>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nStudentEditForm.propTypes = {\n  className: PropTypes.string,\n  student:PropTypes.object.isRequired\n};\n\nexport default StudentEditForm;\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  let schoolname = localStorage.getItem('schoolname');\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n        <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/hbon/management/schools\"\n            component={RouterLink}\n          >\n            Trường: {schoolname}\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/school/management/classes\"\n            component={RouterLink}\n          >\n            Lớp học\n          </Link>\n      </Breadcrumbs>\n      <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Chỉnh sửa lớp học\n        </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport StudentEditForm from './StudentEditForm';\nimport Header from './Header';\nimport {getStudent} from '../../../api/students.js';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst StudentEditView = (props) => {\n  const {studentId } = props.match.params;\n  \n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [student, setStudent] = useState(null);\n\n  const getStudents = useCallback(async () => {\n    try {\n      let fstudent = await getStudent(studentId);\n      \n      console.log(fstudent)\n      if (isMountedRef.current) {\n        setStudent(fstudent);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getStudents();\n  }, [getStudents]);\n\n  if (!student) {\n    return null;\n  }\n  return (\n    <Page\n      className={classes.root}\n      title=\"Thêm học sinh\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <StudentEditForm student = {student}/>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default StudentEditView;\n"],"sourceRoot":""}