{"version":3,"sources":["hooks/useIsMountedRef.js","api/livestreams.js","views/livestream/Chat/ComposeHeader.js","views/livestream/Chat/DetailHeader.js","views/livestream/Chat/MessageItem.js","views/livestream/Chat/MessageList.js","views/livestream/Chat/MessageComposer.js","views/livestream/Chat/index.js","views/livestream/LivestreamView/LivestreamViewPage.js","views/livestream/LivestreamView/Header.js","views/livestream/LivestreamView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","listLivestreamVideo","a","app","firestore","collection","get","querySnapshot","content","docs","map","doc","id","data","console","log","addLivestreamVideo","values","content_type","create_at","firebase","FieldValue","serverTimestamp","add","contentRef","getVideoApi","video","updateVideo","update_at","update","getVideoQuestion","questions","setShowVideo","questId","questRef","useStyles","makeStyles","theme","root","alignItems","display","padding","spacing","container","marginLeft","recipient","marginRight","input","backgroundColor","palette","background","default","borderRadius","height","paddingLeft","paddingRight","compactInput","maxWidth","searchResults","marginTop","width","ComposeHeader","className","onAddRecipient","onRemoveRecipient","recipients","rest","classes","containerRef","useState","query","setQuery","isSearchFocused","setSearchFocused","setSearchResults","filteredSearchResults","results","recipientIds","reduce","acc","filter","result","includes","getFilteredSearchResults","displayResults","handleSearchChange","event","persist","value","target","axios","params","response","error","clsx","Typography","variant","color","ref","Chip","key","label","name","onDelete","recipientId","size","Input","length","disableUnderline","onBlur","onChange","onFocus","placeholder","ClickAwayListener","onClickAway","Popper","anchorEl","open","placement","Paper","Box","pb","pt","px","textAlign","gutterBottom","List","ListItem","button","onClick","contact","ListItemAvatar","Avatar","src","avatar","ListItemText","primary","primaryTypographyProps","noWrap","defaultProps","borderBottom","divider","flexShrink","minHeight","paddingBottom","paddingTop","smallAvatar","DetailHeader","participants","moreRef","openMenu","setOpenMenu","otherParticipants","participant","displayNames","names","join","AvatarGroup","max","alt","flexGrow","IconButton","SvgIcon","fontSize","Tooltip","title","Menu","keepMounted","elevation","onClose","MenuItem","ListItemIcon","marginBottom","image","cursor","MessageItem","message","thread","user","useAuth","selectedImage","setSelectedImage","sender","find","_participant","senderId","senderDetails","type","ml","bgcolor","boxShadow","py","Link","component","RouterLink","to","mt","contentType","body","justifyContent","moment","createdAt","fromNow","large","propTypes","PropTypes","string","object","isRequired","MessageList","scrollRef","_container","scrollTop","scrollHeight","messages","options","suppressScrollX","inputContainer","fileInput","MessageComposer","onSend","disabled","fileInputRef","setBody","handleAttach","click","handleSend","fullWidth","onKeyUp","keyCode","Divider","edge","dark","flexDirection","Chat","dispatch","useDispatch","history","useHistory","threadKey","useParams","useSelector","state","chat","activeChatId","threads","byId","unreadMessages","threadSelector","handleSendMessage","getParticipants","getThread","push","getDetails","resetActiveThread","markThreadAsSeen","overflow","LivestreamViewPage","url","getThreads","isMountedRef","setQuestions","show","setShow","getLive","useCallback","initialValues","question","submit","validationSchema","Yup","shape","onSubmit","resetForm","setErrors","setStatus","setSubmitting","wait","success","errors","handleBlur","handleChange","handleSubmit","touched","setFieldValue","isSubmitting","Card","CardContent","required","Grid","item","md","xs","TextField","Boolean","helperText","quest","labelId","role","undefined","dense","e","v","doClick","Checkbox","checked","tabIndex","disableRipple","inputProps","CardMedia","allow","Header","Breadcrumbs","separator","aria-label","LivestreamView","props","videoId","match","setVideo","getVideo","Page","Container"],"mappings":"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","file":"static/js/109.6b8b558a.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import firebase from 'firebase';\nimport app from './firebase';\n\nexport const listLivestreamVideo = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('video').get();\n    const content = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      };\n    });\n    return content;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nexport const addLivestreamVideo = async (values) => {\n  try {\n    values.content_type = 'livestream';\n    values.create_at = firebase.firestore.FieldValue.serverTimestamp();\n    let contentRef = await app.firestore().collection('video').add(values);\n    let content = await contentRef.get();\n    return content.data();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteContents = (ids) => {\n  try {\n    ids.map((id) => {\n      let cover_url = 'public/images/content/' + id;\n      var storageRef = app.storage().ref();\n      storageRef.child(cover_url).getDownloadURL().then(onResolve, onReject);\n\n      function onResolve(foundURL) {\n        storageRef.child(cover_url).delete();\n      }\n\n      function onReject(error) {\n        console.log(error.code);\n      }\n\n      app.firestore().collection('contents').doc(id).collection('detail').doc('content').delete();\n      app.firestore().collection('contents').doc(id).delete();\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getVideoApi = async (id) => {\n  try {\n    console.log(id);\n    let querySnapshot = await app.firestore().collection('video').doc(id).get();\n    const video = querySnapshot.data();\n    console.log(video);\n    video.id = id;\n    return video;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const updateVideo = async (values) => {\n  try {\n    let id = values.id;\n    console.log(id);\n    // await app.firestore().collection('contents').doc(id).update(data);\n    // await app.firestore().collection('contents').doc(id).collection('detail').doc('content').update({ data: detail });\n    values.update_at = firebase.firestore.FieldValue.serverTimestamp();\n    let contentRef = await app.firestore().collection('video').doc(id).update(values);\n    return contentRef ;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getVideoQuestion = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('video').doc(id).collection('questions').get();\n    const questions = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      };\n    });\n    return questions;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const setShowVideo = async (id,questId) => {\n  try {\n    let questRef = await app.firestore().collection('video').doc(id).update({\"questionId\":questId});\n    return questRef\n  } catch (err) {\n    console.log(err);\n  }\n};","import React, {\n  useState,\n  useRef\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Box,\n  Chip,\n  ClickAwayListener,\n  Input,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Paper,\n  Popper,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\n\nconst getFilteredSearchResults = (results, recipients) => {\n  const recipientIds = recipients.reduce((acc, recipient) => {\n    return [...acc, recipient.id];\n  }, []);\n\n  return results.filter((result) => !recipientIds.includes(result.id));\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    padding: theme.spacing(2)\n  },\n  container: {\n    marginLeft: theme.spacing(1)\n  },\n  recipient: {\n    marginLeft: 4,\n    marginRight: 4\n  },\n  input: {\n    backgroundColor: theme.palette.background.default,\n    borderRadius: 16,\n    height: 32,\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2)\n  },\n  compactInput: {\n    maxWidth: 120\n  },\n  searchResults: {\n    marginTop: theme.spacing(1),\n    maxWidth: '100%',\n    width: 320\n  }\n}));\n\nconst ComposeHeader = ({\n  className,\n  onAddRecipient,\n  onRemoveRecipient,\n  recipients,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const containerRef = useRef(null);\n  const [query, setQuery] = useState('');\n  const [isSearchFocused, setSearchFocused] = useState(true);\n  const [searchResults, setSearchResults] = useState([]);\n\n  const filteredSearchResults = getFilteredSearchResults(searchResults, recipients);\n  const displayResults = query && isSearchFocused;\n\n  const handleSearchChange = async (event) => {\n    try {\n      event.persist();\n\n      const { value } = event.target;\n  \n      setQuery(value);\n\n      if (value) {\n        const response = await axios.get('/api/chat/search', {\n          params: {\n            query: value\n          }\n        });\n    \n        setSearchResults(response.data.results);\n      } else {\n        setSearchResults([]);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleSearchBlur = (event) => {\n    event.persist();\n\n    if (!displayResults) {\n      setSearchFocused(false);\n    }\n  };\n\n  const handleSearchFocus = (event) => {\n    event.persist();\n    setSearchFocused(true);\n  };\n\n  const handleSearchResultsClickAway = () => {\n    setSearchFocused(false);\n  };\n\n  const handleAddRecipient = (contact) => {\n    setQuery('');\n\n    if (onAddRecipient) {\n      onAddRecipient(contact);\n    }\n  };\n\n  const handleRemoveRecipient = (recipientId) => {\n    if (onRemoveRecipient) {\n      onRemoveRecipient(recipientId);\n    }\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Typography\n        variant=\"body1\"\n        color=\"textSecondary\"\n      >\n        To:\n      </Typography>\n      <div\n        className={classes.container}\n        ref={containerRef}\n      >\n        {recipients.map((recipient) => (\n          <Chip\n            className={classes.recipient}\n            color=\"primary\"\n            key={recipient.id}\n            label={recipient.name}\n            onDelete={() => handleRemoveRecipient(recipient.id)}\n            size=\"small\"\n          />\n        ))}\n        <Input\n          className={clsx(classes.input, { [classes.compactInput]: recipients.length > 0 })}\n          disableUnderline\n          onBlur={handleSearchBlur}\n          onChange={handleSearchChange}\n          onFocus={handleSearchFocus}\n          placeholder={recipients.length === 0 ? 'Search contacts' : ''}\n          value={query}\n        />\n      </div>\n      {displayResults && (\n        <ClickAwayListener onClickAway={handleSearchResultsClickAway}>\n          <Popper\n            anchorEl={containerRef.current}\n            open={isSearchFocused}\n            placement=\"bottom-start\"\n          >\n            <Paper className={classes.searchResults}>\n              {filteredSearchResults.length === 0 ? (\n                <Box\n                  pb={2}\n                  pt={2}\n                  px={2}\n                  textAlign=\"center\"\n                >\n                  <Typography\n                    color=\"textPrimary\"\n                    gutterBottom\n                    variant=\"h4\"\n                  >\n                    Nothing Found\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    variant=\"body2\"\n                  >\n                    We couldn&apos;t find any matches for &quot;\n                    {query}\n                    &quot;. Try checking for typos or using complete words.\n                  </Typography>\n                </Box>\n              ) : (\n                <>\n                  <Box\n                    px={2}\n                    pt={2}\n                  >\n                    <Typography\n                      color=\"textSecondary\"\n                      variant=\"h6\"\n                    >\n                      Contacts\n                    </Typography>\n                  </Box>\n                  <List>\n                    {filteredSearchResults.map((result) => (\n                      <ListItem\n                        button\n                        key={result.id}\n                        onClick={() => handleAddRecipient(result)}\n                      >\n                        <ListItemAvatar>\n                          <Avatar src={result.avatar} />\n                        </ListItemAvatar>\n                        <ListItemText\n                          primary={result.name}\n                          primaryTypographyProps={{\n                            color: 'textPrimary',\n                            noWrap: true,\n                            variant: 'h6'\n                          }}\n                        />\n                      </ListItem>\n                    ))}\n                  </List>\n                </>\n              )}\n            </Paper>\n          </Popper>\n        </ClickAwayListener>\n      )}\n    </div>\n  );\n};\n\nComposeHeader.propTypes = {\n  className: PropTypes.string,\n  onAddRecipient: PropTypes.func,\n  onRemoveRecipient: PropTypes.func,\n  recipients: PropTypes.array\n};\n\nComposeHeader.defaultProps = {\n  onAddRecipient: () => { },\n  onRemoveRecipient: () => { },\n  recipients: []\n};\n\nexport default ComposeHeader;\n","import React, {\n  useState,\n  useRef\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  ListItemIcon,\n  ListItemText,\n  SvgIcon,\n  IconButton,\n  Menu,\n  MenuItem,\n  Tooltip,\n  Avatar,\n  Box,\n  makeStyles,\n  Typography\n} from '@material-ui/core';\nimport { AvatarGroup } from '@material-ui/lab';\nimport {\n  Archive as ArchiveIcon,\n  BellOff as BellOffIcon,\n  Camera as CameraIcon,\n  MoreVertical as MoreIcon,\n  Phone as PhoneIcon,\n  Slash as SlashIcon,\n  Trash as TrashIcon\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.default,\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    display: 'flex',\n    flexShrink: 0,\n    minHeight: 64,\n    paddingBottom: theme.spacing(1),\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    paddingTop: theme.spacing(1)\n  },\n  smallAvatar: {\n    height: 30,\n    width: 30,\n    '&:first-child': {\n      marginTop: 10\n    }\n  }\n}));\n\nconst DetailHeader = ({\n  className,\n  participants,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const moreRef = useRef(null);\n  const [openMenu, setOpenMenu] = useState(false);\n\n  // We hardcode the current user ID because the mocked that is not in sync with the auth provider.\n  // When implementing this app with a real database, replace this ID with the ID from Auth Context.\n  const otherParticipants = participants.filter((participant) => participant.id !== '5e86809283e28b96d2d38537');\n  const displayNames = otherParticipants.reduce((names, participant) => [...names, participant.name], []).join(', ');\n\n  const handleMenuOpen = () => {\n    setOpenMenu(true);\n  };\n\n  const handleMenuClose = () => {\n    setOpenMenu(false);\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        alignItems=\"center\"\n        display=\"flex\"\n      >\n        <AvatarGroup\n          classes={{ avatar: otherParticipants.length > 1 ? classes.smallAvatar : null}}\n          max={2}\n        >\n          {otherParticipants.map((participant) => (\n            <Avatar\n              alt=\"Person\"\n              key={participant.id}\n              src={participant.avatar}\n            />\n          ))}\n        </AvatarGroup>\n        <Typography\n          color=\"textPrimary\"\n          variant=\"h5\"\n        >\n          {displayNames}\n        </Typography>\n      </Box>\n      <Box flexGrow={1} />\n      <IconButton>\n        <SvgIcon fontSize=\"small\">\n          <PhoneIcon />\n        </SvgIcon>\n      </IconButton>\n      <IconButton>\n        <SvgIcon fontSize=\"small\">\n          <CameraIcon />\n        </SvgIcon>\n      </IconButton>\n      <Tooltip title=\"More options\">\n        <IconButton\n          onClick={handleMenuOpen}\n          ref={moreRef}\n        >\n          <SvgIcon fontSize=\"small\">\n            <MoreIcon />\n          </SvgIcon>\n        </IconButton>\n      </Tooltip>\n      <Menu\n        anchorEl={moreRef.current}\n        keepMounted\n        elevation={1}\n        onClose={handleMenuClose}\n        open={openMenu}\n      >\n        <MenuItem>\n          <ListItemIcon>\n            <SvgIcon fontSize=\"small\">\n              <SlashIcon />\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText primary=\"Block contact\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <SvgIcon fontSize=\"small\">\n              <TrashIcon />\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText primary=\"Delete thread\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <SvgIcon fontSize=\"small\">\n              <ArchiveIcon />\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText primary=\"Archive thread\" />\n        </MenuItem>\n        <MenuItem>\n          <ListItemIcon>\n            <SvgIcon fontSize=\"small\">\n              <BellOffIcon />\n            </SvgIcon>\n          </ListItemIcon>\n          <ListItemText primary=\"Mute notifications\" />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n};\n\nDetailHeader.propTypes = {\n  className: PropTypes.string,\n  participants: PropTypes.array\n};\n\nDetailHeader.defaultProps = {\n  participants: []\n};\n\nexport default DetailHeader;\n","import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { Lightbox } from 'react-modal-image';\nimport {\n  Avatar,\n  Box,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport useAuth from 'src/hooks/useAuth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginBottom: theme.spacing(2),\n    display: 'flex'\n  },\n  avatar: {\n    height: 32,\n    width: 32\n  },\n  image: {\n    cursor: 'pointer',\n    height: 'auto',\n    maxWidth: '100%',\n    width: 380\n  }\n}));\n\nconst MessageItem = ({\n  className,\n  message,\n  thread,\n  ...rest\n}) => {\n  const classes = useStyles();\n  const { user } = useAuth();\n  const [selectedImage, setSelectedImage] = useState(null);\n\n  // Since chat mock db is not synced with external auth providers\n  // we set the user details from user auth state instead of thread participants\n  const sender = thread.participants.find((_participant) => _participant.id === message.senderId);\n  const senderDetails = message.senderId === '5e86809283e28b96d2d38537'\n    ? {\n      avatar: user.avatar,\n      name: 'Me',\n      type: 'user'\n    } : {\n      avatar: sender.avatar,\n      name: sender.name,\n      type: 'contact'\n    };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Box\n        display=\"flex\"\n        maxWidth={500}\n        ml={senderDetails.type === 'user' ? 'auto' : 0}\n      >\n        <Avatar\n          className={classes.avatar}\n          src={senderDetails.avatar}\n        />\n        <Box ml={2}>\n          <Box\n            bgcolor={senderDetails.type === 'user' ? 'secondary.main' : 'background.default'}\n            borderRadius=\"borderRadius\"\n            boxShadow={1}\n            color={senderDetails.type === 'user' ? 'secondary.contrastText' : 'text.primary'}\n            px={2}\n            py={1}\n          >\n            <Link\n              color=\"inherit\"\n              component={RouterLink}\n              to=\"#\"\n              variant=\"h6\"\n            >\n              {senderDetails.name}\n            </Link>\n            <Box mt={1}>\n              {message.contentType === 'image' ? (\n                <Box\n                  mt={2}\n                  onClick={() => setSelectedImage(message.body)}\n                >\n                  <img\n                    alt=\"Attachment\"\n                    className={classes.image}\n                    src={message.body}\n                  />\n                </Box>\n              ) : (\n                  <Typography\n                    color=\"inherit\"\n                    variant=\"body1\"\n                  >\n                    {message.body}\n                  </Typography>\n                )}\n            </Box>\n          </Box>\n          <Box\n            mt={1}\n            display=\"flex\"\n            justifyContent=\"flex-end\"\n          >\n            <Typography\n              noWrap\n              color=\"textSecondary\"\n              variant=\"caption\"\n            >\n              {moment(message.createdAt).fromNow()}\n            </Typography>\n          </Box>\n        </Box>\n      </Box>\n      {selectedImage && (\n        <Lightbox\n          large={selectedImage}\n          onClose={() => setSelectedImage(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nMessageItem.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.object.isRequired,\n  thread: PropTypes.object.isRequired\n};\n\nexport default MessageItem;\n","import React, {\n  useEffect,\n  useRef\n} from 'react';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core';\nimport MessageItem from './MessageItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}));\n\nconst MessageList = ({\n  className,\n  thread,\n  ...rest\n}) => {\n  console.log(thread)\n  const classes = useStyles();\n  const scrollRef = useRef(null);\n\n  useEffect(() => {\n    const scrollMessagesToBottom = () => {\n      if (scrollRef.current) {\n        scrollRef.current._container.scrollTop = scrollRef.current._container.scrollHeight;\n      }\n    };\n\n    scrollMessagesToBottom();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [thread.messages]);\n\n  return (\n    <PerfectScrollbar\n      className={clsx(classes.root, className)}\n      options={{ suppressScrollX: true }}\n      ref={scrollRef}\n      {...rest}\n    >\n      {thread.messages.map((message) => (\n        <MessageItem\n          key={message.id}\n          message={message}\n          thread={thread}\n        />\n      ))}\n    </PerfectScrollbar>\n  );\n};\n\nMessageItem.propTypes = {\n  className: PropTypes.string,\n  thread: PropTypes.object.isRequired\n};\n\nexport default MessageList;\n","import React, {\n  useRef,\n  useState\n} from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Avatar,\n  Divider,\n  IconButton,\n  Input,\n  Paper,\n  SvgIcon,\n  Tooltip,\n  makeStyles\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport { Send as SendIcon } from 'react-feather';\nimport useAuth from 'src/hooks/useAuth';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    alignItems: 'center',\n    backgroundColor: theme.palette.background.default,\n    display: 'flex',\n    padding: theme.spacing(1, 2)\n  },\n  inputContainer: {\n    flexGrow: 1,\n    marginLeft: theme.spacing(2),\n    padding: theme.spacing(1)\n  },\n  divider: {\n    height: 24,\n    width: 1\n  },\n  fileInput: {\n    display: 'none'\n  }\n}));\n\nconst MessageComposer = ({\n  className,\n  disabled,\n  onSend,\n  ...rest\n}) => {\n  disabled=false\n  const classes = useStyles();\n  const { user } = useAuth();\n  const fileInputRef = useRef(null);\n  const [body, setBody] = useState('');\n\n  const handleAttach = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setBody(event.target.value);\n  };\n\n  const handleKeyUp = (event) => {\n    if (event.keyCode === 13) {\n      handleSend();\n    }\n  };\n\n  const handleSend = () => {\n    if (!body) {\n      return;\n    }\n\n    if (onSend) {\n      onSend(body);\n    }\n\n    setBody('');\n  };\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Avatar\n        alt=\"Person\"\n        src={user.avatar}\n      />\n      <Paper\n        variant=\"outlined\"\n        className={classes.inputContainer}\n      >\n        <Input\n          disableUnderline\n          fullWidth\n          value={body}\n          onChange={handleChange}\n          onKeyUp={handleKeyUp}\n          placeholder=\"Leave a message\"\n          disabled={disabled}\n        />\n      </Paper>\n      <Tooltip title=\"Send\">\n        <span>\n          <IconButton\n            color=\"secondary\"\n            disabled={!body || disabled}\n            onClick={handleSend}\n          >\n            <SvgIcon fontSize=\"small\">\n              <SendIcon />\n            </SvgIcon>\n          </IconButton>\n        </span>\n      </Tooltip>\n      <Divider className={classes.divider} />\n      <Tooltip title=\"Attach photo\">\n        <span>\n          <IconButton\n            edge=\"end\"\n            onClick={handleAttach}\n            disabled={disabled}\n          >\n            <AddPhotoIcon />\n          </IconButton>\n        </span>\n      </Tooltip>\n      <Tooltip title=\"Attach file\">\n        <span>\n          <IconButton\n            edge=\"end\"\n            onClick={handleAttach}\n            disabled={disabled}\n          >\n            <AttachFileIcon />\n          </IconButton>\n        </span>\n      </Tooltip>\n      <input\n        className={classes.fileInput}\n        ref={fileInputRef}\n        type=\"file\"\n      />\n    </div>\n  );\n};\n\nMessageComposer.propTypes = {\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  onSend: PropTypes.func\n};\n\nMessageComposer.defaultProps = {\n  disabled: false,\n  onSend: () => {}\n};\n\nexport default MessageComposer;\n","import React, { useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {\n  Box,\n  Divider,\n  makeStyles\n} from '@material-ui/core';\nimport { useDispatch, useSelector } from 'src/store';\nimport {\n  getThread,\n  markThreadAsSeen,\n  resetActiveThread,\n  getParticipants,\n  addRecipient,\n  removeRecipient\n} from 'src/slices/chat';\nimport ComposeHeader from './ComposeHeader';\nimport DetailHeader from './DetailHeader';\nimport MessageList from './MessageList';\nimport MessageComposer from './MessageComposer';\n\nconst threadSelector = (state) => {\n  const { threads, activeChatId } = state.chat;\n  console.log(activeChatId)\n  const thread = threads.byId['5e867fa7082c3c5921403a26'];\n\n  if (thread) {\n    return thread;\n  }\n\n  return {\n    id: null,\n    messages: [],\n    participants: [],\n    unreadMessages: 0\n  };\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1\n  }\n}));\n\nconst Chat = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { threadKey } = useParams();\n  const { activeChatId, participants, recipients } = useSelector((state) => state.chat);\n  const thread = useSelector((state) => threadSelector(state));\n\n  // In our case there two possible routes\n  // one that contains chat/new and one with a chat/:threadKey\n  // if threadKey does not exist, it means that the chat is in compose mode\n  const mode = threadKey ? 'DETAIL' : 'COMPOSE';\n\n  const handleAddRecipient = (recipient) => {\n    dispatch(addRecipient(recipient));\n  };\n\n  const handleRemoveRecipient = (recipientId) => {\n    dispatch(removeRecipient(recipientId));\n  };\n\n  const handleSendMessage = async (value) => {\n    try {\n      // Handle send message\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  useEffect(() => {\n    const getDetails = async () => {\n      dispatch(getParticipants(threadKey));\n\n      try {\n        await dispatch(getThread(threadKey));\n      } catch (err) {\n        // If thread key is not a valid key (thread id or username)\n        // the server throws an error, this means that the user tried a shady route\n        // and we redirect him on the compose route\n        console.error(err);\n        history.push('/app/chat/new');\n      }\n    };\n\n    // If path contains a thread key we do the following:\n    // 1) Load the thread participants based on the key\n    // 2) Try to find a related thread based on the key, it might not exist if it is a new tread\n    if (threadKey) {\n      getDetails();\n    } else {\n      // If no thread key specifid, but an active thread id exists in the\n      // store, reset that key. This means that the user navigated from details mode to compose\n      if (activeChatId) {\n        dispatch(resetActiveThread())\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [threadKey]);\n\n  useEffect(() => {\n    if (activeChatId) {\n      // Maybe we should also check if active thread\n      // has unread messages before triggering this\n      dispatch(markThreadAsSeen(activeChatId));\n    }\n  }, [dispatch, activeChatId]);\n\n  return (\n    <div className={classes.root}>\n      \n      <Box\n        flexGrow={1}\n        overflow=\"hidden\"\n      >\n        <MessageList thread={thread} />\n      </Box>\n      <Divider />\n      <MessageComposer\n        disabled\n        onSend={handleSendMessage}\n      />\n    </div>\n  );\n};\n\nexport default Chat;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  TextField,\n  makeStyles,\n  CardMedia,\n  FormControlLabel,\n  RadioGroup,\n  Radio,\n  Checkbox,\n  Typography\n} from '@material-ui/core';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport wait from 'src/utils/wait';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport { useHistory } from 'react-router-dom';\nimport { getVideoQuestion,setShowVideo } from '../../../api/livestreams';\nimport Chat from '../Chat';\nimport { getThreads } from 'src/slices/chat';\nimport { useDispatch } from 'src/store';\nimport { set } from 'numeral';\n\nconst useStyles = makeStyles(() => ({ root: {} }));\n\nconst LivestreamViewPage = ({ className, video, ...rest }) => {\n\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getThreads());\n  }, [dispatch]);\n  var title;\n  if (video) {\n    title = video.title;\n  }\n  var url;\n  if (video) {\n    url = video.url;\n  }\n  const history = useHistory();\n\n  const isMountedRef = useIsMountedRef();\n  const classes = useStyles();\n  let [questions, setQuestions] = useState([]);\n  let [show, setShow] = useState('');\n  const getLive = useCallback(async () => {\n    try {\n      const questions = await getVideoQuestion(video.id);\n      console.log(questions);\n      if (isMountedRef.current) {\n        setQuestions(questions);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getLive();\n  }, [getLive]);\n  const doClick = (e, id) => {\n    let v='';\n    if (id !== show) {\n      v=id\n    }\n    setShow(v);\n    setShowVideo(video.id,v)\n  };\n  return (\n    <Formik\n      initialValues={{\n        id: video.id || '',\n        title: title || '',\n        url: url || '',\n        question: '',\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        title: Yup.string().max(255)\n      })}\n      onSubmit={async (\n        values,\n        { resetForm, setErrors, setStatus, setSubmitting }\n      ) => {\n        try {\n          console.log(values);\n          // NOTE: Make API request\n          await wait(500);\n          history.push('/teacher/management/livestream');\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n        errors,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n        setFieldValue,\n        isSubmitting,\n        touched,\n        values\n      }) => (\n        <form\n          className={clsx(classes.root, className)}\n          onSubmit={handleSubmit}\n          {...rest}\n        >\n          <Card>\n            <CardContent>\n              <input type=\"hidden\" name=\"id\" required value={values.id} />\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.title && errors.title)}\n                    fullWidth\n                    helperText={touched.title && errors.title}\n                    label=\"Tiêu đề\"\n                    name=\"title\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    value={values.title}\n                    variant=\"outlined\"\n                  />\n                </Grid>\n\n                <Grid item md={6} xs={12}>\n                  <TextField\n                    error={Boolean(touched.content_type && errors.content_type)}\n                    fullWidth\n                    helperText={touched.content_type && errors.content_type}\n                    label=\"Loại Content\"\n                    name=\"content_type\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    required\n                    disabled\n                    value=\"livestream\"\n                    variant=\"outlined\"\n                  />\n                </Grid>\n                <Grid item md={12} xs={12}>\n                  <Typography gutterBottom variant=\"h6\" color=\"textPrimary\">\n                    Question\n                  </Typography>\n                  <Typography\n                    gutterBottom\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Chọn câu hỏi để hiển thị trên video\n                  </Typography>\n\n                  <List className={classes.questions}>\n                  <Grid container spacing={3}>\n                {questions.map((quest) => {\n                  const labelId = `checkbox-list-tag-${quest.id}`;\n\n                  return (\n                    <Grid item md={3} xs={12} key={quest.id}>\n                    <ListItem key={quest.id} role={undefined} dense button  onClick={e => {\n                      doClick(e, quest.id);\n                    }}>\n                      <ListItemIcon>\n                        <Checkbox\n                          edge=\"start\"\n                          checked={quest.id == show}\n                          tabIndex={-1}\n                          disableRipple\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </ListItemIcon>\n                      <ListItemText id={quest.id} primary={`${quest.title}`} />\n                    </ListItem>\n                    </Grid>\n                  );\n                })}\n              </Grid>\n                  </List>\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <CardMedia\n                    component=\"iframe\"\n                    height=\"360\"\n                    image={values.url + '?autoplay=1'}\n                    title=\"Live from space album cover\"\n                    allow=\"autoPlay\"\n                  />\n                </Grid>\n                <Grid item md={6} xs={12}>\n                  <Chat/>\n                </Grid>\n                \n              </Grid>\n            </CardContent>\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nLivestreamViewPage.propTypes = {\n  className: PropTypes.string,\n  video: PropTypes.object.isRequired\n};\n\nexport default LivestreamViewPage;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <div\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Breadcrumbs\n        separator={<NavigateNextIcon fontSize=\"small\" />}\n        aria-label=\"breadcrumb\"\n      >\n      <Link\n        variant=\"body1\"\n        color=\"inherit\"\n        to=\"/hbon \"\n        component={RouterLink}\n      >\n        Trang chủ\n      </Link>\n      <Link\n        variant=\"body1\"\n        color=\"inherit\"\n        to=\"/hbon/management/contents\"\n        component={RouterLink}\n      >\n        Livestream\n      </Link>\n      </Breadcrumbs>\n      <Typography\n        variant=\"h3\"\n        color=\"textPrimary\"\n      >\n        Trực tiếp\n      </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport PropTypes from 'prop-types';\nimport { Box, Container, makeStyles } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport LivestreamViewPage from './LivestreamViewPage';\nimport Header from './Header';\nimport { getVideoApi } from '../../../api/livestreams';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst LivestreamView = (props) => {\n  const { videoId } = props.match.params;\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [video, setVideo] = useState(null);\n\n  const getVideo = useCallback(async () => {\n    try {\n      let video = await getVideoApi(videoId);\n\n      if (isMountedRef.current) {\n        setVideo(video);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {getVideo();}, [getVideo]);\n\n  if (!video) {\n    return null;\n  }\n\n  return (\n    <Page className={classes.root} title=\"Content Edit\">\n      <Container maxWidth={false}>\n        <Header/>\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <LivestreamViewPage video={video}/>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\nexport default LivestreamView;\n"],"sourceRoot":""}