{"version":3,"sources":["hooks/useIsMountedRef.js","components/MoodleUsers.js","views/schools/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","useStyles","makeStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingTop","spacing","paddingBottom","MoodleUsersListView","classes","isMountedRef","useState","users","getUsers","useCallback","a","url","console","log","axios","get","response","error","Page","className","title","Container","maxWidth","Box","mt","JSON","stringify","display","flexDirection","banner","paper","borderBottom","divider","bannerChip","marginRight","methodIcon","height","marginLeft","cardContainer","cardContent","padding","currentMethodIcon","width","maxHeight","SchoolView","Typography","mb","justifyContent","to","Logo","Card","CardContent","MoodleUsers"],"mappings":"iKAAA,WAYeA,IAVS,WACtB,IAAMC,EAAYC,kBAAO,GAMzB,OAJAC,qBAAU,kBAAM,WACdF,EAAUG,SAAU,KACnB,IAEIH,I,+LCODI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,WAAWC,KAC1CC,UAAW,OACXC,WAAYP,EAAMQ,QAAQ,GAC1BC,cAAeT,EAAMQ,QAAQ,QAmDlBE,EA/Ca,WAC1B,IAAMC,EAAUb,IACVc,EAAenB,cAFW,EAGNoB,mBAAS,IAHH,mBAGzBC,EAHyB,KAK1BC,GAL0B,KAKfC,sBAAW,sBAAC,8BAAAC,EAAA,sEAEV,mCACE,mCACE,sBACfC,EAAM,+LAEVC,QAAQC,IAAIF,GAPa,SAQJG,IAAMC,IAAIJ,GARN,OAQrBK,EARqB,OASzBJ,QAAQC,IAAIG,GATa,kDAoBzBJ,QAAQK,MAAR,MApByB,0DAsB1B,CAACZ,KAMJ,OAJAhB,qBAAU,WACRmB,MACC,CAACA,IAGF,kBAACU,EAAA,EAAD,CACEC,UAAWf,EAAQV,KACnB0B,MAAM,iBAEN,kBAACC,EAAA,EAAD,CAAWC,UAAU,GACnB,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACT,6BAAK,6BAAMC,KAAKC,UAAUnB,EAAO,KAAM,SCnD3ChB,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,gBAAiBF,EAAMG,QAAQC,WAAWC,KAC1C6B,QAAS,OACTC,cAAe,SACf7B,UAAW,SAEb8B,OAAQ,CACNlC,gBAAiBF,EAAMG,QAAQC,WAAWiC,MAC1C5B,cAAeT,EAAMQ,QAAQ,GAC7BD,WAAYP,EAAMQ,QAAQ,GAC1B8B,aAAa,aAAD,OAAetC,EAAMG,QAAQoC,UAE3CC,WAAY,CACVC,YAAazC,EAAMQ,QAAQ,IAE7BkC,WAAY,CACVC,OAAQ,GACRC,WAAY5C,EAAMQ,QAAQ,GAC1BiC,YAAazC,EAAMQ,QAAQ,IAE7BqC,cAAe,CACbpC,cAAe,GACfF,WAAY,IAEduC,YAAa,CACXC,QAAS/C,EAAMQ,QAAQ,GACvB0B,QAAS,OACTC,cAAe,SACf7B,UAAW,KAEb0C,kBAAmB,CACjBL,OAAQ,GACR,UAAW,CACTM,MAAO,OACPC,UAAW,aA2CFC,UAtCI,WACjB,IAAMxC,EAAUb,IAGhB,OACE,kBAAC2B,EAAA,EAAD,CACEC,UAAWf,EAAQV,KACnB0B,MAAM,UAEN,yBAAKD,UAAWf,EAAQyB,QACtB,kBAACR,EAAA,EAAD,CAAWC,SAAS,MACpB,kBAACuB,EAAA,EAAD,iBAGF,kBAACxB,EAAA,EAAD,CACEF,UAAWf,EAAQkC,cACnBhB,SAAS,MAET,kBAACC,EAAA,EAAD,CACEuB,GAAI,EACJnB,QAAQ,OACRoB,eAAe,UAEf,kBAAC,IAAD,CAAYC,GAAG,KACb,kBAACC,EAAA,EAAD,QAGJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAahC,UAAWf,EAAQmC,aAC9B,kBAACM,EAAA,EAAD,cACA,kBAACO,EAAD","file":"static/js/113.44c746d6.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import React, {\n    useState,\n    useEffect,\n    useCallback\n  } from 'react';\n  import {\n    Box,\n    Container,\n    makeStyles,\n  } from '@material-ui/core';\n  import axios from 'src/utils/axios';\n  import Page from 'src/components/Page';\n  import useIsMountedRef from 'src/hooks/useIsMountedRef';\n  \n  \n  \n  const useStyles = makeStyles((theme) => ({\n    root: {\n      backgroundColor: theme.palette.background.dark,\n      minHeight: '100%',\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    }\n  }));\n  \n  const MoodleUsersListView = () => {\n    const classes = useStyles();\n    const isMountedRef = useIsMountedRef();\n    const [users, setUsers] = useState([]);\n  \n    const getUsers = useCallback(async () => {\n      try {\n        var sm_token = \"ce2dd248f0d2039b8c842a8eeb6bf5e6\";\n        var core_token = \"75e7aa1389a159f041b28ac96556850e\";\n        var functionname = \"core_user_get_users\";\n        var url = \"http://moodle39.anhnn.vn/webservice/rest/server.php?wstoken=\" + core_token + \"&wsfunction=\" + functionname + \"&moodlewsrestformat=json\"\n        +\"&criteria[0][key]=id&criteria[0][value]=2\";\n        console.log(url);\n        let response = await axios.get(url);\n        console.log(response)\n        // .then(resp => {\n    \n        //       console.log(resp.users);\n        //   const response = resp.users;\n    \n        //   if (isMountedRef.current) {\n        //     setUsers(response);\n        //   }\n        // });\n      } catch (err) {\n        console.error(err);\n      }\n    }, [isMountedRef]);\n  \n    useEffect(() => {\n      getUsers();\n    }, [getUsers]);\n  \n    return (\n      <Page\n        className={classes.root}\n        title=\"Customer List\"\n      >\n        <Container maxWidth={false}>\n          <Box mt={3}>\n          <div><pre>{JSON.stringify(users, null, 2) }</pre></div>\n          </Box>\n        </Container>\n      </Page>\n    );\n  };\n  \n  export default MoodleUsersListView;\n  ","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Container,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Logo from 'src/components/Logo';\n import MoodleUsersListView from 'src/components/MoodleUsers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh'\n  },\n  banner: {\n    backgroundColor: theme.palette.background.paper,\n    paddingBottom: theme.spacing(2),\n    paddingTop: theme.spacing(2),\n    borderBottom: `1px solid ${theme.palette.divider}`\n  },\n  bannerChip: {\n    marginRight: theme.spacing(2)\n  },\n  methodIcon: {\n    height: 30,\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2)\n  },\n  cardContainer: {\n    paddingBottom: 80,\n    paddingTop: 80,\n  },\n  cardContent: {\n    padding: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: 400\n  },\n  currentMethodIcon: {\n    height: 40,\n    '& > img': {\n      width: 'auto',\n      maxHeight: '100%'\n    }\n  }\n}));\n\nconst SchoolView = () => {\n  const classes = useStyles();\n  \n\n  return (\n    <Page\n      className={classes.root}\n      title=\"School\"\n    >\n      <div className={classes.banner}>\n        <Container maxWidth=\"md\">\n        <Typography>Banner</Typography>\n        </Container>\n      </div>\n      <Container\n        className={classes.cardContainer}\n        maxWidth=\"sm\"\n      >\n        <Box\n          mb={8}\n          display=\"flex\"\n          justifyContent=\"center\"\n        >\n          <RouterLink to=\"/\">\n            <Logo />\n          </RouterLink>\n        </Box>\n        <Card>\n          <CardContent className={classes.cardContent}>\n            <Typography>Hello</Typography>\n            <MoodleUsersListView/>\n          </CardContent>\n        </Card>\n      </Container>\n    </Page>\n  );\n};\n\nexport default SchoolView;\n"],"sourceRoot":""}