{"version":3,"sources":["hooks/useIsMountedRef.js","api/auto.js","views/hbonctv/automation/AutoCreateView/AutoCreateForm.js","views/hbonctv/automation/AutoCreateView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","listLiveEvent","a","ListLiveEvent","id","title","start","Date","app","firestore","collection","where","get","docs","map","doc","push","data","console","log","listPopup","Axios","method","url","process","headers","property","result","popups","resPop","autoSubmit","linkBitly","db","option","policy","liveOption","liveContentRef","exists","old_content","new_content","replace","set","sendNotify","error_code","message","getLinkBitly","linkLive","LiveEventId","live_event_id","useStyles","makeStyles","theme","brief","height","tags","position","overflow","maxHeight","categories","pre","backgroundColor","toolbar","marginBottom","borderLeft","borderTop","borderRight","borderBottom","palette","divider","background","editor","padding","spacing","color","text","primary","AutoCreateForm","classes","isMountedRef","useState","isGetLinkSuccess","setStatusGetLink","isAutoSubmit","setStatusAutoSubmit","liveOptions","setLiveOptions","getLiveOptions","useCallback","error","popupOptions","setPopupOptions","getPopupOptions","initialValues","popupOption","submit","validationSchema","Yup","shape","required","onSubmit","values","resetForm","setErrors","setStatus","setSubmitting","wait","LinkBitLy","link","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Card","CardHeader","Divider","CardContent","Box","mb","Alert","onClose","severity","display","justifyContent","my","CircularProgress","Grid","container","item","md","xs","TextField","Boolean","fullWidth","helperText","label","name","onBlur","onChange","value","variant","length","className","select","SelectProps","native","key","alignItems","mt","ml","Checkbox","checked","Typography","FormHelperText","Button","disabled","size","type","root","dark","minHeight","paddingTop","paddingBottom","avatar","colors","red","stepper","AutoForm","Page","Container","maxWidth","Breadcrumbs","separator","fontSize","aria-label","Link","to","component","RouterLink"],"mappings":"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","file":"static/js/112.3bb6ef68.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import firebase from 'firebase';\nimport app from './firebase';\nimport Axios from 'axios';\nimport validUrl  from 'valid-url';\n\nexport const listLiveEvent = async () => {\n  try {\n   let ListLiveEvent = [{\n      id:0,\n      title: \"Chọn live Event\"\n    }];\n    const start = new Date();\n    let querySnapshot = await app.firestore().collection(\"live_events\").where('start_at','>=', start).get();\n    querySnapshot.docs.map((doc) => {\n      ListLiveEvent.push({\n        id: doc.id,\n        ...doc.data()\n      });\n    });\n    return ListLiveEvent;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const listPopup = async () => {\n  try {\n    let result = await  Axios({\n      method: 'GET',\n      url: process.env.REACT_APP_SERVER_URL+'/api/getpopup',\n      headers:{\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin' : '*',\n        'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n      }\n    });\n    let popups = result.data;\n    let resPop = [{\n      id:1,\n      title:'Chọn PopUp'\n    }];\n    for (let property in popups) {\n      resPop.push(popups[property]);\n    }\n    console.log(resPop);\n    return resPop;\n  }catch (err){\n  console.log(err);\n    let resPop = [{\n      id:1,\n      title:'Chọn PopUp'\n    }];\n  return resPop;\n}\n};\n\nexport const autoSubmit = async (data, linkBitly) => {\n  try {\n    const db = app.firestore();\n    let option = '';\n    if(data.policy === true){\n      option = 'keep_time'\n    }\n    if(typeof linkBitly !==\"undefined\"){\n      console.log(data.liveOption);\n      let liveContentRef = db.collection(\"live_events\").doc(data.liveOption).collection(\"detail\").doc(\"content\");\n      let doc = await liveContentRef.get();\n        if (doc.exists) {\n          // console.log(\"Document data:\", doc.data());\n          const  old_content = doc.data().data;\n          const new_content  = old_content.replace('a href=\"https://www.facebook.com/Hocbaionha/live\"', 'a href=\"'+linkBitly+'\"');\n          await db.collection(\"live_events\").doc(data.liveOption).collection(\"detail\").doc(\"content\").set({\"data\": new_content});\n          await sendNotify(data.liveOption, option);\n          return {\n            error_code:0,\n            message:\"Gửi tin nhắn thành công.\"\n          };\n        } else {\n          // doc.data() will be undefined in this case\n          return {\n            error_code:1,\n            message:\"Id live_event không tồn tại.\"\n          }\n        }\n    }else{\n      return {\n        error_code:1,\n        message:\"Link Bitly không tồn tại\"\n      }\n    }\n  }catch (err){\n    console.log(err);\n  }\n};\n\nexport const getLinkBitly = async(linkLive)=>{\n  try {\n    let result = await  Axios({\n      method: 'GET',\n      url: process.env.REACT_APP_SERVER_URL+'/api/getLinkBitly?link_live='+linkLive,\n      headers:{\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin' : '*',\n        'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n      }\n    });\n\n    return  result.data;\n  }catch (err){\n    console.log(err);\n  }\n};\n\nasync function sendNotify(LiveEventId, option){\n  try {\n    let result = await  Axios({\n      method: 'POST',\n      url: process.env.REACT_APP_SERVER_URL+'/api/sendnoti',\n      headers:{\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin' : '*',\n        'Access-Control-Allow-Methods':'GET,PUT,POST,DELETE,PATCH,OPTIONS',\n        'Authorization': 'Bearer f56e78db35ab4ff8c915facfa644c4ad25b6358b',\n      },\n      data: {\n        live_event_id:LiveEventId,\n        option:option\n      }\n    });\n    return  result.data;\n  }catch (err){\n    console.log(err);\n  }\n}\n\n\n\n","import React, { useCallback, useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  CircularProgress,\n  Divider,\n  FormHelperText,\n  Grid,\n  Link,\n  TextField,\n  Typography\n} from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport wait from 'src/utils/wait';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {listLiveEvent, listPopup, autoSubmit, getLinkBitly} from './../../../../api/auto'\nimport useIsMountedRef from '../../../../hooks/useIsMountedRef';\n\nconsole.log(listPopup);\nconst useStyles = makeStyles((theme) => ({\n  brief: {\n    '& .ql-editor':{\n      height:150,\n    }\n  },\n  tags: {\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: 300,\n  } ,\n  categories: {\n    position: 'relative',\n    overflow: 'auto',\n    maxHeight: 300,\n  } ,\n  pre: {\n    backgroundColor: \"#fff\"\n  },\n  toolbar: {\n    marginBottom: 0,\n    borderLeft: 'none',\n    borderTop: 'none',\n    borderRight: 'none',\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    background: 'transparent'\n  },\n  editor: {\n    padding: theme.spacing(2),\n    color: theme.palette.text.primary\n  }\n}));\n\nconst AutoCreateForm = () => {\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [isGetLinkSuccess, setStatusGetLink] = useState();\n  const [isAutoSubmit, setStatusAutoSubmit] = useState();\n\n  const [liveOptions, setLiveOptions] = useState([]);\n\n  const getLiveOptions = useCallback(async () => {\n    try {\n      const liveOptions = await listLiveEvent();\n      console.log(liveOptions);\n      if (isMountedRef.current) {\n        setLiveOptions(liveOptions);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getLiveOptions();\n  }, [getLiveOptions]);\n\n  const [popupOptions, setPopupOptions] = useState([]);\n\n\n   const getPopupOptions = useCallback(async () => {\n    try {\n      const popupOptions = await listPopup();\n      console.log(popupOptions);\n      if (isMountedRef.current) {\n        setPopupOptions(popupOptions);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getPopupOptions();\n  }, [getPopupOptions]);\n\n  return (\n    <Formik\n      initialValues={{\n        liveOption:'',\n        linkLive: '',\n        popupOption: '',\n        policy: false,\n        submit: null\n      }}\n      validationSchema={Yup.object().shape({\n        linkLive: Yup.string().required('Required'),\n        liveOption: Yup.string().required('Required'),\n      })}\n      onSubmit={async (values, {\n        resetForm,\n        setErrors,\n        setStatus,\n        setSubmitting\n      }) => {\n        try {\n          // NOTE: Make API request\n          await wait(1000);\n          // resetForm();\n          let LinkBitLy = await getLinkBitly(values.linkLive);\n          if(LinkBitLy.link){\n            setStatusGetLink(true);\n            let result = await autoSubmit(values,  LinkBitLy.link);\n            console.log(result);\n            if(result.error_code ===0){\n              setStatusAutoSubmit(true);\n            }else{\n              setStatusAutoSubmit(false);\n            }\n\n          }else{\n            setStatusGetLink(false);\n            values.linkBitly = 'undefined';\n          }\n          // let result = await autoSubmit(values);\n          console.log(LinkBitLy);\n          setStatus({ success: true });\n          setSubmitting(false);\n        } catch (err) {\n          console.error(err);\n          setStatus({ success: false });\n          setErrors({ submit: err.message });\n          setSubmitting(false);\n        }\n      }}\n    >\n      {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          touched,\n          values\n        }) => (\n        <Card>\n          <CardHeader title=\"Basic Form\" />\n          <Divider />\n          <CardContent>\n            {isGetLinkSuccess===true && (\n              <Box mb={3}>\n                <Alert\n                  onClose={() => setStatusGetLink()}\n                  severity=\"success\"\n                >\n                  Lấy link thành công!\n                </Alert>\n              </Box>\n            )}\n            {isGetLinkSuccess===false && (\n              <Box mb={3}>\n                <Alert\n                  onClose={() => setStatusGetLink()}\n                  severity=\"error\"\n                >\n                  Lấy link thất bại!\n                </Alert>\n              </Box>\n            )}\n\n            {isAutoSubmit===true && (\n              <Box mb={3}>\n                <Alert\n                  onClose={() => setStatusAutoSubmit(false)}\n                  severity=\"success\"\n                >\n                  Gửi tin nhắn thành công.\n                </Alert>\n              </Box>\n            )}\n\n            {isAutoSubmit===false && (\n              <Box mb={3}>\n                <Alert\n                  onClose={() => setStatusAutoSubmit(false)}\n                  severity=\"error\"\n                >\n                  Gửi tin nhắn thất bại.\n                </Alert>\n              </Box>\n            )}\n\n            {isSubmitting ? (\n              <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                my={5}\n              >\n                <CircularProgress />\n              </Box>\n            ) : (\n              <form onSubmit={handleSubmit}>\n                <Grid\n                  container\n                  spacing={2}\n                >\n                  <Grid\n                    item\n                    md={12}\n                    xs={12}\n                  >\n                    <TextField\n                      error={Boolean(touched.linkLive && errors.linkLive)}\n                      fullWidth\n                      helperText={touched.linkLive && errors.linkLive}\n                      label=\"Link Live\"\n                      name=\"linkLive\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.linkLive}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    xs={12}\n                  >\n                    { liveOptions.length > 0 && (<TextField className={classes.liveOptions}\n                      error={Boolean(touched.liveOption && errors.liveOption)}\n                      label=\"Live Event\"\n                      name=\"liveOption\"\n                      onChange={handleChange}\n                      select\n                      SelectProps={{ native: true }}\n                      value={values.liveOption}\n                      variant=\"outlined\"\n                      fullWidth\n                    >\n                      {liveOptions.map((option) => (\n                        <option\n                          key={option.id}\n                          value={option.id}\n                        >\n                          {option.title}\n                        </option>\n                      ))}\n                    </TextField>\n                      )}\n                  </Grid>\n                  <Grid\n                    item\n                    md={12}\n                    xs={12}\n                  >\n                    { popupOptions.length > 0 && (<TextField className={classes.popupOptions}\n                      label=\"Popup Moodle\"\n                      name=\"popupOption\"\n                      onChange={handleChange}\n                      select\n                      SelectProps={{ native: true }}\n                      value={values.popupOption}\n                      variant=\"outlined\"\n                      fullWidth\n                    >\n                      {popupOptions.map((option) => (\n                        <option\n                          key={option.id}\n                          value={option.id}\n                        >\n                          {option.title}\n                        </option>\n                      ))}\n                    </TextField>\n                    )}\n                  </Grid>\n\n\n                </Grid>\n\n                <Box\n                  alignItems=\"center\"\n                  display=\"flex\"\n                  mt={2}\n                  ml={-1}\n                >\n                  <Checkbox\n                    checked={values.policy}\n                    name=\"policy\"\n                    onChange={handleChange}\n                  />\n                  <Typography\n                    variant=\"body2\"\n                    color=\"textSecondary\"\n                  >\n                    Run auto  keep Start_time  Event\n                  </Typography>\n                </Box>\n                {Boolean(touched.policy && errors.policy) && (\n                  <FormHelperText error>\n                    {errors.policy}\n                  </FormHelperText>\n                )}\n                {errors.liveOption && <div>{errors.liveOption}</div>}\n                <Box mt={2}>\n                  <Button\n                    color=\"secondary\"\n                    disabled={isSubmitting}\n                    fullWidth\n                    size=\"large\"\n                    type=\"submit\"\n                    variant=\"contained\"\n                  >\n                    Run Auto\n                  </Button>\n                </Box>\n              </form>\n            )}\n          </CardContent>\n        </Card>\n      )}\n\n    </Formik>\n  );\n};\n\nexport default AutoCreateForm;\n","import React, { useState } from 'react';\nimport AutoCreateForm from './AutoCreateForm'\nimport 'react-form-builder2/dist/app.css';\nimport Page from 'src/components/Page';\nimport {\n  makeStyles,\n  colors, Container, Breadcrumbs, Link, Typography, Box, Grid\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/core/SvgIcon/SvgIcon';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  },\n  avatar: {\n    backgroundColor: colors.red[600]\n  },\n  stepper: {\n    backgroundColor: 'transparent'\n  }\n}));\nconst AutoForm  = () => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Formik Form\"\n    >\n      <Container maxWidth=\"lg\">\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\"/>}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/app\"\n            component={RouterLink}\n          >\n            Dashboard\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Forms\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Formik\n        </Typography>\n        <Box mt={3}>\n          <Grid container>\n            <Grid\n              item\n              xs={12}\n              md={6}\n            >\n              <AutoCreateForm />\n            </Grid>\n          </Grid>\n        </Box>\n      </Container>\n    </Page>\n  );\n};\nexport default AutoForm;\n"],"sourceRoot":""}