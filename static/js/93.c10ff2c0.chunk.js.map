{"version":3,"sources":["hooks/useIsMountedRef.js","api/events.js","views/events/EventListSubmitView/Header.js","views/events/EventListSubmitView/Results.js","views/events/EventListSubmitView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","listAllEvent","a","querySnapshot","app","firestore","collection","where","orderBy","get","event","docs","map","doc","id","data","console","log","listAllEventBySchool","listAllSubmit","event_id","db","submissionData","result","status","studentRef","uid","studentData","exists","userRef","userData","display_name","school_id","point","submit_at","convertTimestamp","created_at","time_work","parseInt","email","grade","class","autosubmit","not_student","lastname","firstname","name","listSubmit","push","listPublicQuizzes","listQuizzesbySchool","addEvent","values","image_full","start_at","getFirestore","FieldValue","serverTimestamp","end_at","school","quizid","quizRef","metadata","eventType","Date","now","detail","arr","tags","filter","item","add","eventRef","set","eventData","fromImage","tool","thumbnail","toFile","image","cover_url","cover_full","storageRef","storage","ref","uploadTask","child","put","on","getStorage","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","state","TaskState","PAUSED","RUNNING","error","code","getDownloadURL","then","downloadURL","update","uploadTask2","cover","deleteEvents","ids","foundURL","delete","err","getEventApi","querySnapshotDetail","eventDetail","queryQuiz","quizname","autoSubmitEvent","eventId","eventid","error_code","message","correct_count","liveRef","liveData","total","quizData","questions","limit","submissionDoc","attemptsCollectionSnapshot","myattempt","selection","aSelection","selectedValue","selection_values","quiz_ref","snapshotX","questionData","options","anAnswer","fraction","value","label","Math","round","correct_quiz_count","grade_max","total_quiz_count","submit_by","updateEvent","timestamp","date","toDate","mm","getMonth","dd","getDate","yyyy","getFullYear","hh","getHours","mn","getMinutes","ss","getSeconds","exportEvent","jsonCustomers","forEach","competition","competitionData","setTimeout","fileName","title","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportEvent_Alldata","device","useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","Header","className","rest","classes","Grid","clsx","container","justify","Breadcrumbs","separator","fontSize","Link","variant","color","to","component","RouterLink","Typography","Button","startIcon","SvgIcon","columns","sort","filterType","Results","events","defaultProps","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","EventListSubmitView","props","match","params","isMountedRef","useState","setEvents","getEvents","useCallback","Page","Container","maxWidth","Box","mt"],"mappings":"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","file":"static/js/93.c10ff2c0.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","import app from './_firebase';\n\nimport {getFirestore} from 'firebase/firestore'\nimport {getStorage} from 'firebase/storage'\nimport { fromImage } from 'imtool';\nimport * as FileSaver from 'file-saver';\nimport * as XLSX from 'xlsx';\n\nexport const listAllEvent = async () => {\n  try {\n    let querySnapshot = null;\n    //live_events\n    // console.log(\"fjdsjfkld\");\n      querySnapshot = await app.firestore().collection('live_events').where(\"type\",\"==\",\"competition\").orderBy('created_at', 'desc').get();\n    // console.log(querySnapshot.id)\n    const event = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      };\n    });\n    return event;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const listAllEventBySchool = async () => {\n  try {\n    let querySnapshot = null;\n    //live_events\n    // console.log(\"fjdsjfkld\");\n      querySnapshot = await app.firestore().collection('live_events').where(\"type\",\"==\",\"school_competition\").orderBy('created_at', 'desc').get();\n    // console.log(querySnapshot.id)\n    const event = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      };\n    });\n    return event;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const listAllSubmit = async (event_id)=>{\n  const id = event_id;\n  const db = app.firestore();\n  if(typeof id !==\"undefined\"){\n    const querySnapshot = await db.collection('live_events').doc(id).collection('submission').get();\n    let listSubmit = await querySnapshot.docs.map(async(doc) => {\n      // let listSubmit = [];\n      // for await (let doc of querySnapshot.docs) {\n      const submissionData = doc.data();\n      let result = {};\n      if(submissionData.status === 2){\n        const studentRef =  db.collection('students').doc(submissionData.uid);\n        const studentData = await studentRef.get();\n        if (!studentData.exists) {\n          const userRef = db.collection('users').doc(submissionData.uid);\n          const userData = await userRef.get();\n          result.display_name = typeof (userData.data().display_name)!==\"undefined\"?userData.data().display_name:submissionData.display_name;\n          result.school_id = typeof(submissionData.school_id)!==\"undefined\"?submissionData.school_id:userData.data().school_id;\n          result.point = submissionData.point;\n          result.submit_at = convertTimestamp(submissionData.submit_at);\n          result.created_at = convertTimestamp(submissionData.created_at);\n          result.time_work =parseInt((submissionData.submit_at - submissionData.created_at)/60);\n          result.email = typeof(userData.data().email)!==\"undefined\"?userData.data().email:'';\n          result.grade = typeof (userData.data().class)!==\"undefined\" ?userData.data().class:'';\n          if(parseInt((submissionData.submit_at - submissionData.created_at)/60)>70){\n            result.autosubmit = \"Tool auto\";\n          }else{\n            result.autosubmit = '';\n          }\n          result.not_student =\"Chưa có trong Student\";\n        } else {\n          result.display_name = typeof (submissionData.display_name)!==\"undefined\"?submissionData.display_name:studentData.data().lastname+studentData.data().firstname;\n          result.school_id = typeof(submissionData.school_id)!==\"undefined\"?submissionData.school_id:studentData.data().school_id;\n          result.point = submissionData.point;\n          result.submit_at =  convertTimestamp(submissionData.submit_at);\n          result.created_at = convertTimestamp(submissionData.created_at);\n          result.time_work =parseInt((submissionData.submit_at - submissionData.created_at)/60);\n          result.email = typeof(studentData.data().email)!==\"undefined\"?studentData.data().email:'';\n          result.grade = typeof (studentData.data().class)!==\"undefined\" ?studentData.data().class.name:'';\n          if(parseInt((submissionData.submit_at - submissionData.created_at)/60)>70){\n            result.autosubmit = \"Tool auto\";\n          }else{\n            result.autosubmit = '';\n          }\n          result.not_student = '';\n        }\n        console.log(result);\n        listSubmit.push(result);\n      }\n    });\n    console.log(listSubmit);\n    return listSubmit;\n  }\n};\n\nexport const listPublicQuizzes = async () => {\n  try {\n    let querySnapshot = null;\n    //live_events\n    // console.log(\"fjdsjfkld\");\n      querySnapshot = await app.firestore().collection('resource/public/quizzes').get();\n    // console.log(querySnapshot.id)\n    const event = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      };\n    });\n    return event;\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const listQuizzesbySchool = async () => {\n  try {\n    let querySnapshot = null;\n    //live_events\n    // console.log(\"fjdsjfkld\");\n      querySnapshot = await app.firestore().collection('/resource/kimchung/quizzes').get();\n    // console.log(querySnapshot.id)\n    const event = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      };\n    });\n    return event;\n  } catch (err) {\n    console.log(err);\n  }\n};\n// addEvent\nexport const addEvent = async (values, image_full) => {\n  if(!('start_at' in values)){\n    values.start_at = getFirestore().FieldValue.serverTimestamp();\n  }\n  if(!('end_at' in values)){\n    values.end_at = getFirestore().FieldValue.serverTimestamp();\n  }\n\n  if(typeof values.school !==null && typeof values.school.id!=='undefined'){\n    let quizRef = await app.firestore().collection('resource/kimchung/quizzes/').doc(values.quizid);\n    values.quizRef=quizRef;\n  }else{\n    let quizRef = await app.firestore().collection('resource/public/quizzes/').doc(values.quizid);\n    values.quizRef=quizRef;\n  }\n\n  var metadata = {\n    eventType: 'image/jpeg'\n  };\n  try {\n    values.created_at=Date.now();\n    if(typeof values.start_at==null){\n      values.start_at=Date.now();\n    }\n    if(typeof values.end_at==null){\n      values.end_at=Date.now();\n    }\n    let detail = ' <news content-type=\\'news\\'>' + values.detail + '</news>';\n    delete values.detail;\n    values.created_at = getFirestore().FieldValue.serverTimestamp();\n    let arr = values.tags;\n    arr = arr.filter(item => item);\n    values.tags = arr;\n    let eventRef = await app.firestore().collection('live_events').add(values);\n\n    let event = await eventRef.get();\n    console.log('done event:' + event.id);\n    eventRef.collection('detail').doc('content').set({ data: detail });\n    let eventData = event.data();\n\n    if (typeof (image_full) == 'undefined') {\n      return;\n    }\n\n    const tool = await fromImage(image_full);\n    const image = await tool.thumbnail(512).toFile();\n    let cover_url = 'public/images/events/' + event.id;\n    let cover_full = 'public/images/events/full/' + event.id;\n    var storageRef = app.storage().ref();\n    var uploadTask = storageRef.child(cover_full).put(image_full, metadata);\n    uploadTask.on(getStorage().TaskEvent.STATE_CHANGED, // or 'state_changed'\n      function(snapshot) {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload cover is ' + progress + '% done');\n        switch (snapshot.state) {\n          case getStorage().TaskState.PAUSED: // or 'paused'\n            console.log('Upload cover is paused');\n            break;\n          case getStorage().TaskState.RUNNING: // or 'running'\n            console.log('Upload cover is running');\n            break;\n        }\n      },\n      function(error) {\n\n        switch (error.code) {\n          case 'storage/unauthorized':\n            console.log('unauthorized');\n            break;\n          case 'storage/canceled':\n            console.log('cancel');\n            break;\n          case 'storage/unknown':\n\n            console.log('unkonwn');\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      },\n      function() {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n          console.log('image full available at', downloadURL);\n          eventData.cover_full = downloadURL;\n          app.firestore().collection('live_events').doc(event.id).update(eventData);\n        });\n      });\n      if (typeof (image) == 'undefined') {\n        return;\n      }\n      var uploadTask2 = storageRef.child(cover_url).put(image, metadata);\n      uploadTask2.on(getStorage().TaskEvent.STATE_CHANGED, // or 'state_changed'\n        function(snapshot) {\n          // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n          var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n          console.log('Upload cover is ' + progress + '% done');\n          switch (snapshot.state) {\n            case getStorage().TaskState.PAUSED: // or 'paused'\n              console.log('Upload cover is paused');\n              break;\n            case getStorage().TaskState.RUNNING: // or 'running'\n              console.log('Upload cover is running');\n              break;\n          }\n        },\n        function(error) {\n\n          switch (error.code) {\n            case 'storage/unauthorized':\n              console.log('unauthorized');\n              break;\n            case 'storage/canceled':\n              console.log('cancel');\n              break;\n            case 'storage/unknown':\n\n              console.log('unkonwn');\n              // Unknown error occurred, inspect error.serverResponse\n              break;\n          }\n        },\n        function() {\n          // Upload completed successfully, now we can get the download URL\n          uploadTask2.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n            console.log('image available at', downloadURL);\n            app.firestore().collection('live_events').doc(event.id).update({cover:downloadURL});\n          });\n        });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteEvents = (ids) => {\n  try {\n    var storageRef = app.storage().ref();\n    ids.map((id) => {\n      console.log(id);\n      let cover_url = 'public/images/events/' + id;\n      let cover_full = 'public/images/events/full' + id;\n\n      storageRef.child(cover_url).getDownloadURL().then(onResolve, onReject);\n\n      function onResolve(foundURL) {\n        storageRef.child(cover_url).delete();\n      }\n\n      function onReject(error) {\n        console.log(error.code);\n      }\n      storageRef.child(cover_full).getDownloadURL().then(onResolve2, onReject2);\n\n      function onResolve2(foundURL) {\n        storageRef.child(cover_full).delete();\n      }\n\n      function onReject2(error) {\n        console.log(error.code);\n      }\n      app.firestore().collection('events').doc(id).collection('detail').doc('content').delete();\n      app.firestore().collection('events').doc(id).delete();\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getEventApi = async (id) => {\n  console.log(id);\n  try {\n    let querySnapshot = await app.firestore().collection('live_events').doc(id).get();\n    const event = querySnapshot.data();\n    event.id = id;\n    console.log(id);\n    let querySnapshotDetail = await app.firestore().collection('live_events').doc(id).collection('detail').doc('content').get();\n    const eventDetail = querySnapshotDetail.data();\n    event.detail = eventDetail.data;\n    console.log(event);\n    let queryQuiz =  await event.quizRef.get();\n    if(queryQuiz.exists) {\n      event.quizname=queryQuiz.data().name;\n    }else{\n      event.quizname=\"Chọn quizzes\"\n    }\n    return event;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const autoSubmitEvent = async function (eventId) {\nconsole.log(eventId);\n  let eventid = eventId;\n  if(eventid==null||eventid==\"\"){\n    return {\n      error_code:1,\n      message:'không tồn tại eventId'\n    };\n  }\n  const db =  app.firestore();\n  let correct_count = 0;\n  const liveRef = await db.collection('live_events').doc(eventid).get();\n  const liveData = await liveRef.data();\n  let total=0;\n  if(liveData!=null){\n    let quizRef = await liveData.quizRef.get();\n    const quizData = await quizRef.data();\n    const questions = quizData.questions;\n    for await (let question of questions) {\n      if(\"id\" in question){\n        total++;\n      }\n    }\n  }\n  const snapshot = await db.collection('live_events').doc(eventid).collection('submission').where(\"status\",\"==\",1).limit(50).get();\n  for await (let submissionDoc of snapshot.docs) {\n    console.log(\"cuongpt\");\n    console.log(submissionDoc);\n    try{\n      const attemptsCollectionSnapshot = await submissionDoc.ref.collection(\"attemps\").get();\n      for await (let anAttempt of attemptsCollectionSnapshot.docs) {\n        const myattempt = anAttempt.data();\n        if(\"selection\" in myattempt)\n          for await (let aSelection of myattempt.selection) {\n            if (aSelection != null)\n            {\n              const selectedValue = aSelection.selection_values[0];\n              const snapshotX = await aSelection.quiz_ref.get();\n              if (snapshotX.exists)\n              {\n                const questionData = snapshotX.data();\n                for await (let anAnswer of questionData.options) {\n                  if (anAnswer.fraction>0){\n                    if (anAnswer.value==selectedValue)\n                    {\n                      correct_count++;\n                      //console.log(\"Right answer: ,\", anAnswer.text,\",\",anAnswer.value,\",\", selectedValue,\",\",doc.ref.path,\",\",doc2.ref.path,\",\",correct_count,\",\",myattempt.display_name);\n                      console.log(correct_count,\",\",submissionDoc.id,snapshotX.data().label);\n                    }\n                  }\n                };\n              }\n            }\n          };\n        // console.log(\"Graded: ,\",doc.ref.path,\",\",correct_count,\",\",myattempt.display_name);\n      };\n      const point = Math.round(correct_count*1000/total)/100;\n      let update = {\n        correct_quiz_count:correct_count,\n        grade:correct_count,\n        grade_max:total,\n        total_quiz_count:total,\n        point:point,\n        status:2,\n        submit_at:await getFirestore().FieldValue.serverTimestamp(),\n        submit_by:\"auto\"\n\n      };\n      await submissionDoc.ref.update(update);\n      // await db.collection('live_events').doc(eventid).collection('submission').doc(submissionDoc.id).update(update);\n      console.log(\"Graded: ,\",submissionDoc.id,\",\",update,\",\",submissionDoc.id);\n      correct_count=0;\n      return {\n        error_code:0,\n        message:'Tất cả các bài thi đã được tự động nộp'\n      };\n    } catch (e) {\n      console.log(submissionDoc.id);\n      console.log( e);\n      return {\n        error_code:1,\n        message:'không tồn tại eventId'\n      };\n    }\n  };\n  return {\n    error_code:0,\n    message:'Tất cả các bài thi đã được tự động nộp'\n  };\n};\n\n\nexport const updateEvent = async (values, image_full) => {\n  if(!('start_at' in values)){\n    values.start_at = getFirestore().FieldValue.serverTimestamp();\n  }\n  if(!('end_at' in values)){\n    values.end_at = getFirestore().FieldValue.serverTimestamp();\n  }\n\n  if(typeof values.school !==null && typeof values.school.id!=='undefined'){\n    let quizRef = await app.firestore().collection('resource/kimchung/quizzes/').doc(values.quizid);\n    values.quizRef=quizRef;\n  }else{\n    let quizRef = await app.firestore().collection('resource/public/quizzes/').doc(values.quizid);\n    values.quizRef=quizRef;\n  }\n\n  var metadata = {\n    eventType: 'image/jpeg'\n  };\n  try {\n    values.created_at=Date.now();\n    if(typeof values.start_at==null){\n      values.start_at=Date.now();\n    }\n    if(typeof values.end_at==null){\n      values.end_at=Date.now();\n    }\n    let detail = ' <news content-type=\\'news\\'>' + values.detail + '</news>';\n    delete values.detail;\n    values.created_at = getFirestore().FieldValue.serverTimestamp();\n    let arr = values.tags;\n    arr = arr.filter(item => item);\n    values.tags = arr;\n     await app.firestore().collection('live_events').doc(values.id).update(values);\n\n    let event = await app.firestore().collection('live_events').doc(values.id).get();\n    console.log('done event:' + event.id);\n    await app.firestore().collection('live_events').doc(values.id).collection('detail').doc('content').update({ data: detail });\n    let eventData = event.data();\n\n    if (typeof (image_full) == 'undefined') {\n      return;\n    }\n\n    const tool = await fromImage(image_full);\n    const image = await tool.thumbnail(512).toFile();\n    let cover_url = 'public/images/events/' + event.id;\n    let cover_full = 'public/images/events/full/' + event.id;\n    var storageRef = app.storage().ref();\n    var uploadTask = storageRef.child(cover_full).put(image_full, metadata);\n    uploadTask.on(getStorage().TaskEvent.STATE_CHANGED, // or 'state_changed'\n      function(snapshot) {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload cover is ' + progress + '% done');\n        switch (snapshot.state) {\n          case getStorage().TaskState.PAUSED: // or 'paused'\n            console.log('Upload cover is paused');\n            break;\n          case getStorage().TaskState.RUNNING: // or 'running'\n            console.log('Upload cover is running');\n            break;\n        }\n      },\n      function(error) {\n\n        switch (error.code) {\n          case 'storage/unauthorized':\n            console.log('unauthorized');\n            break;\n          case 'storage/canceled':\n            console.log('cancel');\n            break;\n          case 'storage/unknown':\n\n            console.log('unkonwn');\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      },\n      function() {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n          console.log('image full available at', downloadURL);\n          eventData.cover_full = downloadURL;\n          app.firestore().collection('live_events').doc(event.id).update(eventData);\n        });\n      });\n    if (typeof (image) == 'undefined') {\n      return;\n    }\n    var uploadTask2 = storageRef.child(cover_url).put(image, metadata);\n    uploadTask2.on(getStorage().TaskEvent.STATE_CHANGED, // or 'state_changed'\n      function(snapshot) {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload cover is ' + progress + '% done');\n        switch (snapshot.state) {\n          case getStorage().TaskState.PAUSED: // or 'paused'\n            console.log('Upload cover is paused');\n            break;\n          case getStorage().TaskState.RUNNING: // or 'running'\n            console.log('Upload cover is running');\n            break;\n        }\n      },\n      function(error) {\n\n        switch (error.code) {\n          case 'storage/unauthorized':\n            console.log('unauthorized');\n            break;\n          case 'storage/canceled':\n            console.log('cancel');\n            break;\n          case 'storage/unknown':\n\n            console.log('unkonwn');\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      },\n      function() {\n        // Upload completed successfully, now we can get the download URL\n        uploadTask2.snapshot.ref.getDownloadURL().then(function(downloadURL) {\n          console.log('image available at', downloadURL);\n          app.firestore().collection('live_events').doc(event.id).update({cover:downloadURL});\n        });\n      });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nfunction convertTimestamp(timestamp) {\n  if(timestamp){\n    let date = timestamp.toDate();\n    let mm = date.getMonth();\n    let dd = date.getDate();\n    let yyyy = date.getFullYear();\n    let hh = date.getHours();\n    let mn = date.getMinutes();\n    let ss = date.getSeconds();\n\n    date = dd +'/'+ mm + '/' + yyyy + ' '+ hh + ':'+mn+':'+ss;\n    return date;\n  }else{\n    return null;\n  }\n}\n\nexport const exportEvent = async (event_id) => {\n  const id = event_id;\n  var jsonCustomers = [];\n  const db = app.firestore();\n  if(typeof id !==\"undefined\"){\n    try {\n      const snapshot = await db.collection('live_events').doc(id).collection('submission').get();\n      snapshot.forEach(async (submissionDoc) => {\n        //     for await (let submissionDoc of snapshot.docs) {\n        const submissionData = submissionDoc.data();\n        var result = {};\n        // console.log(submissionData);\n        if(submissionData.status == 2){\n          const studentRef =  db.collection('students').doc(submissionData.uid);\n          const studentData = await studentRef.get();\n          if (!studentData.exists) {\n            const userRef = db.collection('users').doc(submissionData.uid);\n            const userData = await userRef.get();\n            result.display_name = typeof (userData.data().display_name)!==\"undefined\"?userData.data().display_name:submissionData.display_name;\n            result.school_id = typeof(submissionData.school_id)!==\"undefined\"?submissionData.school_id:userData.data().school_id;\n            result.point = submissionData.point;\n            result.submit_at = convertTimestamp(submissionData.submit_at);\n            result.created_at = convertTimestamp(submissionData.created_at);\n            result.time_work =parseInt((submissionData.submit_at - submissionData.created_at)/60);\n            result.email = typeof(userData.data().email)!==\"undefined\"?userData.data().email:'';\n            result.grade = typeof (userData.data().class)!==\"undefined\" ?userData.data().class:'';\n            jsonCustomers.push(result);\n            if(parseInt((submissionData.submit_at - submissionData.created_at)/60)>70){\n              result.autosubmit = \"Tool auto\";\n            }else{\n              result.autosubmit = '';\n            }\n            result.not_student =\"Chưa có trong Student\";\n            console.log(result);\n          } else {\n            // console.log('Document data:', studentData.data());\n            result.display_name = typeof (submissionData.display_name)!==\"undefined\"?submissionData.display_name:studentData.data().lastname+studentData.data().firstname;\n            result.school_id = typeof(submissionData.school_id)!==\"undefined\"?submissionData.school_id:studentData.data().school_id;\n            result.point = submissionData.point;\n            result.submit_at =  convertTimestamp(submissionData.submit_at);\n            result.created_at = convertTimestamp(submissionData.created_at);\n            result.time_work =parseInt((submissionData.submit_at - submissionData.created_at)/60);\n            result.email = typeof(studentData.data().email)!==\"undefined\"?studentData.data().email:'';\n            result.grade = typeof (studentData.data().class)!==\"undefined\" ?studentData.data().class.name:'';\n            jsonCustomers.push(result);\n            if(parseInt((submissionData.submit_at - submissionData.created_at)/60)>70){\n              result.autosubmit = \"Tool auto\";\n            }else{\n              result.autosubmit = '';\n            }\n            console.log(result);\n            result.not_student = '';\n          }\n        }\n      });\n      // console(snapshot.count());\n      const competition = await db.collection('live_events').doc(id).get();\n      const competitionData = competition.data();\n\n      setTimeout(function(){\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n        const fileExtension = '.xlsx';\n\n        const fileName = competitionData.title;\n        const ws = XLSX.utils.json_to_sheet(jsonCustomers);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, fileName + fileExtension);\n      }, 30000);\n    } catch (error) {\n\n    }\n\n  }else{\n\n  }\n\n};\nexport const exportEvent_Alldata = async (event_id) => {\n  const id = event_id;\n  var jsonCustomers = [];\n  const db = app.firestore();\n  if(typeof id !==\"undefined\"){\n    try {\n      const snapshot = await db.collection('live_events').doc(id).collection('submission').get();\n      snapshot.forEach(async (submissionDoc) => {\n        //     for await (let submissionDoc of snapshot.docs) {\n        const submissionData = submissionDoc.data();\n        var result = {};\n        result['devicesid']='';\n        // console.log(submissionData);\n        if(submissionData.status == 2){\n          const studentRef =  db.collection('students').doc(submissionData.uid);\n          const studentData = await studentRef.get();\n          const  devices = await db.collection('live_events').doc(id).collection('submission').doc(submissionDoc.id).collection('devices').get();\n          devices.forEach(async(device)=>{\n            result['devicesid'] += \",\"+device.id\n          });\n          if (!studentData.exists) {\n            const userRef = db.collection('users').doc(submissionData.uid);\n            const userData = await userRef.get();\n            result.display_name = typeof (userData.data().display_name)!==\"undefined\"?userData.data().display_name:submissionData.display_name;\n            result.school_id = typeof(submissionData.school_id)!==\"undefined\"?submissionData.school_id:userData.data().school_id;\n            result.point = submissionData.point;\n            result.submit_at = convertTimestamp(submissionData.submit_at);\n            result.created_at = convertTimestamp(submissionData.created_at);\n            result.time_work =parseInt((submissionData.submit_at - submissionData.created_at)/60);\n            result.email = typeof(userData.data().email)!==\"undefined\"?userData.data().email:'';\n            result.grade = typeof (userData.data().class)!==\"undefined\" ?userData.data().class:'';\n            jsonCustomers.push(result);\n            if(parseInt((submissionData.submit_at - submissionData.created_at)/60)>70){\n              result.autosubmit = \"Tool auto\";\n            }else{\n              result.autosubmit = '';\n            }\n            result.not_student =\"Chưa có trong Student\";\n            console.log(result);\n          } else {\n            // console.log('Document data:', studentData.data());\n            result.display_name = typeof (submissionData.display_name)!==\"undefined\"?submissionData.display_name:studentData.data().lastname+studentData.data().firstname;\n            result.school_id = typeof(submissionData.school_id)!==\"undefined\"?submissionData.school_id:studentData.data().school_id;\n            result.point = submissionData.point;\n            result.submit_at =  convertTimestamp(submissionData.submit_at);\n            result.created_at = convertTimestamp(submissionData.created_at);\n            result.time_work =parseInt((submissionData.submit_at - submissionData.created_at)/60);\n            result.email = typeof(studentData.data().email)!==\"undefined\"?studentData.data().email:'';\n            result.grade = typeof (studentData.data().class)!==\"undefined\" ?studentData.data().class.name:'';\n            jsonCustomers.push(result);\n            if(parseInt((submissionData.submit_at - submissionData.created_at)/60)>70){\n              result.autosubmit = \"Tool auto\";\n            }else{\n              result.autosubmit = '';\n            }\n            console.log(result);\n            result.not_student = '';\n          }\n        }\n      });\n      // console(snapshot.count());\n      const competition = await db.collection('live_events').doc(id).get();\n      const competitionData = competition.data();\n\n      setTimeout(function(){\n        const fileType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8';\n        const fileExtension = '.xlsx';\n\n        const fileName = competitionData.title;\n        const ws = XLSX.utils.json_to_sheet(jsonCustomers);\n        const wb = { Sheets: { 'data': ws }, SheetNames: ['data'] };\n        const excelBuffer = XLSX.write(wb, { bookType: 'xlsx', type: 'array' });\n        const data = new Blob([excelBuffer], {type: fileType});\n        FileSaver.saveAs(data, fileName + fileExtension);\n      }, 30000);\n    } catch (error) {\n\n    }\n\n  }else{\n\n  }\n\n};\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport {\n  PlusCircle as PlusCircleIcon,\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/hbon/management/schools\"\n            component={RouterLink}\n          >\n            Trang chủ\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"#\"\n            component={RouterLink}\n          >\n            Quản lý\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Event\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Danh sách event\n        </Typography>\n\n      </Grid>\n\n      <Grid item>\n      <Link\n            to=\"/hbon/management/events/create\"\n            component={RouterLink}\n          >\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <PlusCircleIcon />\n            </SvgIcon>\n          }\n        >\n          Thêm Event\n        </Button>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {listAllSubmit} from '../../../api/events'\n\nimport MUIDataTable from \"mui-datatables\";\n\nconsole.log(listAllSubmit);\n\nconst columns = [\n  {\n    name: \"display_name\",\n    label: \"Tên\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"school_id\",\n    label: \"Trường\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"point\",\n    label: \"Điểm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"created_at\",\n    label: \"Bắt đầu\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"submit_at\",\n    label: \"Kết thúc\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"time_work\",\n    label: \"Thời gian làm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"email\",\n    label: \"Email\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"grade\",\n    label: \"Điểm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n];\n\n\nconst options = {\n  filterType: 'checkbox',\n};\n\nconst Results = async({\n  className,\n  events,\n  ...rest\n}) => {\n  return (\n    <MUIDataTable\n      title={\"Employee List\"}\n      data={events}\n      columns={columns}\n      options={options}\n    />\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  events: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  events: []\n};\n\nexport default Results;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\nimport {listAllSubmit} from '../../../api/events'\n\nimport MUIDataTable from \"mui-datatables\";\nimport { WaveLoading } from 'react-loadingg';\n\nconst columns = [\n  {\n    name: \"display_name\",\n    label: \"Tên\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"school_id\",\n    label: \"Trường\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"point\",\n    label: \"Điểm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"created_at\",\n    label: \"Bắt đầu\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"submit_at\",\n    label: \"Kết thúc\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"time_work\",\n    label: \"Thời gian làm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"email\",\n    label: \"Email\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"grade\",\n    label: \"Điểm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n];\n\nconst options = {\n  filterType: 'checkbox',\n};\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst EventListSubmitView = (props) => {\n  const {eventId} = props.match.params;\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [events, setEvents] = useState([]);\n\n  const getEvents = useCallback(async () => {\n    try {\n      const events = await listAllSubmit(eventId);\n      console.log(events);\n      if (isMountedRef.current) {\n        await setEvents(events);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEvents();\n  }, [getEvents]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Trường học\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        <Box mt={3}>\n          <MUIDataTable\n            title={\"List Submit\"}\n            data={events}\n            columns={columns}\n            options={options}\n          />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default EventListSubmitView;\n"],"sourceRoot":""}