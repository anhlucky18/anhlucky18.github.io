{"version":3,"sources":["hooks/useIsMountedRef.js","../node_modules/@material-ui/icons/NavigateNext.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncIterator.js","api/quiz.js","api/categories.js","api/h5p.js","views/sendnotify/QuizTestEditView/QuizTestEditForm.js","views/sendnotify/QuizTestEditView/Header.js","views/sendnotify/QuizTestEditView/index.js"],"names":["useIsMountedRef","isMounted","useRef","useEffect","current","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","exports","value","default","React","_default","createElement","d","_asyncIterator","iterable","method","Symbol","asyncIterator","call","iterator","TypeError","db","app","firestore","listAllQuiztests","a","collection","get","querySnapshot","docs","products","map","doc","id","data","console","log","listPublicQuizes","ref","path","addQuiztest","tags","typeQuiz","ListQuiz","newData","name","listQuiz","add","QuizTestRef","quiz_test","sendNotify","i","length","condtion","parseInt","slice","where","then","forEach","params","to","last_device","device_token","priority","notification","headers","Authorization","process","REACT_APP_FIREBASE_CLOUD_MESSAGE_KEY","axios","post","response","catch","error","err","updateQuiztest","update","getQuizTest","deleteQuizTest","ids","delete","listQuizes","teacherid","quizzes","getQuiz","quizId","quizData","task_data","questions","question","push","searchTags","JSON","stringify","res","getTags","tagRef","createQuiz","values","catalogId","sectionIndex","quiz","tag","desc","created_by","author","restart","navigate","created_time","Date","trial_maxquest","trial_maxtime","trial_maxentry","random","quest_feedback","auto_next","batch","grade","time","count_true","options","fraction","wrong_grade","Math","round","toString","element","questRef","set","quizRef","sectionRef","activities","firebase","FieldValue","arrayUnion","type","commit","updateQuiz","listAllCategory","category","listSchools","schools","result","gStatus","listAllTags","listH5p","h5p","listH5pByUser","userid","deleteH5ps","idToken","url","resp","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","maxWidth","chips","display","flexWrap","chip","noLabel","marginTop","sortOptions","label","descendingComparator","b","orderBy","applySort","courses","sort","split","comparator","order","getComparator","stabilizedThis","el","index","QuizTestEditForm","className","QuizTestId","rest","classes","useAuth","user","isMountedRef","useState","setQuiz","getCourses","useCallback","QuizH5p","enqueueSnackbar","useSnackbar","selectedH5p","setSelectedH5p","page","setPage","limit","setLimit","query","hasAcceptedMarketing","isProspect","isReturning","filters","handleSelectAllH5p","event","target","checked","course","handlePageChange","newPage","handleLimitChange","filteredCourses","filter","matches","containsQuery","property","toLowerCase","includes","keys","key","applyFilters","paginatedH5p","applyPagination","selectedSomeH5p","selectedAllH5p","setTypeQuiz","open","setOpen","audienceChange","handleClose","handleOpen","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","width","setTags","getStyles","tagName","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useTheme","setTagName","handleChangeTags","history","useHistory","initialValues","submit","validationSchema","Yup","shape","max","required","onSubmit","resetForm","setErrors","setStatus","setSubmitting","wait","success","variant","action","Button","message","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","setFieldValue","setFieldTouched","clsx","root","Card","CardContent","Grid","container","item","md","xs","TextField","Boolean","fullWidth","helperText","onBlur","onChange","FormControl","InputLabel","Select","labelId","onClose","onOpen","MenuItem","Typography","gutterBottom","color","multiple","input","Input","renderValue","selected","Chip","Box","mt","disabled","Table","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","TableBody","isH5pSelected","hover","courseId","prevSelected","TablePagination","component","count","onChangePage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","Header","localStorage","getItem","Breadcrumbs","separator","fontSize","aria-label","Link","RouterLink","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","QuizTestEditView","props","match","setClasses","getQuizTests","Page","title","Container"],"mappings":"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","file":"static/js/65.94e63982.chunk.js","sourcesContent":["import {useRef, useEffect } from 'react';\n\nconst useIsMountedRef = () => {\n  const isMounted = useRef(true);\n\n  useEffect(() => () => {\n    isMounted.current = false;\n  }, []);\n\n  return isMounted;\n};\n\nexport default useIsMountedRef;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'NavigateNext');\n\nexports.default = _default;","export default function _asyncIterator(iterable) {\n  var method;\n\n  if (typeof Symbol !== \"undefined\") {\n    if (Symbol.asyncIterator) {\n      method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      method = iterable[Symbol.iterator];\n      if (method != null) return method.call(iterable);\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}","import  app from './firebase';\nimport firebase from 'firebase';\nimport \"firebase/messaging\";\n// import {messaging} from './fcm';\nimport axios from 'axios';\nconst db = app.firestore();\n\nexport const listAllQuiztests = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('quiz_test').get();\n    if (querySnapshot.docs) {\n      const products = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id, ...doc.data()\n        }\n      });\n      return products\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const listPublicQuizes = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('/resource/public/quizzes').get();\n    if (querySnapshot.docs) {\n      const products = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ref: doc.ref.path,\n          ...doc.data()\n        }\n      });\n      return products\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const addQuiztest = async (data,tags,typeQuiz,ListQuiz) => {\n  try {\n    let newData = {\n          name : data.name,\n          tags : tags,\n          typeQuiz : typeQuiz,\n          listQuiz : ListQuiz\n    }\n    let QuizTestRef = await app.firestore().collection('quiz_test').add(newData);\n    let quiz_test = await QuizTestRef.get();\n    sendNotify(tags, newData);\n    return quiz_test.data();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nasync function sendNotify(tags,  newData){\n  var i;\n  for (i = 0; i < tags.length; i++) {\n    const condtion =  parseInt(tags[i].slice(-1));\n    const listReceiver  =  await app.firestore().collection('users').where(\"grade\", \"==\", condtion).where('last_device.active_status' ,\"==\",1).get().then(function(querySnapshot){\n      querySnapshot.forEach(function(doc){\n        console.log(doc.id, \" => \", doc.data());\n        const last_device = doc.data().last_device;\n        // if(typeof last_device!==\"undefined\" && last_device.active_status === 1){\n          const devicetoken = last_device.device_token;\n          const params = {\n            // 'condition':topic,\n            to: devicetoken,\n            // 'to':\"fseo_43NQcq1oGsjpjn84B:APA91bESRa4YiBHTr015vGyHMhehOF3goLV42r4aR7uG79WE5hT6FhLo5eKMIXLbb6M76zGYgj_CGFZwcjoazuUs4HbLquFCWElpRhEv5mhpnRy7e0vbNRg62ghdcAmtojJNSU6WtySs\",\n            priority: \"high\",\n            notification: {\n              \"body\": 'Học bài ở nhà vừa gửi 1 bài tập',\n              \"title\": newData.name,\n            },\n            data: {\n              \"click_action\": \"FLUTTER_NOTIFICATION_CLICK\",\n              \"deep_link\": '',\n              \"body\": 'Học bài ở nhà vừa gửi 1 bài tập',\n              \"title\": newData.name,\n              \"content_type\": 'h5p'\n            },\n          };\n\n          const headers = {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"key=\"+process.env.REACT_APP_FIREBASE_CLOUD_MESSAGE_KEY,\n          };\n\n\n          axios.post('https://fcm.googleapis.com/fcm/send', params, {\"headers\":headers})\n            .then(function (response) {\n              console.log(response);\n            })\n            .catch(function (error) {\n              console.log(error);\n            });\n        // }\n      });\n    }).catch(function(err){\n      console.log(\"Error getting documents: \", err);\n    });\n  }\n}\n\nexport const updateQuiztest = async (data,tags,typeQuiz,ListQuiz) => {\n  try {\n    let newData = {\n          name : data.name,\n          tags : tags,\n          typeQuiz : typeQuiz,\n          listQuiz : ListQuiz\n    }\n    console.log(data);\n    console.log(newData);\n    let QuizTestRef = await app.firestore().collection('quiz_test').doc(data.id).update(newData);\n    let quiz_test = await QuizTestRef.get();\n    return quiz_test.data();\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getQuizTest = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('quiz_test').doc(id).get();\n    const quiz_test = querySnapshot.data();\n    return quiz_test\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const deleteQuizTest = async(ids)=>{\n  try {\n    ids.map((id) => {\n      app.firestore().collection('quiz_test').doc(id).delete();\n    });\n    return true;\n  }catch (err) {\n    console.log(err);\n  }\n}\nexport const listQuizes = async (teacherid)=>{\n  try {\n    let querySnapshot = await app.firestore().collection('repo/library/users').doc(teacherid).collection('quizzes').get();\n    if (querySnapshot.docs) {\n      const quizzes = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data()\n        }\n      })\n      return quizzes\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const getQuiz = async (teacherid,quizId)=>{\n  console.log(teacherid,quizId)\n\n  let querySnapshot = await db.collection('repo/library/users').doc(teacherid).collection('quizzes').doc(quizId).get();\n  try {\n  const quizData = await querySnapshot.data();\n  \n  quizData.task_data = [];\n  const questions = quizData.questions;\n  console.log(questions);\n  for(let i=0;i<questions.length;i++){\n    \n    let question = await questions[i].ref.get();\n    let data = await question.data();\n    data.id=question.id;\n    console.log(data);\n    quizData.task_data.push(data)\n  }\n  delete quizData.questions;\n  console.log(quizData);\n    return quizData\n  }catch (err) {\n      console.log(err);\n    }\n}\nexport const searchTags = async()=>{\n  console.log(\"search\")\n  let query=\"\";\naxios.get('https://test.search.dschool.vn/scotch.io-tutorial/cities_list/_search', {\n  data: JSON.stringify(query),\n}\n// , {\n//   headers: {\n//          \"Access-Control-Allow-Origin\": \"*\",\n//          \"Access-Control-Allow-Methods\": \"GET, POST, PATCH, PUT, DELETE, OPTIONS\",\n//          \"Access-Control-Allow-Headers\": \"Origin, Content-Type, X-Auth-Token\"\n//        }\n//      }\n     ).then((res) => {\n  console.log(res);\n}\n);\n}\n\nexport const getTags = async()=>{\n  const tagRef = await db.collection(\"resource\").doc(\"tags\").collection('tags').get();\n  if (tagRef.docs) {\n    const tags = tagRef.docs.map((doc) => {\n      return {\n        id: doc.id, ...doc.data()\n      }\n    });\n    return tags\n  }\n}\nexport const createQuiz = async(values,catalogId,sectionIndex )=>{\n  try {\n\n    console.log(values);\n    console.log(typeof(values.data));\n    const quiz={name:values.name,tag:values.tag,desc:values.desc,created_by:values.created_by,author:values.author}\n    // quiz.start_time=null;\n    // quiz.end_time=null;\n    // quiz.duration=null;\n\n    quiz.restart=0;\n    quiz.navigate=1;\n    quiz.created_time = new Date();\n    quiz.trial_maxquest=5;\n    quiz.trial_maxtime=30;\n    quiz.trial_maxentry=1;\n    quiz.random=1;\n    quiz.quest_feedback=0;\n    quiz.auto_next=0;\n    const batch = db.batch();\n    quiz.questions=[];\n    const questions=[];\n    console.log(quiz);\n    let id=0;\n    for await(let question of values.data){\n      id++;\n      question.created_by=quiz.created_by;\n      question.tag=quiz.tag;\n      question.created_time = quiz.created_time\n      question.grade=parseInt(question.grade)\n      question.time=parseInt(question.time)\n      if(\"options\" in question){\n        let count_true=0;\n        for await (let option of question.options){\n          let fraction=option.fraction;\n          if(fraction>0){\n            count_true++;\n          }\n        }\n        question.wrong_grade=Math.round(100*question.grade/count_true)/100;\n        for (let i=0;i< question.options.length;i++){\n          question.options[i].value=i.toString();\n          if(!(\"fraction\" in question.options[i])){\n            question.options[i].fraction=0;\n          }\n          let fraction=question.options[i].fraction;\n          if(fraction>0){\n            question.options[i].fraction=question.wrong_grade;\n          }\n        }\n      }\n      let element = question.element;\n      \n      const questRef = await db.collection('repo/library/users').doc(quiz.created_by).collection(\"questions\").doc(question.id);\n      batch.set(questRef,question);\n      quiz.questions.push({id:id,element:element,ref:questRef});\n      questions.push(question)\n    }\n    const quizRef = await db.collection('repo/library/users').doc(quiz.created_by).collection('quizzes').doc();\n    batch.set( quizRef,quiz);\n    const sectionRef = await db.collection('repo/library/users').doc(quiz.created_by).collection('catalogs').doc(catalogId).collection(\"sections\").doc(sectionIndex);\n      let data = await (await sectionRef.get()).data();\n      if(\"activities\" in data){\n        console.log(quizRef);\n        batch.update(db.collection('repo/library/users').doc(quiz.created_by).collection('catalogs').doc(catalogId).collection(\"sections\").doc(sectionIndex),{activities:firebase.firestore.FieldValue.arrayUnion({name:quiz.name,type:\"quiz\",ref:quizRef})})\n      } else {\n        batch.update(db.collection('repo/library/users').doc(quiz.created_by).collection('catalogs').doc(catalogId).collection(\"sections\").doc(sectionIndex),{activities:[{name:quiz.name,type:\"quiz\",ref:quizRef}]})\n      }\n\n\n    await batch.commit()\n\n      //add to elasticsearch\n      console.log(\"quizid:\",quizRef.id);\n      quiz.id = quizRef.id;\n    return true;\n  }catch (err) {\n    console.log(err);\n  }\n}\nexport const updateQuiz = async(quizId,values )=>{\n  try {\n    console.log(values);\n    console.log(typeof(values.data));\n    const quiz={name:values.name,tag:values.tag,desc:values.desc,created_by:values.created_by,author:values.author}\n    // quiz.start_time=null;\n    // quiz.end_time=null;\n    // quiz.duration=null;\n\n    quiz.restart=0;\n    quiz.navigate=1;\n    quiz.created_time = new Date();\n    quiz.trial_maxquest=5;\n    quiz.trial_maxtime=30;\n    quiz.trial_maxentry=1;\n    quiz.random=1;\n    quiz.quest_feedback=0;\n    quiz.auto_next=0;\n    const batch = db.batch();\n    quiz.questions=[];\n    const questions=[];\n    console.log(quiz);\n    let id=0;\n    for await(let question of values.data){\n      id++;\n      let element = question.element;\n      question.created_by=quiz.created_by;\n      question.tag=quiz.tag;\n      question.created_time = quiz.created_time\n      question.grade=parseInt(question.grade)\n      question.time=parseInt(question.time)\n      if(\"options\" in question){\n        let count_true=0;\n        for await (let option of question.options){\n          let fraction=option.fraction;\n          if(fraction>0){\n            count_true++;\n          }\n        }\n        question.wrong_grade=Math.round(100*question.grade/count_true)/100;\n        for (let i=0;i< question.options.length;i++){\n          question.options[i].value=i.toString();\n          if(!(\"fraction\" in question.options[i])){\n            question.options[i].fraction=0;\n          }\n          let fraction=question.options[i].fraction;\n          if(fraction>0){\n            question.options[i].fraction=question.wrong_grade;\n          }\n        }\n      }\n      console.log(\"saving grade\",question.grade);\n      console.log(\"saving time\",question.time);\n      const questRef = await db.collection('repo/library/users').doc(quiz.created_by).collection(\"questions\").doc(question.id);\n      batch.set(questRef,question);\n      quiz.questions.push({id:id,element:element,ref:questRef});\n      questions.push(question);\n    };\n    const quizRef = await db.collection('repo/library/users').doc(quiz.created_by).collection('quizzes').doc(quizId);\n    batch.update( quizRef,quiz);\n    \n\n\n    await batch.commit();\n    //add to elasticsearch\n    console.log(\"quizid:\",quizRef.id);\n    quiz.id = quizRef.id;\n\n    return true;\n  }catch (err) {\n    console.log(err);\n  }\n}\n","import app from './firebase';\n\nexport const listAllCategory = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('categories').get();\n    const category = querySnapshot.docs.map((doc) => {\n      return  doc.id;\n    });\n    return category\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const listSchools = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('schools').get();\n    const schools = querySnapshot.docs.map((doc) => {\n      let result = {};\n      result.id = doc.id;\n      result.name = doc.data().name;\n      return result;\n    });\n    return schools\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const gStatus = () => {\n  return [\"true\", \"false\"];\n};\n\n\nexport const addCategory = async (data) => {\n  try {\n    let category = await app.firestore().collection('categories').add(data);\n    console.log(category.data);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const deleteCategorys = (ids) => {\n  try {\n    ids.map((id) => {\n      app.firestore().collection('categories').doc(id).delete();\n    })\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const getCategoryApi = async (id) => {\n  try {\n    let querySnapshot = await app.firestore().collection('categories').doc(id).get();\n    const category = querySnapshot.data();\n    category.id = id;\n    return category\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const updateCategory = async (data) => {\n  try {\n    console.log(\"update categories\");\n    let id = data.id;\n    let result = await app.firestore().collection('categories').doc(id).set(data);\n    console.log(result);\n    return result\n  } catch (err) {\n    console.log(err);\n  }\n};\nexport const listAllTags = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('tags').where(\"root\",\"==\",true).get();\n    const tags = querySnapshot.docs.map((doc) => {\n      return  doc.id;\n    });\n    return tags\n  } catch (err) {\n    console.log(err);\n  }\n}\n","import firebase from 'firebase';\nimport app from './firebase';\nimport axios from 'axios';\n\nexport const listH5p = async () => {\n  try {\n    let querySnapshot = await app.firestore().collection('h5p').get();\n    const h5p = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      };\n    });\n    return h5p;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const listH5pByUser = async (userid) => {\n  try {\n    console.log(\"search h5p:\",userid)\n    let querySnapshot = await app.firestore().collection('h5p').where(\"userid\",\"==\",userid).get();\n    const h5p = querySnapshot.docs.map((doc) => {\n      return {\n        id: doc.id,\n        ...doc.data()\n      };\n    });\n    console.log(h5p)\n    return h5p;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n\nexport const deleteH5ps = (ids,idToken) => {\n  try {\n    ids.map((id) => {\n      //https://h5p.dschool.vn/h5p/delete/95679186\n     const url = \"https://h5p.dschool.vn/h5p/delete/\" + id + \"?idToken=\"+idToken;\n    axios.get(url).then(resp => {\n\n        console.log(resp.data);\n        app.firestore().collection('h5ps').doc(id).delete();\n    });\n      \n    })\n  } catch (err) {\n    console.log(err);\n  }\n};","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useSnackbar } from 'notistack';\nimport {\n  Box,\n  Button,\n  Card,\n  Checkbox,\n  CardContent,\n  Grid,\n  TextField,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  makeStyles,\n  useTheme,\n  Input,\n  Chip,\n  Typography, RadioGroup, FormControlLabel, Radio\n} from '@material-ui/core';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport wait from 'src/utils/wait';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport {updateQuiztest} from '../../../api/quiz';\nimport { listH5p } from '../../../api/h5p';\nimport useAuth from 'src/hooks/useAuth';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { listAllTags } from '../../../api/categories';\nimport { useHistory } from 'react-router';\n\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 300,\n  },\n  chips: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  chip: {\n    margin: 2,\n  },\n  noLabel: {\n    marginTop: theme.spacing(3),\n  },\n}));\n\nconst sortOptions = [\n  {\n    value: 'category|asc',\n    label: 'Category (tăng)'\n  },\n  {\n    value: 'category|desc',\n    label: 'Category (giảm)'\n  }\n];\n\nconst applyFilters = (courses, query, filters) => {\n  return courses.filter((course) => {\n    let matches = true;\n\n    if (query) {\n      const properties = ['email', 'name'];\n      let containsQuery = false;\n\n      properties.forEach((property) => {\n        if (course[property].toLowerCase().includes(query.toLowerCase())) {\n          containsQuery = true;\n        }\n      });\n\n      if (!containsQuery) {\n        matches = false;\n      }\n    }\n\n    Object.keys(filters).forEach((key) => {\n      const value = filters[key];\n\n      if (value && course[key] !== value) {\n        matches = false;\n      }\n    });\n\n    return matches;\n  });\n};\n\nconst applyPagination = (courses, page, limit) => {\n  return courses.slice(page * limit, page * limit + limit);\n};\n\nconst descendingComparator = (a, b, orderBy) => {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n};\n\nconst getComparator = (order, orderBy) => {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n};\nconst applySort = (courses, sort) => {\n  const [orderBy, order] = sort.split('|');\n  const comparator = getComparator(order, orderBy);\n  const stabilizedThis = courses.map((el, index) => [el, index]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n\n    if (order !== 0) return order;\n\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n};\n\nconst QuizTestEditForm = ({ className, quiz_test, QuizTestId, ...rest }) => {\n\n  const { user} = useAuth();\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n\n  const [quiz, setQuiz] = useState([]);\n  const getCourses = useCallback(async () => {\n    try {\n      const QuizH5p = await listH5p();\n      if (isMountedRef.current) {\n        setQuiz(QuizH5p);\n      }\n\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n\n  useEffect(() => {\n    getCourses();\n  }, [getCourses]);\n  const { enqueueSnackbar } = useSnackbar();\n\n  const [selectedH5p, setSelectedH5p] = useState(quiz_test.listQuiz);\n  const [page, setPage] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [query, setQuery] = useState('');\n\n  const [sort, setSort] = useState(sortOptions[0].value);\n  const [filters, setFilters] = useState({\n    hasAcceptedMarketing: null,\n    isProspect: null,\n    isReturning: null\n  });\n\n  const handleSelectAllH5p = (event) => {\n    setSelectedH5p(event.target.checked\n      ? quiz.map((course) => course.id)\n      : []);\n  };\n\n  const handleSelectOneH5p = (event, courseId) => {\n    if (!selectedH5p.includes(courseId)) {\n      setSelectedH5p((prevSelected) => [...prevSelected, courseId]);\n    } else {\n      setSelectedH5p((prevSelected) => prevSelected.filter((id) => id !== courseId));\n    }\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleLimitChange = (event) => {\n    setLimit(parseInt(event.target.value));\n  };\n\n  const filteredCourses = applyFilters(quiz, query, filters);\n  const sortedClasses = applySort(filteredCourses, sort);\n  const paginatedH5p = applyPagination(sortedClasses, page, limit);\n  const selectedSomeH5p = selectedH5p.length > 0 && selectedH5p.length < quiz.length;\n  const selectedAllH5p = selectedH5p.length === quiz.length;\n\n  const [typeQuiz, setTypeQuiz] = React.useState(quiz_test.typeQuiz);\n  const [open, setOpen] = React.useState(false);\n\n  const audienceChange = (event) => {\n    setTypeQuiz(event.target.value);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const ITEM_HEIGHT = 48;\n  const ITEM_PADDING_TOP = 8;\n  const MenuProps = {\n    PaperProps: {\n      style: {\n        maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n        width: 250,\n      },\n    },\n  };\n\n  const [tags, setTags] = useState([]);\n\n  const getTags = useCallback(async () => {\n    try {\n      const tags = await listAllTags();\n      if (isMountedRef.current) {\n        setTags(tags);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getTags();\n  }, [getTags]);\n\n  function getStyles(tag, tagName, theme) {\n    return {\n      fontWeight:\n        tagName.indexOf(tag) === -1\n          ? theme.typography.fontWeightRegular\n          : theme.typography.fontWeightMedium,\n    };\n  }\n  const theme = useTheme();\n  console.log(quiz_test.tags);\n  const [tagName, setTagName] = useState(quiz_test.tags);\n  const handleChangeTags = (event) => {\n    setTagName(event.target.value);\n  };\n  const history = useHistory();\n  return (\n    <Formik\n      initialValues={{\n      id: QuizTestId || '',\n      name: quiz_test.name||'',\n      submit: null }}\n\n      validationSchema={Yup.object().shape({\n        name: Yup.string().max(75).required('Bắt buộc nhập tên'),\n      })}\n\n        onSubmit={async (values, {\n          resetForm,\n          setErrors,\n          setStatus,\n          setSubmitting\n        }) => {\n          try {\n            if(tagName.length > 0 && selectedH5p.length > 0){\n              updateQuiztest(values,tagName,typeQuiz,selectedH5p);\n              // NOTE: Make API request\n              await wait(500);\n              resetForm();\n              setStatus({ success: true });\n              setSubmitting(false);\n              enqueueSnackbar('Cập nhật quiz thành công', {\n                variant: 'success',\n                action: <Button>See all</Button>\n              });\n              await wait(1000);\n              history.push('/hbon/management/quiztest/list');\n            }else{\n              enqueueSnackbar('Tags và list câu hỏi không được để trống', {\n                variant: 'error',\n                action: <Button>See all</Button>\n              });\n            }\n          } catch (err) {\n            console.error(err);\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }}\n    >\n      {({\n          errors,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n          isSubmitting,\n          setFieldValue,\n          setFieldTouched,\n          touched,\n          values\n        }) => (\n        <form className={clsx(classes.root, className)} onSubmit={handleSubmit}{...rest}>\n          <Card>\n            <input type=\"hidden\" name=\"id\" required value={QuizTestId}/>\n            <CardContent>\n              <Grid container spacing={3}>\n                <Grid item md={6} xs={12}>\n                  <TextField error={Boolean(touched.name && errors.name)} fullWidth helperText={touched.name && errors.name} label=\"Tên\" name=\"name\" onBlur={handleBlur} onChange={handleChange} required value={values.name} variant=\"outlined\"/>\n                </Grid>\n\n                <Grid item md={6} xs={12}>\n                  <FormControl className={classes.formControl}  fullWidth>\n                    <InputLabel id=\"demo-controlled-open-select-label\">Loại quiz</InputLabel>\n                    <Select\n                      labelId=\"demo-controlled-open-select-label\"\n                      id=\"demo-controlled-open-select\"\n                      open={open}\n                      onClose={handleClose}\n                      onOpen={handleOpen}\n                      value={typeQuiz}\n                      onChange={audienceChange}\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem value={'h5p'}>H5P</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item md={6} xs={12}>\n                  <Typography gutterBottom variant=\"h6\" color=\"textPrimary\">\n                    Tags\n                  </Typography>\n                  <Typography gutterBottom variant=\"body2\" color=\"textSecondary\">\n                    Chọn đối tượng làm quiz\n                  </Typography>\n                  <FormControl className={classes.formControl}>\n                    <Select fullWidth\n                      name=\"tagName\"\n                      labelId=\"demo-mutiple-chip-label\"\n                      id=\"demo-mutiple-chip\"\n                      multiple\n                      value={tagName}\n                      onChange={handleChangeTags}\n                      input={<Input id=\"select-multiple-chip\" />}\n                      renderValue={(selected) => (\n                        <div className={classes.chips}>\n                          {selected.map((value) => (\n                            <Chip key={value} label={value} name=\"tags\" className={classes.chip} />\n                          ))}\n                        </div>\n                      )}\n                      MenuProps={MenuProps}\n                    >\n                      {tags.map((tag) => (\n                        <MenuItem key={tag} value={tag} style={getStyles(tag, tagName, theme)}>\n                          {tag}\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item md={6} xs={12}>\n                </Grid>\n\n              </Grid>\n              <Box mt={2}>\n                <Button variant=\"contained\" color=\"secondary\" type=\"submit\" disabled={isSubmitting}>\n                  Gửi Quiz\n                </Button>\n              </Box>\n            </CardContent>\n            <PerfectScrollbar>\n              <Box minWidth={700}>\n                <Table>\n                  {typeQuiz === 'h5p' &&(\n                    <TableHead>\n                      <TableRow>\n                        <TableCell padding=\"checkbox\">\n                          <Checkbox checked={selectedAllH5p} indeterminate={selectedSomeH5p} onChange={handleSelectAllH5p}/>\n                        </TableCell>\n                        <TableCell>\n                          ID\n                        </TableCell>\n                        <TableCell>\n                          UserId\n                        </TableCell>\n                      </TableRow>\n                    </TableHead>\n                  )}\n                  <TableBody>\n                    {typeQuiz === 'h5p' && (paginatedH5p.map((h5p) => {\n                      const isH5pSelected = selectedH5p.includes(h5p.id);\n                      return (\n                        <TableRow hover key={h5p.id} selected={isH5pSelected}>\n                          <TableCell padding=\"checkbox\">\n                            <Checkbox checked={isH5pSelected} onChange={(event) => handleSelectOneH5p(event, h5p.id)} value={isH5pSelected}/>\n                          </TableCell>\n                          <TableCell>\n                            {h5p.id}\n                          </TableCell>\n                          <TableCell>\n                            {h5p.userid}\n                          </TableCell>\n                        </TableRow>\n                      );\n                    }))}\n                  </TableBody>\n                </Table>\n              </Box>\n            </PerfectScrollbar>\n            {typeQuiz === 'h5p' &&(\n              <TablePagination\n                component=\"div\"\n                count={filteredCourses.length}\n                onChangePage={handlePageChange}\n                onChangeRowsPerPage={handleLimitChange}\n                page={page}\n                rowsPerPage={limit}\n                rowsPerPageOptions={[5, 10, 25]}\n              />)}\n          </Card>\n        </form>\n      )}\n    </Formik>\n  );\n};\n\nQuizTestEditForm.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default QuizTestEditForm;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Link,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Header = ({ className, ...rest }) => {\n  let schoolname = localStorage.getItem('schoolname');\n  const classes = useStyles();\n\n  return (\n    <div className={clsx(classes.root, className)} {...rest}>\n      <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\n        <Link variant=\"body1\" color=\"inherit\" to=\"/hbon/management/sendnotify/list\" component={RouterLink}>\n            Quản lý quiz\n          </Link>\n      </Breadcrumbs>\n      <Typography variant=\"h3\" color=\"textPrimary\">\n          Chỉnh sửa quiz\n        </Typography>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, {\n  useState,\n  useCallback,\n  useEffect\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport QuizTestEditForm from './QuizTestEditForm';\nimport Header from './Header';\nimport { getQuizTest } from 'src/api/quiz';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst QuizTestEditView = (props) => {\n  const {QuizTestId: QuizTestId } = props.match.params;\n\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [quiz_test, setClasses] = useState(null);\n\n  const getQuizTests = useCallback(async () => {\n    try {\n      let quiz_test = await getQuizTest(QuizTestId);\n      if (isMountedRef.current) {\n        setClasses(quiz_test);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getQuizTests();\n  }, [getQuizTests]);\n\n  if (!quiz_test) {\n    return null;\n  }\n  console.log(quiz_test);\n  return (\n    <Page className={classes.root} title=\"Thêm thẻ\">\n      <Container maxWidth={false}>\n        <Header />\n      </Container>\n      <Box mt={3}>\n        <Container maxWidth=\"lg\">\n          <QuizTestEditForm quiz_test = {quiz_test} QuizTestId={QuizTestId} />\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nexport default QuizTestEditView;\n"],"sourceRoot":""}