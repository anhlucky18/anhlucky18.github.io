{"version":3,"sources":["views/schools/events/EventListSubmitView/Header.js","views/schools/events/EventListSubmitView/Results.js","views/schools/events/EventListSubmitView/index.js"],"names":["useStyles","makeStyles","theme","root","action","marginBottom","spacing","marginLeft","Header","className","rest","classes","Grid","clsx","container","justify","item","Breadcrumbs","separator","fontSize","aria-label","Link","variant","color","to","component","RouterLink","Typography","Button","startIcon","SvgIcon","console","log","listAllSubmit","columns","name","label","options","filter","sort","filterType","Results","a","events","title","data","defaultProps","backgroundColor","palette","background","dark","minHeight","paddingTop","paddingBottom","EventListSubmitView","props","eventId","match","params","isMountedRef","useIsMountedRef","useState","setEvents","getEvents","useCallback","current","error","useEffect","Page","Container","maxWidth","Box","mt"],"mappings":"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","file":"static/js/116.7439ccbc.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport {\n  Breadcrumbs,\n  Button,\n  Grid,\n  Link,\n  SvgIcon,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport {\n  PlusCircle as PlusCircleIcon,\n} from 'react-feather';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  action: {\n    marginBottom: theme.spacing(1),\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  }\n}));\n\nconst Header = ({ className, ...rest }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid\n      className={clsx(classes.root, className)}\n      container\n      justify=\"space-between\"\n      spacing={3}\n      {...rest}\n    >\n      <Grid item>\n        <Breadcrumbs\n          separator={<NavigateNextIcon fontSize=\"small\" />}\n          aria-label=\"breadcrumb\"\n        >\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"/hbon/management/schools\"\n            component={RouterLink}\n          >\n            Trang chủ\n          </Link>\n          <Link\n            variant=\"body1\"\n            color=\"inherit\"\n            to=\"#\"\n            component={RouterLink}\n          >\n            Quản lý\n          </Link>\n          <Typography\n            variant=\"body1\"\n            color=\"textPrimary\"\n          >\n            Event\n          </Typography>\n        </Breadcrumbs>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n        >\n          Danh sách event\n        </Typography>\n\n      </Grid>\n\n      <Grid item>\n      <Link\n            to=\"/hbon/management/events/create\"\n            component={RouterLink}\n          >\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          startIcon={\n            <SvgIcon fontSize=\"small\">\n              <PlusCircleIcon />\n            </SvgIcon>\n          }\n        >\n          Thêm Event\n        </Button>\n        </Link>\n      </Grid>\n    </Grid>\n  );\n};\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {listAllSubmit} from '../../../../api/events'\n\nimport MUIDataTable from \"mui-datatables\";\n\nconsole.log(listAllSubmit);\n\nconst columns = [\n  {\n    name: \"display_name\",\n    label: \"Tên\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"school_id\",\n    label: \"Trường\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"point\",\n    label: \"Điểm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"created_at\",\n    label: \"Bắt đầu\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"submit_at\",\n    label: \"Kết thúc\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"time_work\",\n    label: \"Thời gian làm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"email\",\n    label: \"Email\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"grade\",\n    label: \"Điểm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n];\n\n\nconst options = {\n  filterType: 'checkbox',\n};\n\nconst Results = async({\n  className,\n  events,\n  ...rest\n}) => {\n  return (\n    <MUIDataTable\n      title={\"Employee List\"}\n      data={events}\n      columns={columns}\n      options={options}\n    />\n  );\n};\n\nResults.propTypes = {\n  className: PropTypes.string,\n  events: PropTypes.array.isRequired\n};\n\nResults.defaultProps = {\n  events: []\n};\n\nexport default Results;\n","import React, {\n  useState,\n  useEffect,\n  useCallback\n} from 'react';\nimport {\n  Box,\n  Container,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport useIsMountedRef from 'src/hooks/useIsMountedRef';\nimport Header from './Header';\nimport Results from './Results';\nimport {listAllSubmit} from '../../../../api/events'\n\nimport MUIDataTable from \"mui-datatables\";\nimport { WaveLoading } from 'react-loadingg';\n\nconst columns = [\n  {\n    name: \"display_name\",\n    label: \"Tên\",\n    options: {\n      filter: false,\n      sort: true,\n    }\n  },\n  {\n    name: \"school_id\",\n    label: \"Trường\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"point\",\n    label: \"Điểm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"created_at\",\n    label: \"Bắt đầu\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"submit_at\",\n    label: \"Kết thúc\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"time_work\",\n    label: \"Thời gian làm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"email\",\n    label: \"Email\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n  {\n    name: \"grade\",\n    label: \"Điểm\",\n    options: {\n      filter: true,\n      sort: false,\n    }\n  },\n];\n\nconst options = {\n  filterType: 'checkbox',\n};\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3)\n  }\n}));\n\nconst EventListSubmitView = (props) => {\n  const {eventId} = props.match.params;\n  const classes = useStyles();\n  const isMountedRef = useIsMountedRef();\n  const [events, setEvents] = useState([]);\n\n  const getEvents = useCallback(async () => {\n    try {\n      const events = await listAllSubmit(eventId);\n      console.log(events);\n      if (isMountedRef.current) {\n        await setEvents(events);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  }, [isMountedRef]);\n\n  useEffect(() => {\n    getEvents();\n  }, [getEvents]);\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Trường học\"\n    >\n      <Container maxWidth={false}>\n        <Header />\n        <Box mt={3}>\n          <MUIDataTable\n            title={\"List Submit\"}\n            data={events}\n            columns={columns}\n            options={options}\n          />\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nexport default EventListSubmitView;\n"],"sourceRoot":""}